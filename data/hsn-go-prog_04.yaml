- en: Date and Time
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 日期和时间
- en: 'In this chapter, we''re going to learn how to work with dates and times in
    the Go programming language. You will learn how to do basic operations on `DateTime`
    values such as finding the difference between two dates, getting today''s date,
    doing simple arithmetic operations on `DateTime` values, and parsing dates from
    string values. We will cover the following topics in this chapter:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何在Go编程语言中处理日期和时间。你将学习如何对`DateTime`值进行基本操作，比如找到两个日期之间的差异、获取今天的日期、对`DateTime`值进行简单的算术运算以及从字符串值中解析日期。本章将涵盖以下主题：
- en: Finding today's date and time
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 找到今天的日期和时间
- en: Adding and subtracting from a date
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从日期中添加和减去
- en: Finding the difference between two dates
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 找到两个日期之间的差异
- en: Parsing dates and times from strings
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从字符串中解析日期和时间
- en: Finding today's date and time
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 找到今天的日期和时间
- en: 'In this section, we are going to learn how to find today''s date and time.
    We can use `time.Now` to get today''s date, and it imports a `time` package, and
    `time` returns a `time` type, and so we are going to assign this to another variable
    and use the `String` function. The following code will help you understand better:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习如何找到今天的日期和时间。我们可以使用`time.Now`来获取今天的日期，它导入了一个`time`包，`time`返回一个`time`类型，因此我们将其分配给另一个变量并使用`String`函数。以下代码将帮助你更好地理解：
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The output for the preceding code is as follows:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 前面代码的输出如下：
- en: '![](img/eb811292-5437-4c8a-9ece-790933beab03.png)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![](img/eb811292-5437-4c8a-9ece-790933beab03.png)'
- en: 'As you can see, we get a big string here that has everything, and we can, of
    course, format that to our needs. For instance, I can add the `current.Format` function
    and a predefined layout as seen in the following screenshot:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，我们得到了一个包含所有内容的大字符串，当然，我们可以根据需要进行格式化。例如，我可以添加`current.Format`函数和一个预定义的布局，如下面的截图所示：
- en: '[PRE1]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The output to the code shown in the preceding screenshot is as follows:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面截图中显示的代码的输出如下：
- en: '![](img/0db48887-4277-48e0-a361-5e40c9af55bb.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0db48887-4277-48e0-a361-5e40c9af55bb.png)'
- en: 'In the previous screenshot, you will see today''s date. You can also have the
    time and date together by bypassing the layout `snf` , mentioning the format of
    the output (`YYYY-MM-DD hh:mm:ss`) that you want, as shown in the following code:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的截图中，你会看到今天的日期。你也可以通过绕过布局`snf`，提及你想要的输出格式(`YYYY-MM-DD hh:mm:ss`)，来同时获得时间和日期，如下面的代码所示：
- en: '[PRE2]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'On running the code mentioned in the preceding screenshot, we get the following
    output with the year, month, and day, and the time information as well. This can
    be seen in the following screenshot:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行前面截图中提到的代码时，我们得到了以下输出，其中包括年、月、日和时间信息。可以在以下截图中看到：
- en: '![](img/ec22743f-6643-4cdc-8eae-03e05f815e6f.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ec22743f-6643-4cdc-8eae-03e05f815e6f.png)'
- en: So, that's how you can simply get today's date, and format it in various ways,
    in the Go language. In our next section, we're going to learn how to add or subtract
    from date values.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，这就是你如何简单地获取今天的日期，并以各种方式在Go语言中进行格式化。在下一节中，我们将学习如何对日期值进行添加或减去。
- en: Adding and subtracting from a date
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从日期中添加和减去
- en: In this section, we're going to learn how to add and subtract from a date value.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习如何对日期值进行添加和减去操作。
- en: Adding to the date
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加日期
- en: 'Let''s go ahead and learn how to add one month to the current date. But before
    doing that, we''ll need to know the current date. You can do this by following
    the procedure that we learned in our previous section. Consider that I got 8th August
    (`2018-08-08 09:35:16.2687997 +0530 IST m=+0.003951601`) as the output and we
    have to add one more month to this value. By using the `AddDate` function on the  `time`
    type, we can add as many years, months, and days as we want, since it accepts
    three parameters. This is how the entire code will look:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续学习如何向当前日期添加一个月。但在这之前，我们需要知道当前日期。你可以按照我们在上一节中学到的步骤来做到这一点。假设我得到了8月8日(`2018-08-08
    09:35:16.2687997 +0530 IST m=+0.003951601`)作为输出，我们需要在这个值上再添加一个月。通过在`time`类型上使用`AddDate`函数，我们可以添加任意多的年、月和日，因为它接受三个参数。整个代码将如下所示：
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'So, looking at the following screenshot of the output, you will notice that
    we have successfully added one extra month to August by passing the value `1`
    to the second parameter:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，从输出的下面截图中，你会注意到我们通过将值`1`传递给第二个参数，成功地向八月添加了一个额外的月份：
- en: '![](img/3a6073c4-66a5-42d8-ba0f-fb758ab84dbe.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3a6073c4-66a5-42d8-ba0f-fb758ab84dbe.png)'
- en: 'We can carry out the same procedure to add years. You can change the `years:` parameter
    to `1` and have `2018` changed to `2019` in the output. This can be seen in the
    following screenshot:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以执行相同的步骤来添加年份。你可以将`years:`参数更改为`1`，并将输出中的`2018`更改为`2019`。这可以在下面的截图中看到：
- en: '![](img/5b6c8f00-2155-4c1a-96bb-9a670bebc1e8.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5b6c8f00-2155-4c1a-96bb-9a670bebc1e8.png)'
- en: That's pretty much how you add to date values.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是你如何添加日期值。
- en: Subtracting from the date
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从日期中减去
- en: 'The second thing we are going to learn is how to subtract dates from a current
    date. As you can see in the following line of code, we have used the `Sub` method
    because it accepts another `time` type:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们要学习的第二件事是如何从当前日期中减去日期。如你在下面的代码行中所见，我们使用了`Sub`方法，因为它接受另一个`time`类型：
- en: '[PRE4]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Instead, we are going to use `AddDate` and pass a negative value to the parameter.
    So, let''s assign it to another variable and run the following code:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，我们将使用`AddDate`并向参数传递一个负值。因此，让我们将其分配给另一个变量并运行以下代码：
- en: '[PRE5]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The output for the following code will be as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码的输出将如下所示：
- en: '![](img/d3c6bec3-33f8-4673-ac4b-5de57621287d.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d3c6bec3-33f8-4673-ac4b-5de57621287d.png)'
- en: As you can see, we obtained `2018` by subtracting `1` from `2019`.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，我们通过从`2019`中减去`1`获得了`2018`。
- en: Adding time
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加时间
- en: Now, consider that you need to add time instead of months or years. To go ahead,
    we have to use `Add`, which has `duration`, which is the amount of time that you
    want to add.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，假设你需要添加时间而不是月份或年份。为了继续，我们必须使用`Add`，它有`duration`，即你想要添加的时间量。
- en: 'For instance, let''s imagine that we want to add 10 minutes. Check the following
    code:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，让我们假设我们想要添加10分钟。检查以下代码：
- en: '[PRE6]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The code returns another type or value, which is the `time` type, and if you
    look at the output, shown here, we added 10 minutes to the September date:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 该代码返回另一种类型或值，即`time`类型，如果您查看输出，将会看到我们在9月的日期上添加了10分钟：
- en: '![](img/88deb3f1-dc61-49e1-9cee-11d9c9c745f2.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](img/88deb3f1-dc61-49e1-9cee-11d9c9c745f2.png)'
- en: 'Now, if I look at the output, we can see that we added `10` minutes and so `10:10:24`
    has changed to `10:20:24`. If I change `Minute` to `Hour`, and run the code, we
    will see that we added `10` hours from the September date, which can be seen in
    the following code block:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果我看一下输出，我们可以看到我们添加了`10`分钟，所以`10:10:24`变成了`10:20:24`。如果我将`Minute`改为`Hour`，然后运行代码，我们将看到我们从9月的日期中添加了`10`小时，可以在以下代码块中看到：
- en: '[PRE7]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'We will be getting the following output:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将得到以下输出：
- en: '![](img/f1dbdcea-0904-4ee5-9f49-e16905899147.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f1dbdcea-0904-4ee5-9f49-e16905899147.png)'
- en: So, that's basically how you do time adding. In our next section, we are going
    to see how to find the difference between two date values.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，这基本上就是您进行时间添加的方法。在我们的下一节中，我们将看到如何找到两个日期值之间的差异。
- en: Finding the difference between two dates
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查找两个日期之间的差异
- en: 'In this section, we are going to learn how to find the difference between two
    dates. Let''s imagine that we have two dates, as shown in the following code block,
    and you will see that the signature of this method is self-explanatory. So, all
    we have to do is use the following code for the subtract method which subtracts
    the first date from the second one:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习如何找到两个日期之间的差异。假设我们有两个日期，如下面的代码块所示，您将看到此方法的签名是不言自明的。因此，我们只需使用以下代码来减去第一个日期：
- en: '[PRE8]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Now, before we run the code and obtain the output, if you check the signature,
    you will see that the method returns `Duration` instead of the `Time` type between
    the dates:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在我们运行代码并获得输出之前，如果您检查签名，您将看到该方法返回`Duration`而不是日期之间的`Time`类型：
- en: '![](img/80ae7ed8-0d3e-454b-86a8-9718e3375118.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](img/80ae7ed8-0d3e-454b-86a8-9718e3375118.png)'
- en: 'Getting back to running our code, you''ll see the following output:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 回到运行我们的代码，您将看到以下输出：
- en: '![](img/324aafb5-1f42-491c-bb2d-fc30f89e9b59.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](img/324aafb5-1f42-491c-bb2d-fc30f89e9b59.png)'
- en: This is how you simply find the difference between two dates. In our next section,
    we're going to learn how to parse dates and times from a given string.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是您简单地找到两个日期之间的差异。在我们的下一节中，我们将学习如何从给定的字符串中解析日期和时间。
- en: Parsing dates and times from strings
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解析字符串中的日期和时间
- en: In this section, we're going to learn how to parse dates and times from strings.
    This section will conclude our chapter. When you parse dates and times from a
    string, you need two things:  the first is layout and the second item is the actual
    string that you want to parse. So, let's imagine that we have a variable that
    holds the `str := "2018-08-08T11:45:26.371Z"` string value.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习如何从字符串中解析日期和时间。本节将结束我们的章节。当您从字符串中解析日期和时间时，您需要两样东西：第一是布局，第二样是您想要解析的实际字符串。所以，让我们假设我们有一个变量，其中包含`str
    := "2018-08-08T11:45:26.371Z"`的字符串值。
- en: 'In order for Go to understand this, you need to provide a `layout` attribute.
    A `layout` attribute basically describes how your string `DateTime` looks; it
    starts with a year, followed by a month, and day, and then the time. As always,
    the `time` package provides us with various utility functions that we can use
    to play with the date and time. The `Parse` method returns two things, one is
    the parse date and the other one is an error. If anything happens during parsing,
    an error can be thrown and we can check the error and see what went wrong, otherwise
    we will just output the string representation of the time now and the time we
    parsed. So, let''s run the following code:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让Go理解这一点，您需要提供一个`layout`属性。`layout`属性基本上描述了您的字符串`DateTime`的外观；它以年份开头，然后是月份，日期，然后是时间。与往常一样，`time`包为我们提供了各种实用函数，我们可以用来操作日期和时间。`Parse`方法返回两样东西，一个是解析日期，另一个是错误。如果在解析过程中发生任何错误，将会抛出一个错误，我们可以检查错误并查看出了什么问题，否则我们将只输出当前时间和我们解析的时间的字符串表示。所以，让我们运行以下代码：
- en: '[PRE9]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The output to the code we ran is as follows:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们运行的代码的输出如下：
- en: '![](img/3a1c2d95-5493-4519-8444-610368de885d.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3a1c2d95-5493-4519-8444-610368de885d.png)'
- en: As you can see, we captured exactly what we were trying to parse as a date. This
    is how you do the parsing in Go.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，我们准确地捕获了我们试图解析的日期。这就是您在Go中进行解析的方法。
- en: Summary
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter,  we have learned how to find the current date and time, how
    to add to and subtract from dates, how to find the difference between two dates,
    and how to parse dates and times from strings. In the next chapter, you will learn
    how to work with maps and arrays in the Go language. You will see practical examples
    for manipulating and iterating arrays, merging arrays and maps, and testing whether
    a key is present in a map.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何找到当前日期和时间，如何在日期上添加和减去，如何找到两个日期之间的差异，以及如何从字符串中解析日期和时间。在下一章中，您将学习如何在Go语言中使用映射和数组。您将看到操作和迭代数组的实际示例，合并数组和映射，以及测试映射中是否存在键。
