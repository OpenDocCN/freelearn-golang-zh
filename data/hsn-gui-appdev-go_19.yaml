- en: Installation Details
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装详情
- en: In preparation for running the code examples in this book, you will need to
    have both the Go compiler and a C compiler installed (to support Cgo). If either
    of these are not set up, this appendix will guide you through the installation.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 为了运行本书中的代码示例，你需要安装 Go 编译器和 C 编译器（以支持 Cgo）。如果其中任何一个没有设置，这个附录将指导你完成安装。
- en: Installing Go
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 Go
- en: As a relatively new programming language, Go doesn't come pre-installed on many
    operating systems. This section steps through setting it up for any readers who
    haven't already done so.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一种相对较新的编程语言，Go 并没有预安装在许多操作系统上。本节将指导任何尚未设置的用户如何设置它。
- en: Microsoft Windows
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Microsoft Windows
- en: Configuring a development environment for Windows can be complicated as there
    aren't many tools installed by default. Due to this, there are many options for
    setting up using external tools and packages (such as MSYS, MinGW, and Ubuntu
    Subsystem) but exploring these is out of the scope of this book. Thankfully, it's
    possible to start developing Go applications without the need for many additional
    development tools.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 上配置开发环境可能很复杂，因为默认情况下没有安装很多工具。因此，有多个选项可以使用外部工具和包（如 MSYS、MinGW 和 Ubuntu
    子系统）进行设置，但探索这些内容超出了本书的范围。幸运的是，可以在不需要许多额外开发工具的情况下开始开发 Go 应用程序。
- en: Git
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Git
- en: Firstly, if you haven't already done so, you need to download and install Git.
    The download is available at [https://git-scm.com/download/win](https://git-scm.com/download/win),
    and it should start automatically when you visit that page. Run the file that's
    downloaded, and the setup will start (if a notice says this isn't verified then
    tap the Install Anyway button). The default options should work for most users—make
    sure that Use Git from the Windows Command Prompt is selected to avoid more work
    later on.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，如果你还没有这样做，你需要下载并安装 Git。下载可在[https://git-scm.com/download/win](https://git-scm.com/download/win)找到，当你访问该页面时，它应该会自动开始。运行下载的文件，设置程序将开始（如果出现通知表示此程序未经验证，请点击“仍然安装”按钮）。对于大多数用户，默认选项应该可以工作——确保选中“从
    Windows 命令提示符使用 Git”以避免以后更多的麻烦。
- en: 'Once this is completed, open a Command Prompt window (search for `cmd` from
    the Start menu if you don''t have a shortcut) and type `git --version`—you should
    see something like the following output:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 完成这些后，打开一个命令提示符窗口（如果没有快捷方式，可以从开始菜单搜索 `cmd`）并输入 `git --version`——你应该会看到以下类似的输出：
- en: '![](img/4d1fd39f-a4a4-4519-a9df-d98d87365e9b.png)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/4d1fd39f-a4a4-4519-a9df-d98d87365e9b.png)'
- en: Testing Git is installed by checking the version
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 通过检查版本来测试 Git 是否已安装
- en: Go
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Go
- en: Next, you should install Go—that can be found at [https://golang.org/dl/](https://golang.org/dl/).
    On this page, choose the featured Microsoft Windows download (the name will end
    in `.msi`). As with the Git installation, you'll need to run the downloaded file
    and possibly confirm that you would like to continue installing an unverified
    program. Once again, the default values should be suitable—if you change any of
    the configuration, make sure to update the following lines appropriately.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你应该安装 Go——可以在[https://golang.org/dl/](https://golang.org/dl/)找到。在这个页面上，选择推荐的
    Microsoft Windows 下载（文件名将以 `.msi` 结尾）。与 Git 安装一样，你需要运行下载的文件，并可能确认你想要继续安装未经验证的程序。再次提醒，默认值应该合适——如果你更改了任何配置，请确保适当地更新以下行。
- en: 'Once that installer has finished, return to your Command Prompt and type `go
    version`, which should output the version number and quit:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 安装程序完成后，返回你的命令提示符并输入 `go version`，它应该输出版本号然后退出：
- en: '![](img/1b596249-a041-4687-b221-73b9c57de843.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/1b596249-a041-4687-b221-73b9c57de843.png)'
- en: Testing Go is installed by checking the version
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 通过检查版本来测试 Go 是否已安装
- en: Environment
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 环境
- en: 'If the preceding installations succeeded, then your environment should be correctly
    configured. If you made some changes during the installation, you may need to
    make some adjustments to your environment configuration:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果前面的安装成功，那么你的环境应该已经正确配置。如果你在安装过程中做了某些更改，你可能需要调整你的环境配置：
- en: '![](img/14d3b3ab-60f7-44e1-b3bd-c786b96e6a9e.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/14d3b3ab-60f7-44e1-b3bd-c786b96e6a9e.png)'
- en: Checking that our %GOPATH%/bin appears in %PATH%
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 检查我们的 %GOPATH%/bin 是否出现在 %PATH% 中
- en: In the preceding output, you can see that `Git\bin`, `Go\bin`, and `%GOPATH%`
    are included in your `%PATH%` environment for finding executable files. If this
    isn't the case, you may need to log out or reboot for the settings to take effect.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的输出中，您可以看到 `Git\bin`、`Go\bin` 和 `%GOPATH%` 已包含在您的 `%PATH%` 环境中，以便查找可执行文件。如果情况不是这样，您可能需要注销或重启以使设置生效。
- en: Apple macOS
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Apple macOS
- en: Many developer tools (including Git) are installed as part of the `XCode` package.
    If you haven't already installed Xcode for other development work, you can download
    it for free from the Mac App Store. Once installed, you should also set up the
    command-line tools—to do this go to the Xcode menu and select Preferences, then
    Downloads and Install Command Line Tools.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 许多开发者工具（包括 Git）都是作为 `XCode` 软件包的一部分安装的。如果您还没有安装 Xcode 用于其他开发工作，您可以从 Mac App
    Store 中免费下载。安装完成后，您还应设置命令行工具——为此，请转到 Xcode 菜单并选择首选项，然后下载和安装命令行工具。
- en: 'If you''re unsure about whether or not you''ve installed these already, then
    open the Terminal application and execute `xcode-select`—if installed, that will
    execute normally, and if not, you''ll be prompted to run the installation:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您不确定是否已经安装了这些，那么请打开终端应用程序并执行 `xcode-select`——如果已安装，它将正常执行；如果没有，您将被提示运行安装：
- en: '![](img/8d47d251-9ea6-4264-b7be-914242ce89eb.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8d47d251-9ea6-4264-b7be-914242ce89eb.png)'
- en: The installation dialog window if developer tools are not installed
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未安装开发者工具，将显示安装对话框
- en: In addition to these tools, you'll need to install Go. You can get the download
    package from [https://golang.org/dl/](https://golang.org/dl/)—tap the featured
    download link for Apple macOS and run the installer package that downloads. You
    may need to close any open Terminal windows to update your environment variables.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 除了这些工具之外，您还需要安装 Go。您可以从 [https://golang.org/dl/](https://golang.org/dl/) 获取下载包——点击
    Apple macOS 的特色下载链接并运行下载的安装程序包。您可能需要关闭任何打开的终端窗口以更新您的环境变量。
- en: Linux
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Linux
- en: Setting up the prerequisite software on Linux should only require installing
    the correct packages for your distribution. The `git` package will provide the
    source control tools and the Go language should be in the `go` or `golang` package.
    Installing these will provide the necessary commands to run the examples in this
    book. You may need to add `~/go/bin` to your `PATH` environment variable to be
    able to run tools that Go installs later.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Linux 上设置先决软件通常只需要安装您发行版的正确软件包。`git` 软件包将提供版本控制工具，而 Go 语言应包含在 `go` 或 `golang`
    软件包中。安装这些软件包将提供运行本书中示例所需的必要命令。您可能需要将 `~/go/bin` 添加到您的 `PATH` 环境变量中，以便能够运行 Go 安装的工具。
- en: Setting up Cgo
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置 Cgo
- en: To use most of the libraries and functionality explored in this book, you'll
    also need to use Cgo (the built-in Go to C language bridge). Cgo requires the
    availability of a C compiler and some related tools depending on the operating
    system. This section outlines how to set them up.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用本书中探索的大多数库和功能，您还需要使用 Cgo（Go 内置的 C 语言桥接器）。Cgo 需要操作系统可用的一个 C 编译器和一些相关工具。本节概述了如何设置它们。
- en: Microsoft Windows
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Microsoft Windows
- en: For Cgo to function on Windows, you'll need to have the `gcc` (or compatible)
    compiler installed. If Visual Studio is already installed, then you may have a
    C compiler. For those who don't, this section steps through configuring a build
    environment on the command line. The easiest way to get up and running (in my
    experience) is to download and install MSYS2 (a software distribution) and build
    a platform for Windows. Using MSYS2, we can install the `mingw-w64` packages,
    which provide an updated distribution of the *gcc for Windows* project named **mingw**.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Windows 上使 Cgo 正常工作，您需要安装 `gcc`（或兼容的）编译器。如果已经安装了 Visual Studio，那么您可能已经有了一个
    C 编译器。对于那些还没有安装的人来说，本节将指导您在命令行上配置构建环境。根据我的经验，最简单的方法是下载并安装 MSYS2（一个软件发行版）并为 Windows
    构建一个平台。使用 MSYS2，我们可以安装 `mingw-w64` 软件包，这些软件包提供了一个名为 **mingw** 的针对 Windows 的 *gcc*
    项目的更新版。
- en: 'Download the installer from [www.msys2.org/](http://www.msys2.org/)—choose
    either the 32 bit (i686) or 64 bit (x86_64) versions, depending on your computer
    architecture. Once downloaded, run this installer, which will download the basic
    packages to your computer, including the package manager (pacman). Once complete,
    it''ll launch the MSYS Command Prompt, which will be used for any projects requiring
    Cgo. You''ll need to update the `PATH` environment variable to use the existing
    Go and Git installations:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 从[www.msys2.org/](http://www.msys2.org/)下载安装程序——根据你的计算机架构选择32位（i686）或64位（x86_64）版本。下载完成后，运行此安装程序，它将下载基本包到你的计算机上，包括包管理器（pacman）。完成后，它将启动MSYS命令提示符，该提示符将用于任何需要Cgo的项目。你需要更新`PATH`环境变量以使用现有的Go和Git安装：
- en: '![](img/b34100c7-321f-4b38-9d67-6de9eeae4aef.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/b34100c7-321f-4b38-9d67-6de9eeae4aef.png)'
- en: An MSYS console provides access to many additional packages
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: MSYS控制台提供了访问许多额外包的方式
- en: 'Once you have the command line set up, the package manager is used to install
    a C compiler and toolchain as well as `pkg-config` (which is used by Cgo to find
    packages):'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦设置了命令行，包管理器就被用来安装C编译器和工具链以及`pkg-config`（Cgo用来查找包的工具）：
- en: '[PRE0]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Once complete, you''ll be able to execute `gcc` and `pkg-config` from the MSYS
    command line—these tools are essential for a working Cgo setup. The following
    output may display an error, but it shows that the tools are found:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦完成，你将能够从MSYS命令行执行`gcc`和`pkg-config`——这些工具对于Cgo的正常设置是必不可少的。以下输出可能会显示错误，但它表明工具已被找到：
- en: '![](img/1ef8d36a-cb59-4686-83cc-46ee04506484.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/1ef8d36a-cb59-4686-83cc-46ee04506484.png)'
- en: Pacman on MSYS provides the packages we need
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: MSYS上的Pacman提供了我们需要的包
- en: Apple macOS
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Apple macOS
- en: 'To enable Cgo support on macOS, you''ll need the development tools included
    with the Xcode distribution. If you''ve done development work on your Macintosh
    computer before, or if you followed the previous instructions for installing Git
    tools, you''ll already have this installed. If you''ve installed Xcode but not
    used the command-line tools before, then you can install these from a Terminal
    window with the following command:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 要在macOS上启用Cgo支持，你需要Xcode发行版中包含的开发工具。如果你之前在你的Macintosh计算机上做过开发工作，或者如果你遵循了安装Git工具的先前说明，那么你已经有这个安装了。如果你已经安装了Xcode但之前没有使用过命令行工具，那么你可以通过以下命令从终端窗口安装这些工具：
- en: '[PRE1]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Linux
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Linux
- en: 'Cgo on Linux requires the presence of `gcc`, which is often installed by other
    packages in a Linux environment. If executing `gcc` from a Terminal yields an
    error such as `gcc: command not found`, then you''ll need to install the `gcc` package
    from your system''s package manager.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 'Linux上的Cgo需要`gcc`的存在，这通常在Linux环境中由其他包安装。如果从终端执行`gcc`时出现错误，例如`gcc: command not
    found`，那么你需要从你的系统包管理器安装`gcc`包。'
