- en: Comparison of GUI Toolkits
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: GUI工具包比较
- en: 'In this book, we explored seven popular GUI toolkits for the Go language. It''s
    recommended to read each chapter and understand the benefits and potential drawbacks
    of each toolkit before making a decision on which to use in a project. For a quick
    reference, the following table should help to short-list options based on a number
    of important factors:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，我们探讨了Go语言的七个流行GUI工具包。建议在决定在项目中使用哪个工具包之前，阅读每一章并了解每个工具包的优点和潜在缺点。为了快速参考，以下表格应有助于根据多个重要因素缩小选项范围：
- en: '| **Name** | **License** | **Multiple** **Platforms** | **Active** | **Themes**
    | **Native** **widgets** | **Idiomatic** | **Cross compiling** | **Richness**
    |'
  id: totrans-2
  prefs: []
  type: TYPE_TB
  zh: '| **名称** | **许可证** | **多平台** | **活跃状态** | **主题** | **原生小部件** | **惯用性** | **交叉编译**
    | **丰富性** |'
- en: '| Walk | BSD | ✔ | ✔ | ✘ | ✔ | ✔ | ✘ | **↑** |'
  id: totrans-3
  prefs: []
  type: TYPE_TB
  zh: '| Walk | BSD | ✔ | ✔ | ✘ | ✔ | ✔ | ✘ | **↑** |'
- en: '| andlabs UI | MIT | ✔ | ✔ | ✘ | ✔ | **!**¹ | ✔ | **-** |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '| andlabs UI | MIT | ✔ | ✔ | ✘ | ✔ | **!**¹ | ✔ | **-** |'
- en: '| Go-GTK | LGPL² | ✔ | ✔ | ✔ | **!**³ | ✘ | **!**⁴ | **↑** |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '| Go-GTK | LGPL² | ✔ | ✔ | ✔ | **!**³ | ✘ | **!**⁴ | **↑** |'
- en: '| qt | LGPL | ✔ | ✔ | ✔ | **!**³ | ✘ | ✔⁵ | **↑** |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| qt | LGPL | ✔ | ✔ | ✔ | **!**³ | ✘ | ✔⁵ | **↑** |'
- en: '| Shiny | BSD | ✔ | ✘ | **!**⁶ | ✘ | ✔ | ✔ | **↓** |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| Shiny | BSD | ✔ | ✘ | **!**⁶ | ✘ | ✔ | ✔ | **↓** |'
- en: '| nk | MIT | ✔ | ✔ | **!**⁶ | ✘ | ✘ | ✔ | **-** |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| nk | MIT | ✔ | ✔ | **!**⁶ | ✘ | ✘ | ✔ | **-** |'
- en: '| Fyne | BSD | ✔ | ✔ | **!**⁶ | ✘ | ✔ | ✔ | **↓** |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| Fyne | BSD | ✔ | ✔ | **!**⁶ | ✘ | ✔ | ✔ | **↓** |'
- en: ¹ The top, declarative, layer of the andlabs UI is designed for Go development;
    however, it exposes C idioms from the lower-level library.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: ¹ andlabs UI 的顶层、声明性层是为Go开发设计的；然而，它暴露了来自底层库的C语言惯用语。
- en: ² The `go-GTK` library is available in multiple licenses, but the inclusion
    of the GTK+ widgets requires LGPL.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: ² `go-GTK`库有多种许可证，但包含GTK+小部件需要LGPL。
- en: ³ Using theming capabilities, a native-looking user interface can be obtained.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: ³ 使用主题功能，可以获得看起来像原生的用户界面。
- en: ⁴ Cross compiling should be possible, but it requires many libraries to be compiled
    for each target system.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: ⁴ 交叉编译应该是可能的，但需要为每个目标系统编译许多库。
- en: ⁵ The supported way to cross compile is through the use of containers rather
    than directly on the development computer.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: ⁵ 支持交叉编译的方式是通过使用容器，而不是直接在开发计算机上。
- en: ⁶ Themes can be set from code but there's no collection of user installable
    themes.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: ⁶ 主题可以从代码中设置，但没有用户可安装的主题集合。
- en: 'The preceding table should help with the choice of which GUI technology to
    use. There''s no single best option and selection should be made based on your
    most important criteria. Clarification of each heading is as follows:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 上述表格应有助于选择要使用的GUI技术。没有单一的最佳选项，选择应基于您最重要的标准。以下是对每个标题的说明：
- en: '**License:** Every toolkit is available under an open source license that allows
    for open or closed source and commercial usage. However, as a statically compiled
    language, there are complications when using the LGPL. If statically linking with
    an LGPL project, your code should either be distributed under the same license
    or you''ll need to provide an alternative compiled output without the library
    statically linked. The easiest option in this case may be to leave the toolkit
    as a dynamically compiled library that the user would have to install before your
    application can function. Some of the toolkits are available under a separate
    commercial license that can be paid for to avoid licensing complications.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**许可证：**每个工具包都可在开源许可证下获得，允许开源或闭源和商业使用。然而，作为一个静态编译的语言，使用LGPL时会有一些复杂性。如果与LGPL项目静态链接，您的代码应分布在同一许可证下，或者您需要提供一个不包含静态链接库的替代编译输出。在这种情况下，最简单的选项可能是将工具包作为动态编译库，用户在您的应用程序可以运行之前必须安装它。一些工具包可在单独的商业许可证下获得，可以通过付费来避免许可问题。'
- en: '**Multiple Platforms:** A tick mark represents the toolkit supporting at least
    Linux, macOS, and Windows. Some of the options provide support for many more platforms.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**多平台支持：**勾选标记表示工具包至少支持Linux、macOS和Windows。一些选项提供对更多平台的支持。'
- en: '**Active:** Is the project actively maintained? An active project doesn''t
    guarantee the availability of commercial support.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**活跃状态：**项目是否处于活跃维护状态？活跃的项目并不保证商业支持的可获得性。'
- en: '**Themes:** A tick mark represents user installable themes that can customize
    application appearance. Some toolkits support setting a theme using code that
    allows application developers to change the look and feel.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**主题：**勾选标记表示用户可安装的主题，可以自定义应用程序的外观。一些工具包支持使用代码设置主题，允许应用程序开发者更改外观和感觉。'
- en: '**Native Widgets:** Does the framework use native system widgets? A tick means
    that applications will utilize the system widgets. Some toolkits make it possible
    to look like the system widgets by installing a special theme.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**原生组件:** 框架是否使用原生系统组件？勾选表示应用程序将使用系统组件。某些工具包通过安装特殊主题，使得组件看起来像系统组件。'
- en: '**Idiomatic:** Is the toolkit built to fit with the Go language idioms? This
    may not be important to every project, but it can improve the speed of development
    and ease of maintenance. It can also be easier to debug applications that use
    an idiomatic toolkit.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**惯用性:** 工具包是否构建得与Go语言惯用性相匹配？这可能对每个项目都不重要，但它可以提高开发速度和维护的便捷性。使用惯用性工具包的应用程序也更容易调试。'
- en: '**Cross compiling:** Cross compilation is usually important for Go applications.
    Not all toolkits support this completely due to the complexity of working with
    low level graphics libraries.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**交叉编译:** 对于Go应用程序来说，交叉编译通常很重要。由于与底层图形库一起工作的复杂性，并非所有工具包都完全支持这一点。'
- en: '**Richness:** This is a measure of how complete the selection of widgets is.
    An up arrow indicates that you could build a complete application using the provided
    features. A bar (neither up nor down) shows that most applications should be possible
    but that it may be necessary to construct complex widgets using the available
    components. A down arrow shows a minimal widget set—simple or medium complexity applications
    are possible but many widgets would need to be built from the basic components
    provided.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**丰富性:** 这是对组件选择完整性的衡量。向上箭头表示可以使用提供的功能构建一个完整的应用程序。水平条（既不向上也不向下）表示大多数应用程序应该是可能的，但可能需要使用可用的组件构建复杂组件。向下箭头表示组件集最小——简单或中等复杂度的应用程序是可能的，但许多组件需要从提供的基本组件构建。'
