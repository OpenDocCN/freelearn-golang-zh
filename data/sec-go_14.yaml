- en: Conclusions
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Recapping the topics you have learned
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结你学到的主题
- en: 'So far in this book, we covered many topics about Go and information security.
    The topics covered are useful for a variety of people, including developers, penetration
    testers, SOC analysts, computer forensic analysts, network and security engineers,
    and DevOps engineers. Here is a high-level recap of the topics covered:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，在这本书中，我们涵盖了关于Go和信息安全的许多主题。涵盖的主题对各种人都有用，包括开发人员、渗透测试人员、SOC分析师、计算机取证分析师、网络和安全工程师以及DevOps工程师。以下是涵盖的主题的高层回顾：
- en: The Go programming language
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Go编程语言
- en: Working with files
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理文件
- en: Forensics
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 取证
- en: Packet capture and injection
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据包捕获和注入
- en: Cryptography
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密码学
- en: Secure shell (SSH)
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全外壳（SSH）
- en: Brute force
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 暴力破解
- en: Web applications
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web应用程序
- en: Web scraping
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web抓取
- en: Host discovery and enumeration
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主机发现和枚举
- en: Social engineering and honeypots
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 社会工程和蜜罐
- en: Post exploitation
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 后渗透
- en: More thoughts on the usage of Go
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于Go的更多想法
- en: Go is a great language, and it is a reliable choice for many use cases, but,
    like any other language, it is not the be-all-and-end-all language. As the old
    saying goes, "Always choose the best tool for the job." Throughout this book,
    we looked at the versatility of Go and the standard library. Go is also great
    for performance, reliability in production, concurrency, and memory usage, but
    the strong static type system may slow development, making Python a better choice
    for a simple proof of concept. Interestingly, you can extend Python using Go by
    writing Python modules in Go.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Go是一种很棒的语言，对于许多用例来说是一个可靠的选择，但和其他语言一样，并不是万能的语言。正如古话所说，“永远选择最适合的工具。”在整本书中，我们看到了Go和标准库的多才多艺。Go在性能、生产可靠性、并发性和内存使用方面也很出色，但强大的静态类型系统可能会减慢开发速度，使得Python在简单概念验证方面更好。有趣的是，你可以通过用Go编写Python模块来扩展Python。
- en: The C programming language may be a better choice in some situations when you
    don't want a garbage collector but need to compile the smallest binary possible.
    Go does provide an unsafe package, which allows you to bypass the type safety,
    but it does not give as much control as the C language. Go allows you to wrap
    C libraries and create bindings so that you can utilize any C library that does
    not have a Go equivalent.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，当你不想要垃圾收集器但需要编译最小的二进制文件时，C编程语言可能是更好的选择。Go确实提供了一个不安全的包，允许你绕过类型安全，但它并不像C语言那样提供那么多控制。Go允许你包装C库并创建绑定，以便你可以利用任何没有Go等效的C库。
- en: Both Go and the cybersecurity industry show signs of growth. Go is continuing
    to evolve as a language, and some of the weaker areas of the language are starting
    to see promising signs. For example, GUI libraries such as Qt and Gtk are being
    wrapped in Go, and with 3D graphics libraries such as OpenGL also have wrappers.
    Even mobile development is possible and continuing to improve.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Go和网络安全行业都显示出增长的迹象。Go作为一种语言正在不断发展，语言的一些薄弱领域也开始出现有希望的迹象。例如，GUI库（如Qt和Gtk）正在被Go包装，而具有3D图形库（如OpenGL）也有包装器。甚至移动开发也是可能的，并且不断改进。
- en: There are other useful packages in the standard library we didn't even cover,
    such as the `binary` package for manipulation binary data, the `xml` package for
    encoding and decoding XML documents, and the `flag` package for parsing command-line
    arguments.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 标准库中还有其他有用的包，我们甚至没有涵盖，比如用于操作二进制数据的`binary`包，用于编码和解码XML文档的`xml`包，以及用于解析命令行参数的`flag`包。
- en: What I hope you take away from the book
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我希望你从这本书中学到的东西
- en: After reading this book, you should have a good idea of what packages are available
    in the standard library and how versatile Go can be out of the box. You should
    feel comfortable using Go for a variety of tasks, from simple tasks, such as working
    with files and making a network connection, to more advanced tasks, such as scraping
    websites and capturing packets. I also hope you gleaned some tips for writing
    idiomatic Go code.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读完这本书后，你应该对标准库中提供的包有一个很好的了解，并且知道Go在开箱即用时有多么多才多艺。你应该可以放心地使用Go来完成各种任务，从简单的任务，比如处理文件和建立网络连接，到更高级的任务，比如抓取网站和捕获数据包。我还希望你能从中获得一些编写符合惯用法的Go代码的技巧。
- en: The example programs provided should serve as references for building your own
    tools. Many of the programs are useful as-is and can be incorporated into your
    toolkit immediately, while a few are meant only to serve as a reference to help
    you perform common tasks.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 提供的示例程序应该作为构建自己工具的参考。许多程序可以直接使用，并立即纳入你的工具包，而有些只是作为参考，帮助你执行常见任务。
- en: Be aware of legal, ethical, and technical boundaries
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 注意法律、道德和技术边界
- en: It is critical to be aware of the possible repercussions for any action you
    take against a machine or network. There are legal boundaries that can result
    in a fine or imprisonment, depending on the laws and jurisdiction. For example,
    in the United States, the **Computer Fraud and Abuse Act** (**CFAA**) makes it
    illegal to access a computer without authorization. Don't always assume that the
    client authorizing the scope of your penetration test has the right to authorize
    you on every device. Companies can lease physical servers or rent virtual or physical
    space in a data center that they do not own, requiring you to get authorization
    from other sources as well.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 对于你对计算机或网络采取的任何行动，了解可能的后果至关重要。根据法律和司法管辖区的不同，可能会有法律边界，导致罚款或监禁。例如，在美国，《计算机欺诈和滥用法》（CFAA）使未经授权访问计算机成为非法行为。不要总是假设授权你进行渗透测试范围的客户有权授权你访问每台设备。公司可以租用物理服务器或在数据中心租用虚拟或物理空间，而这些设备并非所有权，因此你需要从其他来源获取授权。
- en: There are also ethical boundaries to be aware of, which are different from the
    legal boundaries. Ethical boundaries can be a gray area for some people. For example,
    with social engineering, if you target employees, do you think it is acceptable
    to attempt the social engineering outside of work hours? Is it acceptable to send
    phishing emails to their personal email address? Is it acceptable to impersonate
    another employee and lie to someone? Other aspects of ethics involve how you behave
    on compromised servers and what you do with the data you find. Is it acceptable
    to store client data off-site if it was exfiltrated during a penetration test?
    Is it acceptable to create your own user on a client's production server during
    a penetration test? Some people may disagree on where the ethical boundary lies
    for different situations. It is important to be conscious of these types of things
    and to discuss them with any client prior to an engagement.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一些道德边界需要注意，这些与法律边界不同。道德边界对一些人来说可能是一个灰色地带。例如，对于社会工程，如果你针对员工，你认为在工作时间之外尝试社会工程是可以接受的吗？向他们的个人邮箱发送钓鱼邮件是否可以接受？冒充另一名员工并对某人撒谎是否可以接受？道德的其他方面涉及你在受损服务器上的行为以及你对发现的数据的处理。如果在渗透测试期间泄露了客户数据，将其存储在离线位置是否可以接受？在渗透测试期间在客户的生产服务器上创建自己的用户是否可以接受？对于不同情况，有些人可能对道德边界的位置持不同意见。重要的是要意识到这些类型的事情，并在参与之前与任何客户讨论。
- en: In addition to the legal and ethical aspects, it is also imperative to understand
    the technical repercussions and the physical load your tools put on servers, networks,
    load balancers, switches, and so on. Make sure that you set sane limits on web
    crawlers and brute forcers. Also, make sure that you log and track any actions
    you take so that you can undo any permanent changes. If you are performing a penetration
    test for a client, you should never leave unnecessary files you created on their
    servers. For example, if you install a reverse bind shell, make sure that you
    uninstall it. If you modify file permissions or install a bind shell, make sure
    that you are not opening up the client to outside attacks.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 除了法律和道德方面，了解工具对服务器、网络、负载均衡器、交换机等的技术影响和物理负载也是至关重要的。确保在网络爬虫和暴力破解器上设置合理的限制。此外，确保记录和跟踪你所采取的任何行动，以便你可以撤销任何永久性的更改。如果你为客户执行渗透测试，你不应该在他们的服务器上留下不必要的文件。例如，如果你安装了一个反向绑定shell，确保你卸载它。如果你修改了文件权限或安装了一个绑定shell，请确保你没有让客户暴露在外部攻击之下。
- en: There are a lot of things to be conscious of when working in the security field,
    but a lot of it comes down to common sense and being cautious. Respect the servers
    you are attacking, and don't take any action if you don't understand the implications.
    If you are unsure, seek guidance from a trusted and experienced peer or the community.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在安全领域工作时有很多需要注意的事情，但很多都归结为常识和谨慎。尊重你攻击的服务器，如果你不明白后果，不要采取任何行动。如果不确定，寻求来自可信赖和有经验的同行或社区的指导。
- en: Where to go from here
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 接下来该做什么
- en: Start building your toolbox and cookbook. Use the examples that are useful to
    you and customize them to suit your needs. Take some of the existing examples
    and expand upon them. Can you think of other ideas? How can you modify some of
    the programs to be more useful? Are any of the examples useful as-is in your own
    toolbox? Do they give you any ideas for other custom tools? Explore more of the
    Go standard library and write applications to fill your toolbox.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 开始建立你的工具箱和菜谱。使用对你有用的示例，并根据自己的需求进行定制。利用现有示例并加以扩展。你能想到其他的想法吗？你如何修改一些程序使其更有用？有没有一些示例在你自己的工具箱中可以直接使用？它们给了你其他自定义工具的想法吗？探索更多Go标准库并编写应用程序来填充你的工具箱。
- en: Start practicing and using some of the tools provided. You may need to find
    or build your own test network, or just a simple VM, or find a bug bounty program.
    If you decide to try out bug bounties, be sure to read the scope and rules with
    a microscope. To put your new tools and skills in to action, research application
    testing and network penetration methodologies. If you want to become a penetration
    tester or just want to learn more about penetration testing methodology and practice
    in a safe lab environment, then, I highly recommend the **Offensive Security Certified
    Professional** (**OSCP**) course offered by Offensive Security at [https://www.offensive-security.com/information-security-certifications/oscp-offensive-security-certified-professional/](https://www.offensive-security.com/information-security-certifications/oscp-offensive-security-certified-professional/).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 开始练习并使用提供的一些工具。你可能需要找到或构建自己的测试网络，或者只是一个简单的虚拟机，或者找到一个漏洞赏金计划。如果你决定尝试漏洞赏金计划，请务必仔细阅读范围和规则。要将你的新工具和技能付诸实践，研究应用程序测试和网络渗透方法。如果你想成为一名渗透测试员或者只是想了解更多关于渗透测试方法和在安全实验室环境中的实践，那么我强烈推荐Offensive
    Security在[https://www.offensive-security.com/information-security-certifications/oscp-offensive-security-certified-professional/](https://www.offensive-security.com/information-security-certifications/oscp-offensive-security-certified-professional/)提供的**Offensive
    Security Certified Professional**（**OSCP**）课程。
- en: Getting help and learning more
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取帮助和学习更多
- en: 'To learn more about Go, its language design and specification, and the standard
    library, check out these links:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于Go、其语言设计和规范以及标准库的信息，请查看以下链接：
- en: The built-in documentation of godoc
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: godoc的内置文档
- en: 'Online Go documentation: [https://golang.org/doc/](https://golang.org/doc/)'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在线Go文档：[https://golang.org/doc/](https://golang.org/doc/)
- en: 'A tour of learning the Go language: [https://tour.golang.org/](https://tour.golang.org/)'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习Go语言的导览：[https://tour.golang.org/](https://tour.golang.org/)
- en: 'Go standard library documentation: [https://golang.org/pkg/](https://golang.org/pkg/)'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Go标准库文档：[https://golang.org/pkg/](https://golang.org/pkg/)
- en: 'Communities are a great place to get help and find others to collaborate. Online
    communities and in-person communities each have their pros and cons. Here are
    a few places to seek help for Go:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 社区是获取帮助和找到合作伙伴的好地方。在线社区和线下社区各有利弊。以下是一些寻求Go帮助的地方：
- en: 'The #go-nuts Freenode.net IRC channel: [http://irc.lc/freenode/go-nuts](http://irc.lc/freenode/go-nuts)'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '#go-nuts Freenode.net IRC 频道: [http://irc.lc/freenode/go-nuts](http://irc.lc/freenode/go-nuts)'
- en: 'The Go Forum: [https://forum.golangbridge.org](https://forum.golangbridge.org)'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Go 论坛: [https://forum.golangbridge.org](https://forum.golangbridge.org)'
- en: 'The Go Nuts mailing list: [https://groups.google.com/group/golang-nuts](https://groups.google.com/group/golang-nuts)'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Go Nuts 邮件列表: [https://groups.google.com/group/golang-nuts](https://groups.google.com/group/golang-nuts)'
- en: 'Local meetups: [https://www.meetup.com](https://www.meetup.com)'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '本地见面会: [https://www.meetup.com](https://www.meetup.com)'
- en: 'Go FAQ: [https://golang.org/doc/faq](https://golang.org/doc/faq)'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Go FAQ: [https://golang.org/doc/faq](https://golang.org/doc/faq)'
- en: 'Stack Overflow: [https://stackoverflow.com](https://stackoverflow.com)'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Stack Overflow: [https://stackoverflow.com](https://stackoverflow.com)'
- en: 'Golang Subreddit: [https://www.reddit.com/r/golang/](https://www.reddit.com/r/golang/)'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Golang Subreddit: [https://www.reddit.com/r/golang/](https://www.reddit.com/r/golang/)'
- en: Continue learning by applying the knowledge learned from this book. Write your
    own tools to reach your goals. Explore other third-party packages, or consider
    wrapping or porting a C library that Go is lacking. Experiment with the language.
    The most important thing is just to continue learning!
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 继续学习，应用从本书中学到的知识。编写自己的工具来实现目标。探索其他第三方包，或考虑包装或移植 Go 缺少的 C 库。尝试使用这种语言。最重要的是继续学习！
