- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Cloud computing and microservices are two very important concepts in modern
    software architecture. They represent key skills that ambitious software engineers
    need to acquire in order to design and build software applications capable of
    performing and scaling. Go is a modern cross-platform programming language that
    is very powerful yet simple; it is an excellent choice for microservices and cloud
    applications. Go is gaining increasing popularity and becoming a very attractive
    skill.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 云计算和微服务是现代软件架构中非常重要的概念。它们代表了雄心勃勃的软件工程师需要掌握的关键技能，以便设计和构建能够执行和扩展的软件应用程序。Go是一种现代的跨平台编程语言，非常强大而简单；它是微服务和云应用的绝佳选择。Go正变得越来越受欢迎，成为一种非常有吸引力的技能。
- en: The book will take you on a journey into the world of microservices and cloud
    computing with the help of Go. It will start by covering the software architectural
    patterns of cloud applications as well as practical concepts regarding how to
    scale, distribute, and deploy those applications. From there, the book will dive
    deep into the techniques and design approaches that are needed for writing production-level
    microservices and their deployment into typical cloud environments.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将带您进入微服务和云计算的世界，借助Go语言。它将从涵盖云应用程序的软件架构模式开始，以及关于如何扩展、分发和部署这些应用程序的实际概念。从那里，本书将深入探讨编写生产级微服务及其在典型云环境中部署所需的技术和设计方法。
- en: After completing this book, you will have learned how to write effective production-grade
    microservices that are deployable to the cloud, practically understand the world
    of Amazon Web Services, and know how to build non-trivial Go applications.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 完成本书后，您将学会如何编写有效的生产级微服务，可以部署到云中，实际了解亚马逊云服务的世界，并知道如何构建非平凡的Go应用程序。
- en: What this book covers
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖的内容
- en: '[Chapter 1](def2621c-74c4-4f60-a37a-b0b2f86c6339.xhtml), *Modern Microservice
    Architectures*, opens the book by describing typical features of cloud-based applications
    and microservice architectures. We will also establish requirements and a high-level
    architecture for a fictional application that will serve as a continuous example
    over the following chapters of this book.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 《现代微服务架构》第1章通过描述基于云的应用程序和微服务架构的典型特征来开启本书。我们还将为一个虚构的应用程序建立需求和高层架构，该应用程序将作为本书后续章节的持续示例。
- en: Chapter 2, *Building Microservices Using REST APIs*, discusses how to build
    modern microservices with the Go language. We will cover important and non-trivial
    topics. By the end of this chapter, you will have enough knowledge to build microservices
    that can expose RESTFul APIs, support persistence, and can effectively communicate
    with other services.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 第2章《使用REST API构建微服务》讨论了如何使用Go语言构建现代微服务。我们将涵盖重要且非平凡的主题。通过本章的学习，您将具备足够的知识来构建可以暴露RESTFul
    API、支持持久性并能有效与其他服务通信的微服务。
- en: Chapter 3, *Securing Microservices*, shows you how to secure your microservices.
    You will get to learn about how to handle certificates and HTTPS in the Go language.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 第3章《保护微服务》向您展示如何保护您的微服务。您将学习如何在Go语言中处理证书和HTTPS。
- en: '[Chapter 4](34c20397-6b29-4142-a491-73f710111135.xhtml), *Asynchronous Microservice
    Architectures*, presents how to implement an asynchronous microservice architecture
    using message queues. For this, we will give an overview on established message
    queuing software, such as RabbitMQ and Apache Kafka, and present Go libraries
    to integrate these components into your software. We will also discuss architectural
    patterns such as Event Collaboration and Event Sourcing that work well together
    with asynchronous architectures.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 第4章《异步微服务架构》介绍了如何使用消息队列实现异步微服务架构。为此，我们将概述已建立的消息队列软件，如RabbitMQ和Apache Kafka，并介绍Go库，以将这些组件集成到您的软件中。我们还将讨论与异步架构配合良好的事件协作和事件溯源等架构模式。
- en: Chapter 5, *Building a Frontend with React*, takes a small detour from the Go
    world into the JavaScript world and shows you how to build a web frontend for
    the microservice-based project using the React framework. For this, we will give
    a short overview over the basic architectural principles of React and how to build
    a React-based frontend for existing REST APIs.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 第5章《使用React构建前端》从Go世界稍微偏离，进入JavaScript世界，并向您展示如何使用React框架为基于微服务的项目构建Web前端。为此，我们将简要概述React的基本架构原则，以及如何为现有的REST
    API构建基于React的前端。
- en: Chapter 6, *Deploying Your Application in Containers*, shows how to deploy Go
    applications in a portable and reproducible way using application containers.
    You will learn to install and using Docker and how to build custom Docker images
    for your own Go applications. Furthermore, we will describe how to use the Kubernetes
    orchestration engine to deploy containerized applications in large-scale cloud
    environments.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 第6章《在容器中部署您的应用程序》展示了如何使用应用程序容器以便携和可重复的方式部署Go应用程序。您将学习安装和使用Docker，以及如何为自己的Go应用程序构建自定义Docker镜像。此外，我们还将描述如何使用Kubernetes编排引擎在大规模云环境中部署容器化应用程序。
- en: Chapter 7, *AWS – Fundamentals, AWS SDK for Go and AWS EC2*, is the first of
    two chapters to cover  the AWS ecosystem. In this chapter, we will cover AWS in
    practical details. You will get exposed to several important concepts like how
    to setup AWS server instances , how to utilize the AWS API features, and how to
    write Go applications that are capable of interacting with AWS.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 第7章《AWS - 基础知识，AWS Go SDK和AWS EC2》是两章中的第一章，涵盖了AWS生态系统。在本章中，我们将详细介绍AWS。您将接触到一些重要的概念，比如如何设置AWS服务器实例，如何利用AWS
    API功能，以及如何编写能够与AWS交互的Go应用程序。
- en: Chapter 8, *AWS – S3, SQS, API Gateway, and DynamoDB*, continues to cover the
    AWS ecosystem in more detail. You will dive deeper into popular services in the
    AWS world. By the end of this chapter, you will have enough knowledge to build
    non-trivial Go cloud applications using the powers of Amazon Web Services.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 第8章，“AWS – S3、SQS、API Gateway和DynamoDB”，继续更详细地介绍了AWS生态系统。您将深入了解AWS世界中的热门服务。通过本章结束时，您将具备足够的知识，能够利用亚马逊云服务的功能构建非平凡的Go云应用程序。
- en: Chapter 9, *Continuous Delivery*, describes how to implement a basic Continuous
    Delivery pipeline for your Go applications. For this, we will describe the basic
    principles of CD and how to implement a simple pipeline using tools such as Travis
    CI and Gitlab. We will use Docker images as deployment artifacts and deploy these
    images into a Kubernetes cluster, thus building on the topics and skills covered
    in [Chapter 4](0a806398-0654-46f9-8e6f-02af9334821b.xhtml), *Asynchronous Microservice
    Architectures*.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 第9章，“持续交付”，描述了如何为Go应用程序实现基本的持续交付流水线。为此，我们将描述持续交付的基本原则，以及如何使用Travis CI和Gitlab等工具实现简单的流水线。我们将使用Docker镜像作为部署工件，并将这些镜像部署到Kubernetes集群中，从而构建在第4章，“异步微服务架构”中涵盖的主题和技能基础上。
- en: Chapter 10, *Monitoring Your Application*, shows you how to monitor your microservice
    architecture using Prometheus and Grafana. We will cover the basic architecture
    of Prometheus and describe how to set up a Prometheus instance using Docker. Also,
    you will learn how to adjust your Go applications to expose metrics that can be
    scraped by Prometheus. We will also describe how to set up a graphical user interface
    for Prometheus using Grafana.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 第10章，“监控您的应用程序”，向您展示了如何使用Prometheus和Grafana监控您的微服务架构。我们将介绍Prometheus的基本架构，并描述如何使用Docker设置Prometheus实例。此外，您还将学习如何调整您的Go应用程序以公开可以被Prometheus抓取的指标。我们还将描述如何使用Grafana为Prometheus设置图形用户界面。
- en: '[Chapter 11](1b9e8bd9-c7a6-46ce-87f7-d45631865e07.xhtml), *Migration*, covers
    practical factors and approaches to consider when migrating from legacy monolithic
    applications into modern microservices cloud-ready applications.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 第11章，“迁移”，涵盖了从传统的单片应用程序迁移到现代微服务云应用程序时需要考虑的实际因素和方法。
- en: '[Chapter 12](b01fc8b9-53af-4704-932d-d96481ce1f9d.xhtml), *Where to Go from
    Here?*, shows you where to continue the learning journey from here. It will cover
    other modern cloud-related technologies that deserve to be explored, such as alternative
    communication protocols, other cloud providers, and new architectural paradigms
    that might be the next big thing.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 第12章，“下一步该去哪里？”，向您展示了从这里继续学习旅程的方向。它将涵盖其他现代与云相关的技术，值得探索，比如替代通信协议、其他云提供商，以及可能成为下一个大事件的新架构范式。
- en: What you need for this book
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书所需内容
- en: For this book, you should have some basic knowledge of the Go programming language
    (if you're still looking to get started with Go, we can recommend the book *Learning
    Go Programming* by Vladimir Vivien, also published by Packt). To run the code
    examples provided in this book, you will also need a working Go SDK on your local
    machine (Go 1.7 or newer). Head to [https://golang.org/dl/](https://golang.org/dl/)
    for download and installation instructions.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本书，您应该具备一些Go编程语言的基本知识（如果您仍在寻求开始学习Go，我们可以推荐Packt出版的Vladimir Vivien的书《学习Go编程》）。为了运行本书提供的代码示例，您还需要在本地计算机上安装一个可用的Go
    SDK（Go 1.7或更新版本）。请前往[https://golang.org/dl/](https://golang.org/dl/)获取下载和安装说明。
- en: For many of the practical examples in the book, you will need a working Docker
    installation (although previous experience in working with Docker is not required).
    Take a look at [https://www.docker.com/community-edition](https://www.docker.com/community-edition)
    for download and installation instructions.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的许多实际示例中，您将需要一个可用的Docker安装（尽管不需要有使用Docker的先前经验）。请查看[https://www.docker.com/community-edition](https://www.docker.com/community-edition)获取下载和安装说明。
- en: For working with React in [Chapter 5](82bdbb64-f1d4-42fb-9532-ecd5feca2ba7.xhtml),
    *Building a Frontend With React*, you will also need some basic knowledge in JavaScript
    programming and a working Node.JS installation on your local machine. You can
    download the current release of Node.JS from [https://nodejs.org/en/#download](https://nodejs.org/en/#download).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在第5章，“使用React构建前端”，您还需要一些基本的JavaScript编程知识，以及本地计算机上安装的Node.JS。您可以从[https://nodejs.org/en/#download](https://nodejs.org/en/#download)下载当前版本的Node.JS。
- en: Who this book is for
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书的目标读者
- en: This book is targeted at Go developers who want to build secure, resilient,
    robust, and scalable applications that are cloud native. Some knowledge of web
    services and web programming should be sufficient to get you through the book.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 本书面向希望构建安全、弹性、健壮和可扩展云原生应用程序的Go开发人员。一些关于Web服务和Web编程的知识应该足以帮助您完成本书。
- en: Conventions
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 约定
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，您将找到一些区分不同信息类型的文本样式。以下是一些这些样式的示例及其含义的解释。
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "The `react-router-dom` package
    adds a few new components to our application."'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 文本中的代码词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter句柄都显示如下：“`react-router-dom`包为我们的应用程序添加了一些新组件。”
- en: 'A block of code is set as follows:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都将如下所示：
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "For this, click on the Create Repository after logging in and choose a
    new name for your image."'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**新术语**和**重要词汇**以粗体显示。屏幕上看到的单词，例如菜单或对话框中的单词，会在文本中出现，就像这样：“为此，请在登录后点击“创建存储库”，并为您的图像选择一个新名称。”'
- en: Warnings or important notes appear in a box like this.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要提示会以这样的方式出现在框中。
- en: Tips and tricks appear like this.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 提示和技巧会以这样的方式出现。
