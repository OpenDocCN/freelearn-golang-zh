- en: All about Databases and Storage
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于数据库和存储的一切
- en: Go applications frequently need to make use of long-term storage. This is usually
    in the form of relational and non-relational databases, as well as key-value stores
    and more. When working with these storage applications, it helps to wrap your
    operations in an interface. The recipes in this chapter will examine various storage
    interfaces, consider parallel access with things such as connection pools, and
    look at general tips for integrating a new library, which is often the case when
    using a new storage technology.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Go应用程序经常需要使用长期存储。这通常以关系和非关系数据库的形式存在，以及键值存储等。在处理这些存储应用程序时，将操作封装在接口中是有帮助的。本章的配方将检查各种存储接口，考虑诸如连接池等并行访问的问题，并查看集成新库的一般提示，这在使用新的存储技术时经常发生。
- en: 'In this chapter, the following recipes will be covered:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，将涵盖以下配方：
- en: Using the database/sql package with MySQL
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用database/sql包与MySQL
- en: Executing a database transaction interface
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行数据库事务接口
- en: Connection pooling, rate limiting, and timeouts for SQL
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接池、速率限制和SQL的超时
- en: Working with Redis
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Redis
- en: Using NoSQL with MongoDB
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用MongoDB的NoSQL
- en: Creating storage interfaces for data portability
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建数据可移植性的存储接口
- en: Using the database/sql package with MySQL
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用database/sql包与MySQL
- en: Relational databases are some of the most well understood and common database
    options. MySQL and PostgreSQL are two of the most popular open-source relational
    databases. This recipe will demonstrate the `database/sql` package, which provides
    hooks for a number of relational databases and automatically handles connection
    pooling and connection duration, and gives access to a number of basic database
    operations.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 关系数据库是一些最为人熟知和常见的数据库选项。MySQL和PostgreSQL是两种最流行的开源关系数据库。这个配方将演示`database/sql`包，它提供了一些关系数据库的钩子，并自动处理连接池和连接持续时间，并提供了一些基本的数据库操作。
- en: This recipe will make use of a MySQL database to establish a connection, insert
    some simple data, and query it. It will clean up the database after use by dropping
    the table.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配方将使用MySQL数据库建立连接，插入一些简单的数据并查询它。它将在使用后通过删除表来清理数据库。
- en: Getting ready
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Configure your environment according to these steps:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 根据以下步骤配置你的环境：
- en: Download and install Go 1.12.6 or greater on your operating system at [https://golang.org/doc/install](https://golang.org/doc/install).
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的操作系统上下载并安装Go 1.12.6或更高版本，网址为[https://golang.org/doc/install](https://golang.org/doc/install)。
- en: Open a Terminal or console application, create a project directory such as `~/projects/go-programming-cookbook`
    and navigate to this directory. All code will be run and modified from this directory.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个终端或控制台应用程序，创建一个项目目录，比如`~/projects/go-programming-cookbook`，并导航到该目录。所有的代码都将在这个目录中运行和修改。
- en: 'Clone the latest code into `~/projects/go-programming-cookbook-original` and
    optionally work from that directory rather than typing the examples manually,
    as follows:'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将最新的代码克隆到`~/projects/go-programming-cookbook-original`，并选择从该目录工作，而不是手动输入示例。
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Install and configure MySQL using [https://dev.mysql.com/doc/mysql-getting-started/en/](https://dev.mysql.com/doc/mysql-getting-started/en/).
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用[https://dev.mysql.com/doc/mysql-getting-started/en/](https://dev.mysql.com/doc/mysql-getting-started/en/)安装和配置MySQL。
- en: Run the `export MYSQLUSERNAME=<your mysql username>` command.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`export MYSQLUSERNAME=<your mysql username>`命令。
- en: Run the `export MYSQLPASSWORD=<your mysql password>` command.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`export MYSQLPASSWORD=<your mysql password>`命令。
- en: How to do it...
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'These steps cover writing and running your application:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这些步骤涵盖了编写和运行应用程序的过程：
- en: From your Terminal or console application, create a new directory called `~/projects/go-programming-cookbook/chapter6/database`
    and navigate to this directory.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从你的终端或控制台应用程序中，创建一个名为`~/projects/go-programming-cookbook/chapter6/database`的新目录，并导航到该目录。
- en: 'Run the following command:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令：
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'You should see a file called `go.mod` that containing the following:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该看到一个名为`go.mod`的文件，其中包含以下内容：
- en: '[PRE2]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Copy tests from `~/projects/go-programming-cookbook-original/chapter6/database`,
    or use this as an exercise to write some code of your own!
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从`~/projects/go-programming-cookbook-original/chapter6/database`复制测试，或者利用这个练习编写一些自己的代码！
- en: 'Create a file called `config.go` with the following content:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`config.go`的文件，内容如下：
- en: '[PRE3]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Create a file called `create.go` with the following content:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`create.go`的文件，内容如下：
- en: '[PRE4]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Create a file called `query.go` with the following content:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`query.go`的文件，内容如下：
- en: '[PRE5]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Create a file called `exec.go` with the following content:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`exec.go`的文件，内容如下：
- en: '[PRE6]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Create and navigate to the `example` directory.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建并导航到`example`目录。
- en: 'Create a file called `main.go` with the following content:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`main.go`的文件，内容如下：
- en: '[PRE7]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Run `go run main.go`.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`go run main.go`。
- en: 'You could also run the following command:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你也可以运行以下命令：
- en: '[PRE8]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'You should see the following output:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该看到以下输出：
- en: '[PRE9]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The `go.mod` file may be updated and `go.sum` file should now be present in
    the top-level recipe directory.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`go.mod`文件可能会被更新，顶层配方目录中现在应该存在`go.sum`文件。'
- en: If you copied or wrote your own tests, go up one directory and run `go test`.
    Ensure that all the tests pass.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你复制或编写了自己的测试，返回上一级目录并运行`go test`。确保所有测试都通过。
- en: How it works...
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The `_ "github.com/go-sql-driver/mysql"` line of code is how you connect various
    database connectors to the `database/sql` package. There are also alternative
    MySQL packages that can be imported in the same way for similar results. The commands
    would be similar if you were to connect to PostgreSQL, SQLite, or any others that
    implement the `database/sql` interfaces.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 代码中的`_ "github.com/go-sql-driver/mysql"`行是将各种数据库连接器连接到`database/sql`包的方法。还有其他可以以类似方式导入的MySQL包，以获得类似的结果。如果你要连接到PostgreSQL、SQLite或其他实现了`database/sql`接口的数据库，命令也会类似。
- en: Once connected, the package sets up a connection pool that is covered in the
    *Connection pooling, rate limiting, and timeouts for SQL* recipe, and you can
    either execute SQL on the connection directly, or create transaction objects that
    can do everything a connection can do with the `commit` and `rollback` commands.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦连接，该包将设置一个连接池，该连接池在*SQL的连接池、速率限制和超时*配方中有所涵盖，您可以直接在连接上执行SQL，也可以创建可以使用`commit`和`rollback`命令执行所有连接操作的事务对象。
- en: The `mysql` package provides some convenience support for Go time objects when
    talking to the database. This recipe also retrieves the username and password
    from the `MYSQLUSERNAME` and `MYSQLPASSWORD` environment variables.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 当与数据库通信时，`mysql`包为Go时间对象提供了一些便利支持。这个配方还从`MYSQLUSERNAME`和`MYSQLPASSWORD`环境变量中检索用户名和密码。
- en: Executing a database transaction interface
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 执行数据库事务接口
- en: When working with connections to services such as database, it can be difficult
    to write tests. This is because it's difficult in Go to mock or duck-type things
    at runtime. Although I recommend using a storage interface when working with databases,
    it's still useful to mock a database transaction interface inside this interface.
    The *Creating storage interfaces for data portability* recipe will cover storage
    interfaces; this recipe will focus on an interface to wrap database connections
    and transaction objects.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在与数据库等服务的连接工作时，编写测试可能会很困难。这是因为在Go中很难在运行时模拟或鸭子类型化。虽然我建议在处理数据库时使用存储接口，但在这个接口内部模拟数据库事务接口仍然很有用。*为数据可移植性创建存储接口*配方将涵盖存储接口；这个配方将专注于包装数据库连接和事务对象的接口。
- en: To show the use of such an interface, we'll rewrite the create and query files
    from the previous recipe to use our interface. The final output will be the same,
    but the create and query operations will all be performed in a transaction.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 为了展示这样一个接口的使用，我们将重写前一个配方中的创建和查询文件以使用我们的接口。最终输出将是相同的，但创建和查询操作将都在一个事务中执行。
- en: Getting ready
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: Refer to the *Getting ready* section in the *Using the database/sql package
    with MySQL* recipe.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 参考*使用database/sql包与MySQL*配方中的*准备工作*部分。
- en: How to do it...
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'These steps cover writing and running your application:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这些步骤涵盖了编写和运行应用程序：
- en: From your Terminal or console application, create a new directory called `~/projects/go-programming-cookbook/chapter6/dbinterface`
    and navigate to this directory.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从您的终端或控制台应用程序中，创建一个名为`~/projects/go-programming-cookbook/chapter6/dbinterface`的新目录，并导航到该目录。
- en: 'Run the following command:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令：
- en: '[PRE10]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'You should see a file called `go.mod` that containing the following:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到一个名为`go.mod`的文件，其中包含以下内容：
- en: '[PRE11]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Copy tests from `~/projects/go-programming-cookbook-original/chapter6/dbinterface`,
    or use this as an exercise to write some code of your own!
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从`~/projects/go-programming-cookbook-original/chapter6/dbinterface`复制测试，或者利用这个机会编写一些自己的代码！
- en: 'Create a file called `transaction.go` with the following content:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`transaction.go`的文件，内容如下：
- en: '[PRE12]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Create a file called `create.go` with the following content:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`create.go`的文件，内容如下：
- en: '[PRE13]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Create a file called `query.go` with the following content:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`query.go`的文件，内容如下：
- en: '[PRE14]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Create a file called `exec.go` with the following content:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`exec.go`的文件，内容如下：
- en: '[PRE15]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Navigate to `example`.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到`example`。
- en: 'Create a file called `main.go` with the following content:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`main.go`的文件，内容如下：
- en: '[PRE16]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Run `go run main.go`.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`go run main.go`。
- en: 'You could also run the following command:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您也可以运行以下命令：
- en: '[PRE17]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'You should see the following output:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到以下输出：
- en: '[PRE18]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: The `go.mod` file may be updated and `go.sum` file should now be present in
    the top-level recipe directory.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`go.mod`文件可能会被更新，顶级配方目录中现在应该存在`go.sum`文件。'
- en: If you copied or wrote your own tests, go up one directory and run `go test`.
    Ensure that all the tests pass.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您复制或编写了自己的测试，请返回上一级目录并运行`go test`。确保所有测试都通过。
- en: How it works...
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: This recipe works in a very similar way to the previous database recipe *Using
    the database/sql package with MySQL.* This recipe performs the same operation
    of creating data and querying it, but also demonstrates using transactions and
    making generic database functions that work with both `sql.DB` connections and
    `sql.Transaction` objects.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配方的工作方式与前一个数据库配方*使用database/sql包与MySQL*非常相似。这个配方执行了创建数据和查询数据的相同操作，但也演示了使用事务和创建通用数据库函数，这些函数可以与`sql.DB`连接和`sql.Transaction`对象一起使用。
- en: Code written in this way allows us to reuse function that perform database operations
    that can be run individually or in groups using a transaction. This allows for
    more code reuse while still isolating functionality to functions or methods operating
    on a database. For example you can have `Update(db DB)` functions for multiple
    tables and pass them all a shared transaction to perform multiple updates atomically. It's
    also simpler to mock these interfaces, as you'll see in [Chapter 9](1f759ff3-1337-4dbc-a4c4-cb513eb5041f.xhtml),
    *Testing Go Code*.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 以这种方式编写的代码允许我们重用执行数据库操作的函数，这些函数可以单独运行或在事务中运行。这样可以实现更多的代码重用，同时仍然将功能隔离到在数据库上操作的函数或方法中。例如，您可以为多个表格编写`Update(db
    DB)`函数，并将它们全部传递给一个共享的事务，以原子方式执行多个更新。这样也更容易模拟这些接口，正如您将在[第9章](1f759ff3-1337-4dbc-a4c4-cb513eb5041f.xhtml)中看到的，*测试Go代码*。
- en: Connection pooling, rate limiting, and timeouts for SQL
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SQL的连接池、速率限制和超时
- en: Although the `database/sql` package provides support for connection pooling,
    rate limiting, and timeouts, it's often important to tweak the defaults to better
    accommodate your database configuration. This can become important when you have
    horizontal scaling on microservices and don't want to hold too many active connections
    to the database.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然`database/sql`包提供了连接池、速率限制和超时的支持，但通常需要调整默认值以更好地适应数据库配置。当您在微服务上进行水平扩展并且不希望保持太多活动连接到数据库时，这一点就变得很重要。
- en: Getting ready
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: Refer to the *Getting ready* section in the *Using the database/sql package
    with MySQL* recipe.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 参考*使用database/sql包与MySQL*配方中的*准备工作*部分。
- en: How to do it...
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'These steps cover writing and running your application:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 这些步骤涵盖了编写和运行应用程序：
- en: From your Terminal or console application, create a new directory called `~/projects/go-programming-cookbook/chapter6/pools` and
    navigate to this directory.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从您的终端或控制台应用程序中，创建一个名为`~/projects/go-programming-cookbook/chapter6/pools`的新目录，并导航到该目录。
- en: 'Run the following command:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令：
- en: '[PRE19]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'You should see a file called `go.mod` that containing the following:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到一个名为`go.mod`的文件，其中包含以下内容：
- en: '[PRE20]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Copy tests from `~/projects/go-programming-cookbook-original/chapter6/pools`,
    or use this as an exercise to write some code of your own!
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从`~/projects/go-programming-cookbook-original/chapter6/pools`复制测试，或者利用这个练习编写一些自己的代码！
- en: 'Create a file called `pools.go` with the following content:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`pools.go`的文件，并包含以下内容：
- en: '[PRE21]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Create a file called `timeout.go` with the following content:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`timeout.go`的文件，并包含以下内容：
- en: '[PRE22]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Navigate to `example`.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到`example`。
- en: 'Create a file called `main.go` with the following content:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`main.go`的文件，并包含以下内容：
- en: '[PRE23]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Run `go run main.go`.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`go run main.go`。
- en: 'You could also run the following:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您也可以运行以下命令：
- en: '[PRE24]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'You should see the following output:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到以下输出：
- en: '[PRE25]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: The `go.mod` file may be updated and `go.sum` file should now be present in
    the top-level recipe directory.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`go.mod`文件可能会被更新，顶级示例目录中现在应该存在`go.sum`文件。'
- en: If you copied or wrote your own tests, go up one directory and run `go test`.
    Ensure that all tests pass.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您复制或编写了自己的测试，请返回上一级目录并运行`go test`。确保所有测试都通过。
- en: How it works...
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: Being able to control the depth of our connection pool is very useful. This
    will prevent us from overloading a database, but it's important to consider what
    it will mean in the context of timeouts. If you enforce both a set number of connections
    and strict context-based timeouts, as we did in this recipe, there will be cases
    where you'll have requests frequently timing out on an overloaded application
    trying to establish too many connections.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 能够控制连接池的深度非常有用。这将防止我们过载数据库，但重要的是要考虑在超时的情况下会发生什么。如果您同时强制执行一组连接和严格基于上下文的超时，就像我们在这个示例中所做的那样，将会有一些情况下，您会发现请求经常在尝试建立太多连接的过载应用程序上超时。
- en: This is because connections will time-out waiting for a connection to become
    available. The newly added context functionality for `database/sql` makes it much
    simpler to have a shared timeout for the entire request, including the steps involved
    in performing the query.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为连接将超时等待连接可用。对于`database/sql`的新添加的上下文功能使得为整个请求设置共享超时变得更加简单，包括执行查询所涉及的步骤。
- en: With this and the other recipes, it makes sense to use a global `config` object
    to be passed into the `Setup()` function, although this recipe just uses environment
    variables.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这个和其他的示例，使用一个全局的`config`对象传递给`Setup()`函数是有意义的，尽管这个示例只是使用环境变量。
- en: Working with Redis
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Redis
- en: Sometimes you need persistent storage or additional functionality provided by
    third-party libraries and services. This recipe will explore Redis as a form of
    non-relational data storage and showcase how a language such as Go can interact
    with these third-party services.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 有时您需要持久存储或第三方库和服务提供的附加功能。这个示例将探讨Redis作为非关系型数据存储的形式，并展示Go语言如何与这些第三方服务进行交互。
- en: Since Redis supports key-value storage with a simple interface, it's an excellent
    candidate for session storage or temporary data that has a duration. The ability
    to specify a timeout on data stored in Redis is extremely valuable. This recipe
    will explore basic Redis usage from configuration, to querying, to using custom
    sorting.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Redis支持具有简单接口的键值存储，因此它是会话存储或具有持续时间的临时数据的绝佳候选者。在Redis中指定数据的超时是非常有价值的。这个示例将探讨从配置到查询再到使用自定义排序的基本Redis用法。
- en: Getting ready
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Configure your environment according to these steps:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 根据以下步骤配置您的环境：
- en: Download and install Go 1.11.1 or above on your operating system from [https://golang.org/doc/install](https://golang.org/doc/install).
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的操作系统上下载并安装Go 1.11.1或更高版本，网址为[https://golang.org/doc/install](https://golang.org/doc/install)。
- en: Install Consul from [https://www.consul.io/intro/getting-started/install.html](https://www.consul.io/intro/getting-started/install.html).
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从[https://www.consul.io/intro/getting-started/install.html](https://www.consul.io/intro/getting-started/install.html)安装Consul。
- en: Open a Terminal or console application and create and navigate to a project
    directory such as `~/projects/go-programming-cookbook`. All the code will be run
    and modified from this directory.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个终端或控制台应用程序，并创建并导航到一个项目目录，例如`~/projects/go-programming-cookbook`。所有的代码都将在这个目录中运行和修改。
- en: 'Clone the latest code into `~/projects/go-programming-cookbook-original` and
    (optionally) work from that directory rather than typing in the examples manually:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将最新的代码克隆到`~/projects/go-programming-cookbook-original`，然后（可选）从该目录中工作，而不是手动输入示例：
- en: '[PRE26]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Install and configure Redis using [https://redis.io/topics/quickstart](https://redis.io/topics/quickstart).
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用[https://redis.io/topics/quickstart](https://redis.io/topics/quickstart)安装和配置Redis。
- en: How to do it...
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'These steps cover writing and running your application:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 这些步骤涵盖了编写和运行应用程序：
- en: From your Terminal or console application, create a new directory called `~/projects/go-programming-cookbook/chapter6/redis`
    and navigate to this directory.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从您的终端或控制台应用程序中，创建一个名为`~/projects/go-programming-cookbook/chapter6/redis`的新目录，并导航到该目录。
- en: 'Run the following command:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令：
- en: '[PRE27]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'You should see a file called `go.mod` that containing the following:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到一个名为`go.mod`的文件，其中包含以下内容：
- en: '[PRE28]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Copy tests from `~/projects/go-programming-cookbook-original/chapter6/redis`,
    or use this as an exercise to write some code of your own!
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从`~/projects/go-programming-cookbook-original/chapter6/redis`复制测试，或者利用这个练习编写一些自己的代码！
- en: 'Create a file called `config.go` with the following content:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`config.go`的文件，并包含以下内容：
- en: '[PRE29]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Create a file called `exec.go` with the following content:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`exec.go`的文件，并包含以下内容：
- en: '[PRE30]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Create a file called `sort.go` with the following content:'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`sort.go`的文件，并包含以下内容：
- en: '[PRE31]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Navigate to `example`.
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到`example`。
- en: 'Create a file called `main.go` with the following content:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`main.go`的文件，内容如下：
- en: '[PRE32]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Run `go run main.go`.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`go run main.go`。
- en: 'You could also run the following command:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您也可以运行以下命令：
- en: '[PRE33]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'You should see the following output:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到以下输出：
- en: '[PRE34]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: The `go.mod` file may be updated and `go.sum` file should now be present in
    the top-level recipe directory.
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`go.mod`文件可能已更新，顶级配方目录中现在应该存在`go.sum`文件。'
- en: If you copied or wrote your own tests, go up one directory and run `go test`.
    Ensure that all tests pass.
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您复制或编写了自己的测试，请返回上一个目录并运行`go test`。确保所有测试都通过。
- en: How it works...
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: Working with Redis in Go is very similar to working with MySQL. Although there's
    no standard library, a lot of the same conventions are followed with functions
    such as `Scan()` to read data from Redis into Go types. It can be challenging
    to pick the best library to use in cases like this and I suggest surveying what's
    available periodically, as things can rapidly change.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在Go中使用Redis与使用MySQL非常相似。虽然没有标准库，但是许多相同的约定都遵循了，例如使用`Scan()`函数将数据从Redis读取到Go类型中。在这种情况下，选择最佳库可能会有挑战，我建议定期调查可用的内容，因为事情可能会迅速改变。
- en: This recipe uses a `redis` package to do basic setting and getting, a more complex
    sort function, and basic configuration. Like `database/sql`, you can set additional
    configuration in the form of write timeouts, poolsize, and more. Redis itself
    also provides a lot of additional functionality, including Redis cluster support,
    Zscore and counter objects, and distributed locks.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 这个示例使用`redis`包来进行基本的设置和获取，更复杂的排序功能以及基本的配置。与`database/sql`一样，您可以以写超时、池大小等形式设置额外的配置。Redis本身还提供了许多额外的功能，包括Redis集群支持、Zscore和计数器对象以及分布式锁。
- en: As in the preceding recipe, I recommend using a `config` object, which stores
    your Redis settings and configuration details for ease of setup and security.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 与前面的示例一样，我建议使用一个`config`对象，它存储您的Redis设置和配置详细信息，以便轻松设置和安全性。
- en: Using NoSQL with MongoDB
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用NoSQL与MongoDB
- en: You may initially think that Go is better suited to relational databases due
    to Go structures and because Go is a typed language. When working with something
    like the `github.com/mongodb/mongo-go-driver` package, Go can nearly arbitrarily
    store and retrieve structure objects. If you version your objects, your schema
    can adapt and it can provide a very flexible development environment.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能最初认为Go更适合关系数据库，因为Go结构和Go是一种类型化的语言。当使用`github.com/mongodb/mongo-go-driver`包时，Go可以几乎任意存储和检索结构对象。如果对对象进行版本控制，您的模式可以适应，并且可以提供一个非常灵活的开发环境。
- en: Some libraries do a better job of hiding or elevating these abstractions. The
    `mongo-go-driver` package is an example of a library that does an excellent job
    of the former. The following recipe will create a connection in a similar way
    to Redis and MySQL, but will store and retrieve an object without even defining
    a concrete schema.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 有些库更擅长隐藏或提升这些抽象。`mongo-go-driver`包就是一个很好的例子。下面的示例将以类似的方式创建一个连接，类似于Redis和MySQL，但将存储和检索对象而无需定义具体的模式。
- en: Getting ready
  id: totrans-157
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Configure your environment according to these steps:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 根据以下步骤配置您的环境：
- en: Download and install Go 1.11.1 or above on your operating system from [https://golang.org/doc/install](https://golang.org/doc/install).
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的操作系统上下载并安装Go 1.11.1或更高版本，网址为[https://golang.org/doc/install](https://golang.org/doc/install)。
- en: Install Consul from [https://www.consul.io/intro/getting-started/install.html](https://www.consul.io/intro/getting-started/install.html).
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从[https://www.consul.io/intro/getting-started/install.html](https://www.consul.io/intro/getting-started/install.html)安装Consul。
- en: Open a Terminal or console application and create and navigate to a project
    directory such as `~/projects/go-programming-cookbook`. All the code will be run
    and modified from this directory.
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个终端或控制台应用程序，并创建并导航到一个项目目录，例如`~/projects/go-programming-cookbook`。所有的代码都将在这个目录中运行和修改。
- en: 'Clone the latest code into `~/projects/go-programming-cookbook-original` and
    (optionally) work from that directory rather than typing in the examples manually:'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将最新的代码克隆到`~/projects/go-programming-cookbook-original`，（可选）从该目录中工作，而不是手动输入示例：
- en: '[PRE35]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Install and configure MongoDB ([https://docs.mongodb.com/getting-started/shell/](https://docs.mongodb.com/getting-started/shell/).)
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装和配置MongoDB（[https://docs.mongodb.com/getting-started/shell/](https://docs.mongodb.com/getting-started/shell/)）。
- en: How to do it...
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'These steps cover writing and running your application:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 这些步骤涵盖了编写和运行应用程序：
- en: From your Terminal or console application, create a new directory called `~/projects/go-programming-cookbook/chapter6/mongodb`
    and navigate to this directory.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从您的终端或控制台应用程序中，创建一个名为`~/projects/go-programming-cookbook/chapter6/mongodb`的新目录，并导航到该目录。
- en: 'Run the following command:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令：
- en: '[PRE36]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'You should see a file called `go.mod` that containing the following:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到一个名为`go.mod`的文件，其中包含以下内容：
- en: '[PRE37]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Copy tests from `~/projects/go-programming-cookbook-original/chapter6/mongodb`,
    or use this as an exercise to write some code of your own!
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从`~/projects/go-programming-cookbook-original/chapter6/mongodb`复制测试，或者利用这个机会编写一些自己的代码！
- en: 'Create a file called `config.go` with the following content:'
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`config.go`的文件，内容如下：
- en: '[PRE38]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Create a file called `exec.go` with the following content:'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`exec.go`的文件，内容如下：
- en: '[PRE39]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Navigate to `example`.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到`example`。
- en: 'Create a file called `main.go` with the following content:'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`main.go`的文件，内容如下：
- en: '[PRE40]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Run `go run main.go`.
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`go run main.go`。
- en: 'You could also run the following command:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您也可以运行以下命令：
- en: '[PRE41]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'You should see the following output:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到以下输出：
- en: '[PRE42]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: The `go.mod` file may be updated and `go.sum` file should now be present in
    the top-level recipe directory.
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`go.mod`文件可能已更新，顶级配方目录中现在应该存在`go.sum`文件。'
- en: If you copied or wrote your own tests, go up one directory and run `go test`.
    Ensure that all tests pass.
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您复制或编写了自己的测试，请返回上一个目录并运行`go test`。确保所有测试都通过。
- en: How it works...
  id: totrans-187
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: The `mongo-go-driver` package also provides connection pooling, and many ways
    to tweak and configure your connections to the `mongodb` database. This recipe's
    examples are fairly basic, but they illustrate how easy it is to reason about
    and query a document-based database. The package implements a BSON data type,
    and marshaling to and from it is very similar to working with JSON.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '`mongo-go-driver`包还提供连接池，并且有许多方法可以调整和配置与`mongodb`数据库的连接。本示例的示例相当基本，但它们说明了理解和查询基于文档的数据库是多么容易。该包实现了BSON数据类型，与处理JSON非常相似。'
- en: Consistency guarantees and best practices for `mongodb` are outside the scope
    of this book. However, it's a pleasure to work with these in the Go language.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '`mongodb`的一致性保证和最佳实践超出了本书的范围。然而，在Go语言中使用这些功能是一种乐趣。'
- en: Creating storage interfaces for data portability
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为数据可移植性创建存储接口
- en: When working with external storage interfaces, it can be helpful to abstract
    your operations behind an interface. This is for ease of mocking, portability
    in the event you change storage backends, and isolation of concerns. The downside
    to this approach may come if you need to perform multiple operations inside a
    transaction. In that case, it makes sense to make composite operations, or to
    allow them to be passed in via a context object or additional function arguments.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用外部存储接口时，将操作抽象化到接口后面可能会有所帮助。这是为了方便模拟，如果更改存储后端，则可移植性，以及关注点的隔离。这种方法的缺点可能在于，如果您需要在事务内执行多个操作，那么最好是进行组合操作，或者允许通过上下文对象或附加函数参数传递它们。
- en: This recipe will implement a very simple interface for working with items in
    MongoDB. These items will have a name and price and we'll use an interface to
    persist and retrieve these objects.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例将实现一个非常简单的接口，用于在MongoDB中处理项目。这些项目将具有名称和价格，我们将使用接口来持久化和检索这些对象。
- en: Getting ready
  id: totrans-193
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: Refer to the steps given in the *Getting ready* section in the *Using NoSQL
    with MongoDB* recipe.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考*使用NoSQL与MongoDB*中*准备工作*部分中给出的步骤。
- en: How to do it...
  id: totrans-195
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'These steps cover writing and running your application:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 这些步骤涵盖了编写和运行应用程序的过程：
- en: From your Terminal or console application, create a new directory called `~/projects/go-programming-cookbook/chapter6/storage`
    and navigate to this directory.
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从您的终端或控制台应用程序中，创建一个名为`~/projects/go-programming-cookbook/chapter6/storage`的新目录，并导航到该目录。
- en: 'Run the following command:'
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令：
- en: '[PRE43]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'You should see a file called `go.mod` that containing the following:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该会看到一个名为`go.mod`的文件，其中包含以下内容：
- en: '[PRE44]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Copy tests from `~/projects/go-programming-cookbook-original/chapter6/storage`,
    or use this as an exercise to write some code of your own!
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从`~/projects/go-programming-cookbook-original/chapter6/storage`复制测试，或者利用这个机会编写一些自己的代码！
- en: 'Create a file called `storage.go` with the following content:'
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`storage.go`的文件，内容如下：
- en: '[PRE45]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Create a file called `mongoconfig.go` with the following content:'
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`mongoconfig.go`的文件，内容如下：
- en: '[PRE46]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Create a file called `mongointerface.go` with the following content:'
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`mongointerface.go`的文件，内容如下：
- en: '[PRE47]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Create a file called `exec.go` with the following content:'
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`exec.go`的文件，内容如下：
- en: '[PRE48]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Navigate to `example`.
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到`example`。
- en: 'Create a file called `main.go` with the following content:'
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`main.go`的文件，内容如下：
- en: '[PRE49]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Run `go run main.go`.
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`go run main.go`。
- en: 'You could also run the following command:'
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您还可以运行以下命令：
- en: '[PRE50]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'You should see the following output:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该会看到以下输出：
- en: '[PRE51]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: The `go.mod` file may be updated and `go.sum` file should now be present in
    the top-level recipe directory.
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`go.mod`文件可能会被更新，顶级配方目录中现在应该存在`go.sum`文件。'
- en: If you copied or wrote your own tests, go up one directory and run `go test`.
    Ensure that all tests pass.
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您复制或编写了自己的测试，请返回上一级目录并运行`go test`。确保所有测试都通过。
- en: How it works...
  id: totrans-221
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The most important function for demonstrating this recipe is `PerformOperations`.
    This function takes an interface to `Storage` as a parameter. This means we can
    dynamically replace the underlying storage without even modifying this function.
    It would be simple, for example, to connect storage to a separate API in order
    to consume and modify it.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 演示此示例最重要的函数是`PerformOperations`。此函数将一个`Storage`接口作为参数。这意味着我们可以动态替换底层存储，甚至无需修改此函数。例如，连接存储到单独的API以消费和修改它将是很简单的。
- en: We use the context for these interfaces to add additional flexibility and allow
    the interface to handle timeouts as well. Separating your application logic from
    the underlying storage provides a variety of benefits, but it can be difficult
    to pick the right places to draw boundaries, and this will vary widely by application.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用上下文来为这些接口添加额外的灵活性，并允许接口处理超时。将应用程序逻辑与底层存储分离提供了各种好处，但很难选择正确的划界线的位置，这将因应用程序而异。
