- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: '*Go Systems Programming* is a book that will help you develop systems software
    using Go, which is a systems programming language that started as an internal
    Google project before becoming popular. What makes Go really popular is that it
    keeps the developer happy by being easy to write, easy to read, easy to understand,
    and by having a compiler that is there to help you. This book does not cover every
    possible aspect and feature of the Go programming language: only the ones that
    are related to systems programming. Should you wish to learn more about the Go
    programming language, you should wait from my next book, *Mastering Go*, which
    will be ready in 2018!'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 《Go系统编程》是一本将帮助您使用Go开发系统软件的书，它是一种系统编程语言，最初是作为谷歌内部项目开始的，后来变得很受欢迎。Go之所以如此受欢迎，是因为它让开发人员感到愉快，易于编写、易于阅读、易于理解，并且有一个编译器可以帮助您。这本书并未涵盖Go编程语言的每一个可能方面和特性，只涉及与系统编程相关的内容。如果您希望了解更多关于Go编程语言的知识，您可以期待我的下一本书《精通Go》，它将于2018年出版！
- en: The book you are about to read is an honest book in the sense that it will present
    working Go code without overlooking its potential faults, its restrictions, and
    its logical gaffes, which will allow you to improve it on your own and create
    a better version of it in the future. What you will not be able to improve is
    the fundamental information that will be presented, which is the basis of the
    way Unix systems work. I will consider the book to be successful if it helps you
    understand what systems programming is about, why it is important, and how you
    can start developing systems software in Go. I will be equally happy if Go becomes
    your favorite programming language!
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 你即将阅读的书是一本诚实的书，它将呈现工作中的Go代码，而不会忽视其潜在缺陷、限制和逻辑错误，这将使您能够自行改进并在未来创建更好的版本。您将无法改进的是将呈现的基本信息，这是Unix系统工作方式的基础。如果这本书能帮助您理解系统编程的重要性以及如何开始使用Go开发系统软件，我将认为这本书是成功的。如果Go成为您最喜欢的编程语言，我同样会感到高兴！
- en: What this book covers
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖的内容
- en: '[Chapter 1](f2224931-63b2-4263-bc07-8b74cfabc665.xhtml), *Getting started with
    Go and Unix Systems Programming*, starts by defining what systems programming
    is before talking about the advantages and the disadvantages of Go, the features
    of Go version 1.8, two handy Go tools named `gofmt` and `godoc`, as well as the
    various states of Unix processes.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 《第一章》《开始使用Go和Unix系统编程》首先定义了系统编程是什么，然后讨论了Go的优缺点、Go版本1.8的特性，两个方便的Go工具`gofmt`和`godoc`，以及Unix进程的各种状态。
- en: '[Chapter 2](69bfa048-8113-4a6d-929a-b5addf9b6505.xhtml), *Writing Programs
    in Go*, helps you learn how to compile Go code and how to use the environment
    variables that Go supports, and understand how Go reads the command line arguments
    of a program. Then, we will talk about getting user input and output, which are
    fundamental tasks, show you how to define functions in Go, where the `defer` keyword
    is mentioned for the first time in this book and continue by discussing the data
    structures that Go offers using handy code examples. In the remaining sections
    of the chapter, we will discuss Go interfaces and random number generation. I
    am sure that you are going to enjoy this chapter!'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 《第二章》《使用Go编写程序》帮助您学习如何编译Go代码以及如何使用Go支持的环境变量，并了解Go如何读取程序的命令行参数。然后，我们将讨论获取用户输入和输出，这是基本任务，向您展示如何在Go中定义函数，本书中首次提到`defer`关键字，并继续讨论Go提供的数据结构，使用方便的代码示例。在本章的其余部分，我们将讨论Go接口和随机数生成。我相信您会喜欢这一章节！
- en: '[Chapter 3](96c36f62-d505-408c-add5-af84cf25454a.xhtml), *Advanced Go Features*,
    goes deeper and starts talking about some advanced Go features, including error
    handling, which is critical when developing systems software and error logging.
    Then it introduces you to pattern matching and regular expressions, Go Reflection,
    and talks about unsafe code. After that, it compares Go to other programming languages
    and presents two utilities, named `dtrace(1)` and `strace(1)`, that allow you
    to see what happens behind the scenes when you execute a program. Lastly, it talks
    about how you can use the `go tool` to detect unreachable code and how to avoid
    some common Go mistakes.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 《第三章》《高级Go特性》深入探讨了一些高级Go特性，包括错误处理，在开发系统软件和错误记录时至关重要。然后介绍了模式匹配和正则表达式、Go反射，并讨论了不安全的代码。之后，它将Go与其他编程语言进行了比较，并介绍了两个实用程序，名为`dtrace(1)`和`strace(1)`，它们可以让您在执行程序时看到幕后发生的事情。最后，它讨论了如何使用`go
    tool`检测不可达代码以及如何避免一些常见的Go错误。
- en: '[Chapter 4](33cb7975-9fb9-4c1e-b48b-628e67c04a9a.xhtml), *Go Packages, Algorithms,
    and Data Structures*, talks about algorithms and sorting in Go and about the `sort.Slice()`
    function, which requires Go version 1.8 or newer. Then it shows Go implementations
    of a linked list, a binary tree and a hash table. After that, it discusses Go
    packages and teaches you how to create and use your own Go packages. The last
    part of the chapter discusses Garbage collection in Go.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 《第四章》《Go包、算法和数据结构》讨论了Go中的算法和排序，以及需要Go版本1.8或更新版本的`sort.Slice()`函数。然后展示了链表、二叉树和哈希表的Go实现。之后，它讨论了Go包，并教您如何创建和使用自己的Go包。本章的最后部分讨论了Go中的垃圾回收。
- en: '[Chapter 5](543026ff-1c69-45b5-ae56-68b1fe41bc83.xhtml), *Files and Directories*,
    is the first chapter of this book that deals with a systems programming topic,
    which is the handling of files, symbolic links, and directories. In this chapter,
    you will find Go implementations of the core functionality of Unix tools such
    as `which(1)`, `pwd(1)`, and `find(1)`, but first you will learn how to use the
    `flag` package in order to parse the command-line arguments and options of a Go
    program. Additionally, you will learn how to delete, rename, and move files as
    well as how to traverse directory structures the Go way. The last part of this
    chapter implements a utility that creates a copy of all the directories of a directory
    structure!'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 第5章，“文件和目录”，是本书中首个涉及系统编程主题的章节，涉及文件、符号链接和目录的处理。在本章中，你将找到Unix工具的核心功能的Go实现，比如`which(1)`、`pwd(1)`和`find(1)`，但首先你将学习如何使用`flag`包来解析Go程序的命令行参数和选项。此外，你还将学习如何删除、重命名和移动文件，以及如何以Go方式遍历目录结构。本章的最后部分实现了一个实用程序，用于创建目录结构的所有目录的副本！
- en: '[Chapter 6](7debeee1-e431-4d30-a868-6cc59c73adb8.xhtml), *File Input and Output*,
    shows you how to read the contents of a file, how to change them, and how to write
    your own data to files! In this chapter, you will learn about the `io` package,
    the `io.Writer` and `io.Reader` interfaces, and the `bufio` package that is used
    for buffered input and output. You will also create Go versions of the `cp(1)`,
    `wc(1)`, and `dd(1)` utilities. Lastly, you will learn about sparse files, how
    to create sparse files in Go, how to read and write records from files, and how
    to lock files in Go.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 第6章，“文件输入和输出”，向你展示如何读取文件的内容，如何更改文件内容，以及如何将自己的数据写入文件！在本章中，你将了解`io`包、`io.Writer`和`io.Reader`接口，以及用于缓冲输入和输出的`bufio`包。你还将创建`cp(1)`、`wc(1)`和`dd(1)`实用程序的Go版本。最后，你将了解稀疏文件，如何在Go中创建稀疏文件，如何从文件中读取和写入记录，以及如何在Go中锁定文件。
- en: '[Chapter 7](a013a7ab-3736-4ea0-a8e7-ec72eb01b0c5.xhtml), *Working with System
    Files*, teaches you how to deal with Unix system files, which includes writing
    data to Unix log files, appending data to existing files, and altering the data
    of text files. In this chapter, you will also learn about the log and `log/syslog`
    standard Go packages, about Unix file permissions, and take your pattern matching
    and regular expressions knowledge even further using practical examples. You will
    also learn about finding the user ID of a user as well as the Unix groups a user
    belongs to. Lastly, you will discover how to work with dates and times in Go using
    the `time` package and how to create and rotate log files on your own.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 第7章，“处理系统文件”，教你如何处理Unix系统文件，包括向Unix日志文件写入数据、向现有文件追加数据以及修改文本文件的数据。在本章中，你还将了解标准的Go包`log`和`log/syslog`，Unix文件权限，以及使用实际示例进一步学习模式匹配和正则表达式知识。你还将了解如何找到用户的用户ID以及用户所属的Unix组。最后，你将了解如何使用`time`包在Go中处理日期和时间，以及如何自己创建和旋转日志文件。
- en: '[Chapter 8](defd267a-724b-4983-a51f-7cda6bba93aa.xhtml), *Processes and Signals*,
    begins by discussing the handling of Unix signals in Go with the help of the `os/signal`
    package by presenting three Go programs. Then it shows a Go program that can rotate
    its log files using signals and signal handling and another Go program that uses
    signals to present the progress of a file copy operation. This chapter will also
    teach you how to plot data in Go and how to implement Unix pipes in Go. Then it
    will implement the `cat(1)` utility in Go before briefly presenting the Go code
    of a Unix socket client. The last section of the chapter quickly discusses how
    you can program a Unix shell in Go.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 第8章，“进程和信号”，首先讨论了在Go中如何处理Unix信号，借助`os/signal`包展示了三个Go程序。然后展示了一个可以使用信号和信号处理来旋转其日志文件的Go程序，以及另一个使用信号来展示文件复制操作进度的Go程序。本章还将教你如何在Go中绘制数据以及如何在Go中实现Unix管道。然后将在Go中实现`cat(1)`实用程序，然后简要介绍Unix套接字客户端的Go代码。本章的最后一部分快速讨论了如何在Go中编写Unix
    shell。
- en: '[Chapter 9](e9f68321-ac26-49e4-bdae-44b38149afc2.xhtml), *Goroutines - Basic
    Features*, discusses a very important Go topic, which is goroutines, by talking
    about how you can create goroutines and how you can synchronize them and wait
    for them to finish before ending a program. Then it talks about channels and pipelines,
    which help goroutines communicate and exchange data in a safe way. The last part
    of the chapter presents a version of the `wc(1)` utility that is implemented using
    goroutines. However, as goroutines is a big subject, the next chapter will continue
    talking about them.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 第9章，“Goroutines - 基本特性”，讨论了一个非常重要的Go主题，即goroutines，讨论了如何创建goroutines以及如何同步它们并在结束程序之前等待它们完成。然后讨论了通道和管道，这有助于goroutines以安全的方式进行通信和交换数据。本章的最后部分呈现了一个使用goroutines实现的`wc(1)`实用程序的版本。然而，由于goroutines是一个庞大的主题，下一章将继续讨论它们。
- en: '[Chapter 10](7926b940-94d5-4525-a6be-19e7acc64c05.xhtml), *Goroutines - Advanced
    Features*, talks about more advanced topics related to goroutines and channels,
    including buffered channels, signal channels, nil channels, channels of channels,
    timeouts, and the `select` keyword. Then it discusses issues related to shared
    memory and mutexes before presenting two more Go versions of the `wc(1)` utility
    that use channels and shared memory. Lastly, this chapter will talk about race
    conditions and the `GOMAXPROCS` environment variable.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 第10章，“Goroutines - 高级特性”，讨论了与goroutines和通道相关的更高级的主题，包括缓冲通道、信号通道、空通道、通道的通道、超时和`select`关键字。然后讨论了与共享内存和互斥锁相关的问题，然后呈现了两个使用通道和共享内存的`wc(1)`实用程序的更多Go版本。最后，本章将讨论竞争条件和`GOMAXPROCS`环境变量。
- en: '[Chapter 11](734c6cfa-6bae-44b2-9c59-da0db4177359.xhtml), *Writing Web Applications
    in Go*, talks about developing web applications and web servers and clients in
    Go. Additionally, it talks about communicating with MongoDB and MySQL databases
    using Go code. Then, it illustrates how to use the `html/template` package, which
    is part of the Go standard library and allows you to generate HTML output using
    Go HTML template files. Lastly, it talks about reading and writing JSON data before
    presenting a utility that reads a number of web pages and returns the number of
    times a given keyword was found in those web pages.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[第11章](734c6cfa-6bae-44b2-9c59-da0db4177359.xhtml)，*使用Go编写Web应用程序*，讨论了在Go中开发Web应用程序和Web服务器以及客户端。此外，它还讨论了使用Go代码与MongoDB和MySQL数据库进行通信。然后，它说明了如何使用`html/template`包，该包是Go标准库的一部分，允许您使用Go
    HTML模板文件生成HTML输出。最后，它讨论了读取和写入JSON数据，然后呈现了一个实用程序，该实用程序读取多个网页并返回在这些网页中找到给定关键字的次数。'
- en: '[Chapter 12](fe18fc6b-5b18-4a49-ad25-78909d80232f.xhtml), *Network Programming*,
    discusses topics related to TCP/IP and its protocols using the `net` Go standard
    package. It shows you how to create TCP and UDP clients and servers, how to perform
    various types of DNS lookups, and how to use Wireshark to inspect network traffic.
    Additionally, it talks about developing RPC clients and servers in Go as well
    as developing a Unix socket server and a Unix socket client.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[第12章](fe18fc6b-5b18-4a49-ad25-78909d80232f.xhtml)，*网络编程*，讨论了使用`net` Go标准包涉及的TCP/IP及其协议的主题。它向您展示了如何创建TCP和UDP客户端和服务器，如何执行各种类型的DNS查找，以及如何使用Wireshark检查网络流量。此外，它还讨论了在Go中开发RPC客户端和服务器，以及开发Unix套接字服务器和Unix套接字客户端。'
- en: As you will see, at the end of each chapter there are some exercises for you
    to do in order to gain more information about important Go packages and write
    your own Go programs. Please, try to do all the exercises of this book.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您将看到的，每章结束时都有一些练习供您完成，以便获取有关重要Go包的更多信息并编写自己的Go程序。请尝试完成本书的所有练习。
- en: What you need for this book
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 您需要为本书做些什么
- en: This book requires a computer running a Unix variant with a relatively recent
    Go version, which includes any machine running Mac OS X, macOS, or Linux.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书需要一台运行Unix变种的计算机，其中包括运行Mac OS X、macOS或Linux的任何机器上都有相对较新的Go版本。
- en: Apple used to call its operating system as Mac OS X followed by the version
    number; however, after Mac OS X 10.11 (El Capitan), Apple changed that, and Mac
    OS X 10.12 is now called macOS 10.12 (Sierra) - in this book, the terms Mac OS
    X and macOS are used interchangeably. Additionally, there is a big chance that
    by the time you read this book, the latest version of macOS will be macOS 10.13
    (High Sierra). You can learn more about the various versions of macOS by visiting
    [https://en.wikipedia.org/wiki/MacOS](https://en.wikipedia.org/wiki/MacOS).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 苹果过去将其操作系统称为Mac OS X，后面跟着版本号；然而，在Mac OS X 10.11（El Capitan）之后，苹果进行了更改，现在Mac
    OS X 10.12被称为macOS 10.12（Sierra）-在本书中，Mac OS X和macOS这两个术语是可以互换使用的。此外，很有可能在您阅读本书时，最新版本的macOS将是macOS
    10.13（High Sierra）。您可以通过访问[https://en.wikipedia.org/wiki/MacOS](https://en.wikipedia.org/wiki/MacOS)了解更多关于各个版本macOS的信息。
- en: 'All of the Go code in this book has been tested with Go 1.8.x running on a
    iMac using macOS 10.12 Sierra and with Go version 1.3.3 running on a Debian Linux
    machine. Most of the code can run on both Go versions without any code changes.
    However, when newer Go features are used, the code will fail to compile with Go
    1.3.3: the book states the Go programs that will not compile with Go version 1.3.3
    or require Go version 1.8 or newer.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的所有Go代码都经过了在运行macOS 10.12 Sierra的iMac上运行Go 1.8.x以及在运行Debian Linux机器上运行Go版本1.3.3的测试。大部分代码可以在这两个Go版本上运行而无需任何代码更改。然而，当使用较新的Go功能时，代码将无法在Go
    1.3.3上编译：本书指出了不会在Go版本1.3.3上编译或需要Go版本1.8或更新的Go程序。
- en: Please note that at the time of writing this text, the latest Go version is
    1.9\. Given the way Go works, you will be able to compile all the Go code of this
    book in newer Go versions without any changes.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在撰写本文时，最新的Go版本是1.9。鉴于Go的工作方式，您将能够在更新的Go版本中编译本书中的所有Go代码而无需任何更改。
- en: Who this book is for
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这本书是为谁准备的
- en: This book is for Unix users, power Unix users, Unix system administrators, and
    Unix system developers that use Go on one or more Unix variants and want to start
    developing systems software using the Go programming language.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书适用于Unix用户、高级Unix用户、Unix系统管理员和Unix系统开发人员，他们在一个或多个Unix变种上使用Go，并希望开始使用Go编程语言开发系统软件。
- en: Although this book might not be the best choice for people that do not feel
    comfortable with the Unix operating system or for people who have no previous
    programming experience, amateur programmers will find lots of practical information
    about Unix that might inspire them to start developing their own system utilities.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这本书可能不适合对Unix操作系统不太熟悉或没有编程经验的人，但业余程序员将会找到大量关于Unix的实用信息，这可能会激发他们开始开发自己的系统实用程序。
- en: Conventions
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 惯例
- en: 'In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning. Code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles are shown as follows: "This is because the `main()` function is where
    the program execution begins."'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，您会发现一些区分不同类型信息的文本样式。以下是一些这些样式的示例以及它们的含义解释。文本中的代码词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter句柄显示如下：“这是因为`main()`函数是程序执行开始的地方。”
- en: 'A block of code is set as follows:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望引起您对代码块的特定部分的注意时，相关行或项目将以粗体显示：
- en: '[PRE1]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都以以下形式书写：
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**New terms** and **important words** are shown in bold.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**新术语**和**重要单词**以粗体显示。'
- en: Warnings or important notes appear like this.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要说明会出现在这样的形式。
- en: Tips and tricks appear like this.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 提示和技巧会出现在这样的形式。
- en: Reader feedback
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 读者反馈
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book-what you liked or disliked. Reader feedback is important for us as it
    helps us develop titles that you will really get the most out of. To send us general
    feedback, simply email `feedback@packtpub.com`, and mention the book's title in
    the subject of your message. If there is a topic that you have expertise in and
    you are interested in either writing or contributing to a book, see our author
    guide at [www.packtpub.com/authors](http://www.packtpub.com/authors).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们始终欢迎读者的反馈。请告诉我们您对本书的看法-您喜欢或不喜欢什么。读者的反馈对我们很重要，因为它可以帮助我们开发出您真正能够充分利用的标题。要发送一般反馈，只需发送电子邮件至`feedback@packtpub.com`，并在主题中提及书名。如果您在某个专题上有专业知识，并且有兴趣撰写或为书籍做出贡献，请参阅我们的作者指南，网址为[www.packtpub.com/authors](http://www.packtpub.com/authors)。
- en: Customer support
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 客户支持
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您是Packt书籍的自豪所有者，我们有一些东西可以帮助您充分利用您的购买。
- en: Downloading the example code
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载示例代码
- en: 'You can download the example code files for this book from your account at
    [http://www.packtpub.com](http://www.packtpub.com). If you purchased this book
    elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files emailed directly to you. You can download the code
    files by following these steps:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[http://www.packtpub.com](http://www.packtpub.com)的帐户中下载本书的示例代码文件。如果您在其他地方购买了本书，您可以访问[http://www.packtpub.com/support](http://www.packtpub.com/support)并注册，以便直接通过电子邮件接收文件。您可以按照以下步骤下载代码文件：
- en: Log in or register to our website using your email address and password.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用您的电子邮件地址和密码登录或注册我们的网站。
- en: Hover the mouse pointer on the SUPPORT tab at the top.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将鼠标指针悬停在顶部的“支持”选项卡上。
- en: Click on Code Downloads & Errata.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“代码下载和勘误”。
- en: Enter the name of the book in the Search box.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在搜索框中输入书名。
- en: Select the book for which you're looking to download the code files.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您要下载代码文件的书籍。
- en: Choose from the drop-down menu where you purchased this book from.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从下拉菜单中选择您购买此书的地点。
- en: Click on Code Download.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“代码下载”。
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 文件下载后，请确保使用以下最新版本的软件解压缩文件夹：
- en: WinRAR / 7-Zip for Windows
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WinRAR / 7-Zip for Windows
- en: Zipeg / iZip / UnRarX for Mac
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Zipeg / iZip / UnRarX for Mac
- en: 7-Zip / PeaZip for Linux
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 7-Zip / PeaZip for Linux
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Go-Systems-Programming](https://github.com/PacktPublishing/Go-Systems-Programming).
    We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 该书的代码包也托管在GitHub上，网址为[https://github.com/PacktPublishing/Go-Systems-Programming](https://github.com/PacktPublishing/Go-Systems-Programming)。我们还有其他书籍和视频的代码包，可以在[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)找到。快去看看吧！
- en: Downloading the color images of this book
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载本书的彩色图像
- en: We also provide you with a PDF file that has color images of the screenshots/diagrams
    used in this book. The color images will help you better understand the changes
    in the output. You can download this file from [https://www.packtpub.com/sites/default/files/downloads/GoSystemsProgramming_ColorImages.pdf](https://www.packtpub.com/sites/default/files/downloads/GoSystemsProgramming_ColorImages.pdf).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还为您提供了一个PDF文件，其中包含本书中使用的屏幕截图/图表的彩色图像。彩色图像将帮助您更好地理解输出中的变化。您可以从[https://www.packtpub.com/sites/default/files/downloads/GoSystemsProgramming_ColorImages.pdf](https://www.packtpub.com/sites/default/files/downloads/GoSystemsProgramming_ColorImages.pdf)下载此文件。
- en: Errata
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 勘误
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books-maybe a mistake in the text
    or the code-we would be grateful if you could report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details of your errata. Once your errata are verified, your submission will
    be accepted and the errata will be uploaded to our website or added to any list
    of existing errata under the Errata section of that title. To view the previously
    submitted errata, go to [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)
    and enter the name of the book in the search field. The required information will
    appear under the Errata section.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们已经尽一切努力确保内容的准确性，但错误难免会发生。如果您在我们的书籍中发现错误-可能是文本或代码中的错误-我们将不胜感激，如果您能向我们报告。这样一来，您可以帮助其他读者避免挫折，并帮助我们改进本书的后续版本。如果您发现任何勘误，请访问[http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata)报告错误，选择您的书籍，点击“勘误提交表格”链接，并输入您的勘误详情。一旦您的勘误被验证，您的提交将被接受，并且勘误将被上传到我们的网站或添加到该书籍的勘误列表中的任何现有勘误部分。要查看以前提交的勘误，请访问[https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)，并在搜索框中输入书名。所需信息将出现在勘误部分下方。
- en: Piracy
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 盗版
- en: Piracy of copyrighted material on the internet is an ongoing problem across
    all media. At Packt, we take the protection of our copyright and licenses very
    seriously. If you come across any illegal copies of our works in any form on the
    internet, please provide us with the location address or website name immediately
    so that we can pursue a remedy. Please contact us at `copyright@packtpub.com`
    with a link to the suspected pirated material. We appreciate your help in protecting
    our authors and our ability to bring you valuable content.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 互联网上盗版受版权保护的材料是跨所有媒体持续存在的问题。在Packt，我们非常重视版权和许可的保护。如果您在互联网上发现我们作品的任何形式的非法副本，请立即向我们提供位置地址或网站名称，以便我们采取补救措施。请通过`copyright@packtpub.com`与我们联系，并附上涉嫌盗版材料的链接。我们感谢您帮助保护我们的作者和我们为您提供有价值内容的能力。
- en: Questions
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: If you have a problem with any aspect of this book, you can contact us at `questions@packtpub.com`,
    and we will do our best to address the problem.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您对本书的任何方面有问题，可以通过`questions@packtpub.com`与我们联系，我们将尽力解决问题。
