["```go\n$ go get github.com/beego/bee\n```", "```go\n$ cd $GOPATH/src\n$ bee new my-first-beego-project\n```", "```go\n$ cd $GOPATH/src/my-first-beego-project\n$ bee run\n```", "```go\npackage controllers\nimport \"github.com/astaxie/beego\"\ntype FirstController struct \n{\n  beego.Controller\n}\ntype Employee struct \n{\n  Id int `json:\"id\"`\n  FirstName string `json:\"firstName\"`\n  LastName string `json:\"lastName\"`\n}\ntype Employees []Employee\nvar employees []Employee\nfunc init() \n{\n  employees = Employees\n  {\n    Employee{Id: 1, FirstName: \"Foo\", LastName: \"Bar\"},\n    Employee{Id: 2, FirstName: \"Baz\", LastName: \"Qux\"},\n  }\n}\nfunc (this *FirstController) GetEmployees() \n{\n  this.Ctx.ResponseWriter.WriteHeader(200)\n  this.Data[\"json\"] = employees\n  this.ServeJSON()\n}\n```", "```go\npackage routers\nimport \n(\n  \"my-first-beego-project/controllers\"\n  \"github.com/astaxie/beego\"\n)\nfunc init() \n{\n  beego.Router(\"/\", &controllers.MainController{})\n  beego.Router(\"/employees\", &controllers.FirstController{},\n  \"get:GetEmployees\")\n}\n```", "```go\n$ bee run\n```", "```go\n$ curl -X GET http://localhost:8080/employees\n[\n {\n \"id\": 1,\n \"firstName\": \"Foo\",\n \"lastName\": \"Bar\"\n },\n {\n \"id\": 2,\n \"firstName\": \"Baz\",\n \"lastName\": \"Qux\"\n }\n]\n```", "```go\n<!DOCTYPE html>\n<html>\n  <body>\n    <table border= \"1\" style=\"width:100%;\">\n      {{range .employees}}\n      <tr>\n        <td>{{.Id}}</td>\n        <td>{{.FirstName}}</td>\n        <td>{{.LastName}}</td>\n      </tr>\n      {{end}}\n    </table>\n  </body>\n</html>\n```", "```go\npackage controllers\nimport \"github.com/astaxie/beego\"\ntype FirstController struct \n{\n  beego.Controller\n}\ntype Employee struct \n{\n  Id int `json:\"id\"`\n  FirstName string `json:\"firstName\"`\n  LastName string `json:\"lastName\"`\n}\ntype Employees []Employee\nvar employees []Employee\nfunc init() \n{\n  employees = Employees\n  {\n    Employee{Id: 1, FirstName: \"Foo\", LastName: \"Bar\"},\n    Employee{Id: 2, FirstName: \"Baz\", LastName: \"Qux\"},\n  }\n}\n...\nfunc (this *FirstController) Dashbaord() \n{\n  this.Data[\"employees\"] = employees\n  this.TplName = \"dashboard.tpl\"\n}\n```", "```go\npackage routers\nimport \n(\n  \"my-first-beego-project/controllers\"\n  \"github.com/astaxie/beego\"\n)\nfunc init() \n{\n  beego.Router(\"/\", &controllers.MainController{})\n  beego.Router(\"/employees\", &controllers.FirstController{},\n  \"get:GetEmployees\")\n  beego.Router(\"/dashboard\", &controllers.FirstController{},\n  \"get:Dashbaord\")\n}\n\n```", "```go\n$ bee run\n```", "```go\n$ go get -u github.com/astaxie/beego/session/redis\n```", "```go\npackage controllers \nimport \"github.com/astaxie/beego\"\ntype SessionController struct \n{\n  beego.Controller\n}\nfunc (this *SessionController) Home() \n{\n  isAuthenticated := this.GetSession(\"authenticated\")\n  if isAuthenticated == nil || isAuthenticated == false \n  {\n    this.Ctx.WriteString(\"You are unauthorized to \n    view the page.\")\n    return\n  }\n  this.Ctx.ResponseWriter.WriteHeader(200)\n  this.Ctx.WriteString(\"Home Page\")\n}\nfunc (this *SessionController) Login() \n{\n  this.SetSession(\"authenticated\", true)\n  this.Ctx.ResponseWriter.WriteHeader(200)\n  this.Ctx.WriteString(\"You have successfully logged in.\")\n}\nfunc (this *SessionController) Logout() \n{\n  this.SetSession(\"authenticated\", false)\n  this.Ctx.ResponseWriter.WriteHeader(200)\n  this.Ctx.WriteString(\"You have successfully logged out.\")\n}\n```", "```go\npackage routers\nimport \n(\n  \"my-first-beego-project/controllers\"\n  \"github.com/astaxie/beego\"\n)\nfunc init() \n{\n  beego.Router(\"/\", &controllers.MainController{})\n  beego.Router(\"/employees\", &controllers.FirstController{},\n  \"get:GetEmployees\")\n  beego.Router(\"/dashboard\", &controllers.FirstController{}, \n  \"get:Dashbaord\")\n  beego.Router(\"/home\", &controllers.SessionController{},\n  \"get:Home\")\n  beego.Router(\"/login\", &controllers.SessionController{}, \n  \"get:Login\")\n  beego.Router(\"/logout\", &controllers.SessionController{}, \n  \"get:Logout\")\n}\n```", "```go\npackage main\nimport \n(\n  _ \"my-first-beego-project/routers\"\n  \"github.com/astaxie/beego\"\n  _ \"github.com/astaxie/beego/session/redis\"\n)\nfunc main() \n{\n  beego.BConfig.WebConfig.DirectoryIndex = true\n  beego.BConfig.WebConfig.StaticDir[\"/swagger\"] = \"swagger\"\n  beego.Run()\n}\n```", "```go\nSessionOn = true\nSessionProvider = \"redis\"\nSessionProviderConfig = \"127.0.0.1:6379\"\n```", "```go\n$ bee run \n```", "```go\n$ curl -X GET http://localhost:8080/home \n```", "```go\nYou are unauthorized to view the page.\n```", "```go\n$ curl -X GET -i http://localhost:8080/login\n```", "```go\n$ curl --cookie \"beegosessionID=6e1c6f60141811f1371d7ea044f1c194\" http://localhost:8080/home Home Page\n```", "```go\n$ go get github.com/astaxie/beego/context\n```", "```go\npackage filters \nimport \n(\n  \"fmt\"\n  \"time\"\n  \"github.com/astaxie/beego/context\"\n)\nvar LogManager = func(ctx *context.Context) \n{ \n  fmt.Println(\"IP :: \" + ctx.Request.RemoteAddr + \", \n  Time :: \" + time.Now().Format(time.RFC850))\n}\n```", "```go\npackage routers \nimport \n(\n  \"my-first-beego-project/controllers\"\n  \"my-first-beego-project/filters\"\n  \"github.com/astaxie/beego\"\n)\nfunc init() \n{\n  beego.Router(\"/\", &controllers.MainController{})\n  ...\n  beego.InsertFilter(\"/*\", beego.BeforeRouter, \n  filters.LogManager)\n}\n```", "```go\n$ bee run\n```", "```go\n$ curl -X GET http://localhost:8080/employees\n[\n {\n \"id\": 1,\n \"firstName\": \"Foo\",\n \"lastName\": \"Bar\"\n },\n {\n \"id\": 2,\n \"firstName\": \"Baz\",\n \"lastName\": \"Qux\"\n }\n]\n```", "```go\npackage controllers\nimport \"github.com/astaxie/beego\"\ntype ErrorController struct \n{\n  beego.Controller\n}\nfunc (c *ErrorController) Error404() \n{\n  c.Data[\"content\"] = \"Page Not Found\"\n  c.TplName = \"404.tpl\"\n}\nfunc (c *ErrorController) Error500() \n{\n  c.Data[\"content\"] = \"Internal Server Error\"\n  c.TplName = \"500.tpl\"\n}\nfunc (c *ErrorController) ErrorGeneric() \n{\n  c.Data[\"content\"] = \"Some Error Occurred\"\n  c.TplName = \"genericerror.tpl\"\n}\n```", "```go\npackage controllers\nimport \"github.com/astaxie/beego\"\ntype FirstController struct \n{\n  beego.Controller\n}\ntype Employee struct \n{\n  Id int `json:\"id\"`\n  FirstName string `json:\"firstName\"`\n  LastName string `json:\"lastName\"`\n}\ntype Employees []Employee\nvar employees []Employee\nfunc init() \n{\n  employees = Employees\n  {\n    Employee{Id: 1, FirstName: \"Foo\", LastName: \"Bar\"},\n    Employee{Id: 2, FirstName: \"Baz\", LastName: \"Qux\"},\n  }\n}\n...\nfunc (this *FirstController) GetEmployee() \n{\n  var id int\n  this.Ctx.Input.Bind(&id, \"id\")\n  var isEmployeeExist bool\n  var emps []Employee\n  for _, employee := range employees \n  {\n    if employee.Id == id \n    {\n      emps = append(emps, Employee{Id: employee.Id, \n      FirstName: employee.FirstName, LastName: \n      employee.LastName})\n      isEmployeeExist = true\n      break\n    }\n  }\n  if !isEmployeeExist \n  {\n    this.Abort(\"Generic\")\n  } \n  else \n  {\n    this.Data[\"employees\"] = emps\n    this.TplName = \"dashboard.tpl\"\n  }\n}\n```", "```go\n<!DOCTYPE html>\n<html>\n  <body>\n    {{.content}}\n  </body>\n</html>\n```", "```go\n$ bee run \n```", "```go\n$ go get github.com/astaxie/beego/cache\n```", "```go\npackage controllers\nimport \n(\n  \"fmt\"\n  \"time\"\n  \"github.com/astaxie/beego\"\n  \"github.com/astaxie/beego/cache\"\n)\ntype CacheController struct \n{\n  beego.Controller\n}\nvar beegoCache cache.Cache\nvar err error\nfunc init() \n{\n  beegoCache, err = cache.NewCache(\"memory\",\n  `{\"interval\":60}`)\n  beegoCache.Put(\"foo\", \"bar\", 100000*time.Second)\n}\nfunc (this *CacheController) GetFromCache() \n{\n  foo := beegoCache.Get(\"foo\")\n  this.Ctx.WriteString(\"Hello \" + fmt.Sprintf(\"%v\", foo))\n}\n```", "```go\npackage routers\nimport \n(\n  \"my-first-beego-project/controllers\"\n  \"my-first-beego-project/filters\"\n  \"github.com/astaxie/beego\"\n)\nfunc init() \n{\n  beego.Router(\"/\", &controllers.MainController{})\n  ... \n  beego.Router(\"/getFromCache\", &controllers.\n  CacheController{}, \"get:GetFromCache\")\n}\n```", "```go\n$ bee run\n```", "```go\nappname = my-first-beego-project\n...\nEnableAdmin = true\n..\n```", "```go\nAdminAddr = \"localhost\"\nAdminPort = 8088\n```", "```go\n$ bee run\n```", "```go\nbeego.RunMode = \"prod\"\n```", "```go\n$ mkdir $GOPATH/my-first-beego-app-deployment\n$ cp my-first-beego-project $GOPATH/my-first-beego-app-deployment\n$ cp -fr views $GOPATH/my-first-beego-app-deployment\n$ cp -fr static $GOPATH/my-first-beego-app-deployment\n$ cp -fr conf $GOPATH/my-first-beego-app-deployment\n```", "```go\n$ cd $GOPATH/my-first-beego-app-deployment\n$ nohup ./my-first-beego-project &\n```", "```go\nlocation / \n{\n # root html;\n # index index.html index.htm;\n proxy_pass http://localhost:8080/;\n}\n```", "```go\n$ cd /Users/ArpitAggarwal/nginx/sbin\n$ ./nginx\n```", "```go\n$ bee run\n```"]