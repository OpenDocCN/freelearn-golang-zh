["```go\nv := []int{0, 1, 2, 3}\n```", "```go\npackage main\n\nimport (\n   \"fmt\"\n   \"gonum.org/v1/gonum/mat\"\n)\nfunc main() {\n   v := mat.NewVecDense(4, []float64{0, 1, 2, 3})\n   matPrint(v)\n}\n\nfunc matrixPrint(m mat.Matrix) {\n   formattedMatrix := mat.Formatted(m, mat.Prefix(\"\"), mat.Squeeze())\n   fmt.Printf(\"%v\\n\", formattedMatrix)\n}\n```", "```go\npackage main\n\nimport (\n   \"fmt\"\n   \"gonum.org/v1/gonum/mat\"\n)\n\nfunc main() {\n   v := mat.NewVecDense(5, []float64{1, 2, 3, 4, 5})\n   d := mat.NewVecDense(5, nil)\n   d.AddVec(v, v)\n   fmt.Println(d)\n}\n\nfunc prettyPrintMatrix(m mat.Matrix) { \n    formattedM := mat.Formatted(m, mat.Prefix(\"\"), mat.Squeeze())\n    fmt.Printf(\"%v\\n\", formattedM)\n}\n\n```", "```go\npackage main\n\nimport (\n   \"fmt\"\n   \"gonum.org/v1/gonum/mat\"\n)\n\nfunc main() {\n   a := mat.NewDense(3, 3, []float64{1, 2, 3, 4, 5, 6, 7, 8, 9})\n   a.Add(a, a) // add a and a together\n   matrixPrint(a)\n}\n\nfunc matrixPrint(m mat.Matrix) {\n   formattedMatrix := mat.Formatted(m, mat.Prefix(\"\"), mat.Squeeze())\n   fmt.Printf(\"%v\\n\", formattedMatrix)\n}\n```", "```go\npackage main\n\nimport (\n  \"fmt\"\n\n  \"gonum.org/v1/gonum/mat\"\n)\n\nfunc main() {\n  a := mat.NewDense(4, 2, []float64{1345, 823, 346, 234, 843, 945, 442, 692})\n  b := mat.NewDense(4, 2, []float64{920, 776, 498, 439, 902, 1023, 663, 843})\n  var c mat.Dense\n  c.Sub(b, a)\n  result := mat.Formatted(&c, mat.Prefix(\"\"), mat.Squeeze())\n fmt.Println(result)\n}\n```", "```go\npackage main\n\nimport (\n  \"fmt\"\n\n  \"gonum.org/v1/gonum/mat\"\n)\n\nfunc main() {\n  a := mat.NewDense(3, 3, []float64{1, 2, 3, 4, 5, 6, 7, 8, 9})\n  a.Scale(4, a) // Scale matrix by 4\n  matrixPrint(a)\n}\n\nfunc matrixPrint(m mat.Matrix) {\n  formattedMatrix := mat.Formatted(m, mat.Prefix(\"\"), mat.Squeeze())\n  fmt.Printf(\"%v\\n\", formattedMatrix)\n}\n```", "```go\npackage main\n\nimport (\n    \"fmt\"\n\n    \"gonum.org/v1/gonum/mat\"\n) \n\nfunc main() {\n    usd := mat.NewDense(3, 3, []float64{0.1, 0.05, 0.03, 0.06, 0.04, 0.02, 0.03, 0.02, 0.01})\n    var cad mat.Dense\n    cad.Scale(1.34, usd)\n    result := mat.Formatted(&cad, mat.Prefix(\"\"), mat.Squeeze()) \n    fmt.Println(result)\n} \n```", "```go\npackage main\n\nimport (\n    \"fmt\"\n    \"gonum.org/v1/gonum/mat\"\n)\n\nfunc main() {\n    a := mat.NewDense(2, 2, []float64{1, 2, 3, 4})\n    b := mat.NewDense(2, 3, []float64{1, 2, 3, 4, 5, 6})\n    var c mat.Dense\n    c.Mul(a, b)\n    result := mat.Formatted(&c, mat.Prefix(\"\"), mat.Squeeze())\n    fmt.Println(result)\n}\n```", "```go\npackage main\n\nimport (\n    \"fmt\"\n    \"gonum.org/v1/gonum/mat\"\n)\n\nfunc main() {\n    a := mat.NewDense(1, 3, []float64{0.10, 0.42, 0.37})\n    b := mat.NewDense(3, 2, []float64{5, 8, 10, 6, 2, 3})\n    var c mat.Dense\n    c.Mul(a, b)\n    result := mat.Formatted(&c, mat.Prefix(\"    \"), mat.Squeeze())\n    fmt.Println(result)\n}\n```", "```go\npackage main\n\nimport (\n    \"fmt\"\n    \"gonum.org/v1/gonum/mat\"\n)\n\nfunc main() {\n    a := mat.NewDense(3, 3, []float64{5, 3, 10, 1, 6, 4, 8, 7, 2})\n    matrixPrint(a)\n    matrixPrint(a.T())\n}\n\nfunc matrixPrint(m mat.Matrix) {\n    formattedMatrix := mat.Formatted(m, mat.Prefix(\"\"), mat.Squeeze())\n    fmt.Printf(\"%v\\n\", formattedMatrix)\n}\n```", "```go\npackage main\n\nimport (\n    \"fmt\"\n    \"github.com/james-bowman/sparse\"\n    \"gonum.org/v1/gonum/mat\"\n)\n\nfunc main() {\n    sparseMatrix := sparse.NewDOK(3, 3)\n    sparseMatrix.Set(0, 0, 5)\n    sparseMatrix.Set(1, 1, 1)\n    sparseMatrix.Set(2, 1, -3)\n    fmt.Println(mat.Formatted(sparseMatrix))\n    csrMatrix := sparseMatrix.ToCSR()\n    fmt.Println(mat.Formatted(csrMatrix))\n    cscMatrix := sparseMatrix.ToCSC()\n    fmt.Println(mat.Formatted(cscMatrix))\n}\n```", "```go\npackage main\n\nimport (\n    \"fmt\"\n    \"github.com/james-bowman/sparse\"\n    \"gonum.org/v1/gonum/mat\"\n)\n\nfunc main() {\n    sparseMatrix := sparse.NewDOK(4, 4)\n    sparseMatrix.Set(0, 2, 1)\n    sparseMatrix.Set(1, 0, 2)\n    sparseMatrix.Set(2, 3, 3)\n    sparseMatrix.Set(3, 1, 4)\n    fmt.Print(\"DOK Matrix:\\n\", mat.Formatted(sparseMatrix), \"\\n\\n\") // Dictionary of Keys\n    fmt.Print(\"CSR Matrix:\\n\", sparseMatrix.ToCSR(), \"\\n\\n\")        // Print CSR version of the matrix\n}\n```", "```go\npackage main\n\nimport (\n    \"fmt\"\n\n    \"github.com/james-bowman/sparse\"\n    \"gonum.org/v1/gonum/mat\"\n)\n\nfunc main() {\n    sparseMatrix := sparse.NewDOK(4, 4)\n    sparseMatrix.Set(0, 2, 1)\n    sparseMatrix.Set(1, 0, 2)\n    sparseMatrix.Set(2, 3, 3)\n    sparseMatrix.Set(3, 1, 4)\n    fmt.Print(\"DOK Matrix:\\n\", mat.Formatted(sparseMatrix), \"\\n\\n\") // Dictionary of Keys\n    fmt.Print(\"CSC Matrix:\\n\", sparseMatrix.ToCSC(), \"\\n\\n\")        // Print CSC version\n}\n```"]