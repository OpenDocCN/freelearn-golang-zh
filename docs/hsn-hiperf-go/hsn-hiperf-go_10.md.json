["```go\npackage main\nimport (\n    \"io\"\n    \"net/http\"\n)\n\nfunc main() {\n    Handler := func(w http.ResponseWriter, req *http.Request) {\n       io.WriteString(w, \"Memory Management Test\")\n    }\n    http.HandleFunc(\"/\", Handler)\n    http.ListenAndServe(\":1234\", nil)\n}\n```", "```go\ngo build -ldflags '-libgcc=none' simpleServer.go\n```", "```go\npackage main\nimport (\n    \"debug/elf\"\n    \"fmt\"\n    \"log\"\n    \"os\"\n)\nfunc main() {\n    if len(os.Args) != 2 {\n       fmt.Println(\"Usage: ./elfReader elf_file\")\n       os.Exit(1)\n    }\n    elfFile, err := elf.Open(os.Args[1])\n    if err != nil {\n       log.Fatal(err)\n    }\n    for _, section := range elfFile.Sections {\n       fmt.Println(section)\n    }\n}\n```", "```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    greetingString := \"Hello Gophers!\"\n    fmt.Println(greetingString) \n} \n```", "```go\npackage main\nimport (\n    \"fmt\"\n    \"io\"\n    \"net/http\"\n    \"runtime\"\n)\n\nfunc main() {\n    Handler := func(w http.ResponseWriter, req *http.Request) {\n       io.WriteString(w, \"Memory Management Test\")\n    }\n```", "```go\n  go func() {\n       for {\n           var r runtime.MemStats\n           runtime.ReadMemStats(&r)\n           fmt.Println(\"\\nTime: \", time.Now())\n           fmt.Println(\"Runtime MemStats Sys: \", r.Sys)\n           fmt.Println(\"Runtime Heap Allocation: \", r.HeapAlloc)\n           fmt.Println(\"Runtime Heap Idle: \", r.HeapIdle)\n           fmt.Println(\"Runtime Head In Use: \", r.HeapInuse)\n           fmt.Println(\"Runtime Heap HeapObjects: \", r.HeapObjects)\n           fmt.Println(\"Runtime Heap Released: \", r.HeapReleased)\n           time.Sleep(5 * time.Second)\n       }\n    }()\n    http.HandleFunc(\"/\", Handler)\n    http.ListenAndServe(\":1234\", nil)\n}\n```", "```go\npackage main\nimport (\n    \"fmt\"\n    \"runtime\"\n    \"time\"\n)\n```", "```go\nfunc main() {\n    go func() {\n       for {\n           var r runtime.MemStats\n           runtime.ReadMemStats(&r)\n           fmt.Println(\"\\nTime: \", time.Now())\n           fmt.Println(\"Runtime MemStats Sys: \", r.Sys)\n           fmt.Println(\"Runtime Heap Allocation: \", r.HeapAlloc)\n           fmt.Println(\"Runtime Heap Idle: \", r.HeapIdle)\n           fmt.Println(\"Runtime Heap In Use: \", r.HeapInuse)\n           fmt.Println(\"Runtime Heap HeapObjects: \", r.HeapObjects)\n           fmt.Println(\"Runtime Heap Released: \", r.HeapReleased)\n           time.Sleep(5 * time.Second)\n       }\n    }()\n    fmt.Println(\"Hello Gophers\")\n    time.Sleep(11 * time.Second)\n}\n```", "```go\nexport GODEBUG=netdns=go    # force pure Go resolver\nexport GODEBUG=netdns=cgo   # force cgo resolver\n```", "```go\nexport CGO_ENABLED=0\ngo build -tags netgo\n```", "```go\n export CGO_ENABLED=1\n go build -tags cgo\n```"]