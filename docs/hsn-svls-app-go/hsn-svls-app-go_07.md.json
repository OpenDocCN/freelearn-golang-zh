["```go\nversion: 0.2\nenv:\n variables:\n S3_BUCKET: \"movies-api-deployment-packages\"\n PACKAGE: \"github.com/mlabouardy/lambda-codepipeline\"\n\nphases:\n install:\n commands:\n - mkdir -p \"/go/src/$(dirname ${PACKAGE})\"\n - ln -s \"${CODEBUILD_SRC_DIR}\" \"/go/src/${PACKAGE}\"\n - go get -u github.com/golang/lint/golint\n\n pre_build:\n commands:\n - cd \"/go/src/${PACKAGE}\"\n - go get -t ./...\n - golint -set_exit_status\n - go vet .\n - go test .\n\n build:\n commands:\n - GOOS=linux go build -o main\n - zip $CODEBUILD_RESOLVED_SOURCE_VERSION.zip main\n - aws s3 cp $CODEBUILD_RESOLVED_SOURCE_VERSION.zip s3://$S3_BUCKET/\n\n post_build:\n commands:\n - aws lambda update-function-code --function-name FindAllMovies --s3-bucket $S3_BUCKET --s3-key $CODEBUILD_RESOLVED_SOURCE_VERSION.zip\n```", "```go\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"VisualEditor0\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:PutObject\",\n        \"s3:GetObject\",\n        \"lambda:UpdateFunctionCode\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::movies-api-deployment-packages/*\",\n        \"arn:aws:lambda:us-east-1:305929695733:function:FindAllMovies\"\n      ]\n    }\n  ]\n}\n```", "```go\n// Movie entity\ntype Movie struct {\n  ID string `json:\"id\"`\n  Name string `json:\"name\"`\n}\n```", "```go\ndef bucket = 'movies-api-deployment-packages'\n\nnode('slave-golang'){\n    stage('Checkout'){\n        checkout scm\n    }\n\n    stage('Test'){\n        sh 'go get -u github.com/golang/lint/golint'\n        sh 'go get -t ./...'\n        sh 'golint -set_exit_status'\n        sh 'go vet .'\n        sh 'go test .'\n    }\n\n    stage('Build'){\n        sh 'GOOS=linux go build -o main main.go'\n        sh \"zip ${commitID()}.zip main\"\n    }\n\n    stage('Push'){\n        sh \"aws s3 cp ${commitID()}.zip s3://${bucket}\"\n    }\n\n    stage('Deploy'){\n        sh \"aws lambda update-function-code --function-name FindAllMovies \\\n                --s3-bucket ${bucket} \\\n                --s3-key ${commitID()}.zip \\\n                --region us-east-1\"\n    }\n}\n\ndef commitID() {\n    sh 'git rev-parse HEAD > .git/commitID'\n    def commitID = readFile('.git/commitID').trim()\n    sh 'rm .git/commitID'\n    commitID\n}\n```", "```go\nversion: 2\njobs:\n  build:\n    docker:\n      - image: golang:1.8\n\n    working_directory: /go/src/github.com/mlabouardy/lambda-circleci\n\n    environment:\n        S3_BUCKET: movies-api-deployment-packages\n\n    steps:\n      - checkout\n\n      - run:\n         name: Install AWS CLI & Zip\n         command: |\n          apt-get update\n          apt-get install -y zip python-pip python-dev\n          pip install awscli\n\n      - run:\n          name: Test\n          command: |\n           go get -u github.com/golang/lint/golint\n           go get -t ./...\n           golint -set_exit_status\n           go vet .\n           go test .\n\n      - run:\n         name: Build\n         command: |\n          GOOS=linux go build -o main main.go\n          zip $CIRCLE_SHA1.zip main\n\n      - run:\n          name: Push\n          command: aws s3 cp $CIRCLE_SHA1.zip s3://$S3_BUCKET\n\n      - run:\n          name: Deploy\n          command: |\n            aws lambda update-function-code --function-name FindAllMovies \\\n                --s3-bucket $S3_BUCKET \\\n                --s3-key $CIRCLE_SHA1.zip --region us-east-1\n```"]