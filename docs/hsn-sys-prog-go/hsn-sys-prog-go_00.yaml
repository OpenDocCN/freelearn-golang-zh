- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: This book will provide good, in-depth explanations of various interesting Go
    concepts. It begins with Unix and system programming, which will help you understand
    what components the Unix operating system has to offer, from the kernel API to
    the filesystem, and allow you to familiarize yourself with the basic concepts
    of system programming.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将提供对各种有趣的Go概念的深入解释。它从Unix和系统编程开始，这将帮助您了解Unix操作系统提供了哪些组件，从内核API到文件系统，并让您熟悉系统编程的基本概念。
- en: Next, it moves on to cover the application of I/O operations, focusing on the
    filesystem, files, and streams in the Unix operating system. It covers many topics,
    including reading from and writing to files, among other I/O operations.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，它继续涵盖I/O操作的应用，重点放在Unix操作系统中的文件系统、文件和流上。它涵盖了许多主题，包括从文件中读取和写入等I/O操作。
- en: This book also shows how various processes communicate with one another. It
    explains how to use Unix pipe-based communication in Go, how to handle signals
    inside an application, and how to use a network to communicate effectively. Also,
    it shows how to encode data to improve communication speed.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本书还展示了各种进程如何相互通信。它解释了如何在Go中使用基于Unix管道的通信，如何在应用程序内部处理信号，以及如何使用网络进行有效通信。此外，它还展示了如何对数据进行编码以提高通信速度。
- en: The book will, toward the end, help you to understand the most modern feature
    of Go—concurrency. It will introduce you to the tools the language has, along
    with sync and channels, and how and when to use each one.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本书最后将帮助您了解Go最现代的特性——并发。它将向您介绍语言的工具，包括sync和通道，以及如何何时使用每一个。
- en: Who this book is for
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书适合对象
- en: This book is for developers who want to learn system programming with Go. Although
    no prior knowledge of Unix and Linux system programming is necessary, some intermediate
    knowledge of Go will help you to understand the concepts covered in the book.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本书适合希望学习Go系统编程的开发人员。虽然不需要Unix和Linux系统编程的先前知识，但一些中级Go知识将有助于您理解本书中涵盖的概念。
- en: What this book covers
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖的内容
- en: '[Chapter 1](27b19b4d-7890-4fdc-9619-5204d0a7a60d.xhtml), *An Introduction to
    System Programming*, introduces you to Go and system programming and provides
    some basic concepts and an overview of Unix and its resources, including the kernel
    API. It also defines many concepts that are used throughout the rest of the book.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[第1章](27b19b4d-7890-4fdc-9619-5204d0a7a60d.xhtml)，*系统编程简介*，向您介绍了Go和系统编程，并提供了一些基本概念以及Unix及其资源的概述，包括内核API。它还定义了本书其余部分中使用的许多概念。'
- en: '[Chapter 2](1c402360-b565-4d0b-b201-fdd6baaa5c5c.xhtml), *Unix OS Components*,
    focuses on the Unix operating system and the components that you will interact
    with—files and the filesystem, processes, users and permissions, threads, and
    others. It also explains the various memory management techniques of the operating
    system, and how Unix handles resident and virtual memory.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[第2章](1c402360-b565-4d0b-b201-fdd6baaa5c5c.xhtml)，*Unix操作系统组件*，重点放在Unix操作系统以及您将与之交互的组件上——文件和文件系统、进程、用户和权限、线程等。它还解释了操作系统的各种内存管理技术，以及Unix如何处理驻留内存和虚拟内存。'
- en: '[Chapter 3](602a92d5-25f7-46b8-83d4-10c6af1c6750.xhtml), *An Overview of Go*,
    takes a look at Go, starting with some history of the language and then explaining,
    one by one, all its basic concepts, starting with namespaces and the type system,
    variables, and flow control, and finishing with built-in functions and the concurrency
    model, while also offering an explanation of how Go interacts and manages its
    memory.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[第3章](602a92d5-25f7-46b8-83d4-10c6af1c6750.xhtml)，*Go概述*，介绍了Go，从语言的历史开始，然后逐一解释了所有基本概念，从命名空间和类型系统、变量和流程控制，到内置函数和并发模型，同时还解释了Go如何交互和管理其内存。'
- en: '[Chapter 4](0b73653d-6073-4708-b015-fe6a43cb9f37.xhtml), *Working with the
    Filesystem*, helps you to understand how the Unix filesystem works and how to
    master the Go standard library to handle file path operations, file reading, and
    file writing.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[第4章](0b73653d-6073-4708-b015-fe6a43cb9f37.xhtml)，*使用文件系统*，帮助您了解Unix文件系统的工作原理，以及如何掌握Go标准库来处理文件路径操作、文件读取和文件写入。'
- en: '[Chapter 5](0509e4ee-683c-4beb-b6b1-125c4067baca.xhtml), *Handling Streams*,
    helps you to learn about the interfaces for the input and output streams that
    Go uses to abstract data flows. It explains how they work and how to combine them
    and best use them without leaking information.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[第5章](0509e4ee-683c-4beb-b6b1-125c4067baca.xhtml)，*处理流*，帮助您了解Go用于抽象数据流的输入和输出流的接口。它解释了它们的工作原理，以及如何组合它们并在不泄露信息的情况下最好地使用它们。'
- en: '[Chapter 6](05967583-574d-4164-8ab5-33937bed756a.xhtml), *Building Pseudo-Terminals*,
    helps you understand how a pseudo-terminal application works and how to create
    one. The result will be an interactive application that uses standard streams
    just as the command line does.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[第6章](05967583-574d-4164-8ab5-33937bed756a.xhtml)，*构建伪终端*，帮助您了解伪终端应用程序的工作原理以及如何创建一个。结果将是一个使用标准流的交互式应用程序，就像命令行一样。'
- en: '[Chapter 7](d5c51539-6d21-45e6-a50d-f9ac886afe38.xhtml), *Handling Processes
    and Daemons*, provides an explanation of what processes are and how to handle
    them in Go, how to start child processes from a Go application, and how to create
    a command-line application that will stay in the background (a daemon) and interact
    with it.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[第7章](d5c51539-6d21-45e6-a50d-f9ac886afe38.xhtml)，*处理进程和守护进程*，提供了进程是什么以及如何在Go中处理它们的解释，如何从Go应用程序启动子进程，以及如何创建一个将保持在后台（守护进程）并与其交互的命令行应用程序。'
- en: '[Chapter 8](0fc5a09e-89ae-4b1e-b794-5b0fbda9df27.xhtml), *Exit Codes, Signals,
    and Pipes*, discusses Unix inter-process communication. It explains how to use
    exit codes effectively. It shows you how signals are handled by default inside
    an application, and how to manage them with some patterns for effective signal
    handling. Furthermore, it explains how to connect the output and input of different
    processes using pipes.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 第8章，“退出代码、信号和管道”，讨论了Unix进程间通信。它解释了如何有效地使用退出代码。它向您展示了应用程序内部如何默认处理信号，以及如何使用一些模式来有效地处理信号。此外，它解释了如何使用管道连接不同进程的输出和输入。
- en: '[Chapter 9](75bf8ac9-5cbe-475f-815c-53fb6eb3ec4d.xhtml), *Network Programming*,
    explains how to use a network to make processes communicate. It explains how network
    communication protocols work. It initially focuses on low-level socket communication,
    such as TCP and UDP, before moving on to web server development using the well-known
    HTTP protocol. Finally, it shows how to use the Go template engine.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 第9章，“网络编程”，解释了如何使用网络进行进程通信。它解释了网络通信协议的工作原理。它最初专注于低级套接字通信，如TCP和UDP，然后转向使用众所周知的HTTP协议进行Web服务器开发。最后，它展示了如何使用Go模板引擎。
- en: '[Chapter 10](345f9a5f-93e0-47f6-a832-8e79d591cccc.xhtml), *Data Encoding Using
    Go*, explains how to leverage the Go standard library to encode complex data structures
    in order to facilitate process communications. It analyzes both text-based protocols,
    such as XML and JSON, and binary-based protocols, such as GOB.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 第10章，“使用Go进行数据编码”，解释了如何利用Go标准库对复杂数据结构进行编码，以便促进进程通信。它分析了基于文本的协议，如XML和JSON，以及基于二进制的协议，如GOB。
- en: '[Chapter 11](cbd47216-0772-47b9-b804-0d464cef810a.xhtml), *Dealing with Channels
    and Goroutines*, explains the basics of concurrency and channels and some general
    rules that prevent the creation of deadlocks and resource-leaking inside an application.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 第11章，“处理通道和Goroutines”，解释了并发和通道的基础知识，以及一些通用规则，可以防止在应用程序中创建死锁和资源泄漏。
- en: '[Chapter 12](7d7f27fa-3ef5-4751-baca-dd6169979d01.xhtml), *Synchronization
    with sync and atomic*, discusses the synchronization packages of the `sync` and `sync/atomic` standard
    libraries, and how they can be used instead of channels to achieve concurrency
    easily. It also focuses on avoiding the leaking of resources and on recycling
    resources.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 第12章，“使用sync和atomic进行同步”，讨论了`sync`和`sync/atomic`标准库的同步包，以及如何使用它们来轻松实现并发，而不是使用通道。它还专注于避免资源泄漏和回收资源。
- en: '[Chapter 13](7d4313bd-dde3-4720-843a-723a324ea295.xhtml), *Coordination Using*
    *Context*, discusses `Context`, a relatively new package introduced in Go that
    offers a simple way of handling asynchronous operations effectively.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 第13章，“使用上下文进行协调”，讨论了`Context`，这是Go中一个相对较新的包，提供了一种有效处理异步操作的简单方法。
- en: '[Chapter 14](31e3b336-a08e-4d11-9e78-abf119b555e2.xhtml), *Implementing Concurrency
    Patterns*, uses the tools from the previous three chapters and demonstrates how
    to use and combine them to communicate effectively. It focuses on the most common
    patterns used in Go for concurrency.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 第14章，“实现并发模式”，使用前三章的工具，并演示如何有效地使用和组合它们进行通信。它专注于Go中最常用的并发模式。
- en: '[Chapter 15](8b90e793-c794-4ce3-b32f-f4946d3914de.xhtml), *Using Reflection*,
    explains what reflection is and whether you should use it. It shows where it''s
    used in the standard library and guides you in creating a practical example. It
    also shows how to avoid using reflection where there is no need to.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 第15章，“使用反射”，解释了反射是什么，以及是否应该使用它。它展示了标准库中的反射用途，并指导您创建一个实际的例子。它还展示了如何在没有必要使用反射的情况下避免使用它。
- en: '[Chapter 16](68daff9d-f1c6-4f48-9c3c-f4ea9ef2b538.xhtml), *Using CGO*, explains
    how CGO works and why and when you should use it. It explains how to use C code
    inside a Go application, and vice versa.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 第16章，“使用CGO”，解释了CGO的工作原理，以及为什么以及何时应该使用它。它解释了如何在Go应用程序中使用C代码，以及如何在C代码中使用Go。
- en: To get the most out of this book
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 充分利用本书
- en: Some basic knowledge of Go is required to try the examples and to build modern
    applications.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试示例和构建现代应用程序需要一些Go的基础知识。
- en: Each chapter includes a set of questions that will help you to gauge your understanding
    of the chapter. The answers to these questions are provided in the *Assessments*
    section of the book. These questions will prove very beneficial for you, as they
    will help you revisit each chapter at a glance.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 每一章都包括一组问题，这些问题将帮助您评估对该章节的理解。这些问题将对您非常有益，因为它们将帮助您快速复习每一章。
- en: Apart from this, each chapter provides you with instructions on how to run the
    code files, while the GitHub repository of the book provides the requisite details.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，每一章都提供了如何运行代码文件的说明，而书的GitHub存储库提供了必要的细节。
- en: Download the example code files
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: You can download the example code files for this book from your account at [www.packt.com](http://www.packt.com).
    If you purchased this book elsewhere, you can visit [www.packt.com/support](http://www.packt.com/support)
    and register to have the files emailed directly to you.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[www.packt.com](http://www.packt.com)的帐户中下载本书的示例代码文件。如果您在其他地方购买了本书，您可以访问[www.packt.com/support](http://www.packt.com/support)并注册，以便直接通过电子邮件接收文件。
- en: 'You can download the code files by following these steps:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以按照以下步骤下载代码文件：
- en: Log in or register at [www.packt.com](http://www.packt.com).
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在[www.packt.com](http://www.packt.com)登录或注册。
- en: Select the SUPPORT tab.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择“支持”选项卡。
- en: Click on Code Downloads & Errata.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“代码下载和勘误”。
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在搜索框中输入书名，并按照屏幕上的说明操作。
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 下载文件后，请确保使用以下最新版本解压或提取文件夹：
- en: WinRAR/7-Zip for Windows
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WinRAR/7-Zip for Windows
- en: Zipeg/iZip/UnRarX for Mac
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Zipeg/iZip/UnRarX for Mac
- en: 7-Zip/PeaZip for Linux
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 7-Zip/PeaZip for Linux
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Hands-On-System-Programming-with-Go](https://github.com/PacktPublishing/Hands-On-System-Programming-with-Go). In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的代码包也托管在GitHub上，链接为[https://github.com/PacktPublishing/Hands-On-System-Programming-with-Go](https://github.com/PacktPublishing/Hands-On-System-Programming-with-Go)。如果代码有更新，将在现有的GitHub存储库上进行更新。
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还提供了来自我们丰富书籍和视频目录的其他代码包，可在**[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**上找到。快去看看吧！
- en: Download the color images
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载彩色图片
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [https://static.packt-cdn.com/downloads/9781789804072_ColorImages.pdf](https://static.packt-cdn.com/downloads/9781789804072_ColorImages.pdf).'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还提供了一份PDF文件，其中包含本书中使用的屏幕截图/图表的彩色图片。您可以在此处下载：[https://static.packt-cdn.com/downloads/9781789804072_ColorImages.pdf](https://static.packt-cdn.com/downloads/9781789804072_ColorImages.pdf)。
- en: Code in Action
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码示例
- en: Visit the following link to check out videos of the code being run: [http://bit.ly/2ZWgJb5](http://bit.ly/2ZWgJb5).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 访问以下链接查看代码运行的视频：[http://bit.ly/2ZWgJb5](http://bit.ly/2ZWgJb5)。
- en: Playground examples
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 示例演示
- en: In the course of the book you will find many snippets of code followed by a
    link to [https://play.golang.org](https://play.golang.org), a service that allows
    you to run Go applications with some limitations. You can read more about it at
    [https://blog.golang.org/playground](https://blog.golang.org/playground).
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，您会发现许多代码片段，后面跟着一个链接到[https://play.golang.org](https://play.golang.org)，这是一个允许您以一定限制运行Go应用程序的服务。您可以在[https://blog.golang.org/playground](https://blog.golang.org/playground)上了解更多信息。
- en: 'In order to see the full source code of such examples, you need to visit the
    Playground link. Once on the website, you can press the Run button to execute
    the application. The bottom part of the page will show the output. The following
    is an example of the code running in the Go Playground:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看此类示例的完整源代码，您需要访问Playground链接。一旦进入网站，您可以点击运行按钮来执行应用程序。页面底部将显示输出。以下是代码在Go Playground中运行的示例：
- en: '![](img/ea782ebb-71ed-4d93-a9bb-3211d5d063b3.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ea782ebb-71ed-4d93-a9bb-3211d5d063b3.png)'
- en: If you want, you have the possibility of experimenting by adding and editing
    more code to the examples, and then running them.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您愿意，您可以通过向示例添加和编辑更多代码，然后运行它们来进行实验。
- en: Conventions used
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中使用了许多文本约定。
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "This type of service includes `load`, which adds a program
    to memory and prepares for its execution before passing control to the program
    itself, or `execute`, which runs an executable file in the context of a pre-existing
    process."'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '`CodeInText`：表示文本中的代码词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter句柄。例如："这种服务包括`load`，它将程序加载到内存并在将控制传递给程序本身之前准备执行程序，或者`execute`，它在现有进程的上下文中运行可执行文件。"'
- en: 'A block of code is set as follows:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都将按如下方式书写：
- en: '[PRE1]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Bold**: Indicates a new term, an important word, or words that you see on
    screen. For example, words in menus or dialog boxes appear in the text like this.
    Here is an example: "In the meantime, systems started to get distributed, and
    applications started to get shipped in containers, orchestrated by other system
    software, such as **Kubernetes**."'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**粗体**：表示新术语、重要单词或屏幕上看到的单词。例如，菜单或对话框中的单词会以这种方式出现在文本中。例如："与此同时，系统开始变得分布式，应用程序开始以容器的形式进行交付，并由其他系统软件进行编排，比如**Kubernetes**。"'
- en: Warnings or important notes appear like this.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要说明会显示为这样。
- en: Tips and tricks appear like this.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 提示和技巧会显示为这样。
