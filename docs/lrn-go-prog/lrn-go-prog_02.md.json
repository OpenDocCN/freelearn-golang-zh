["```go\n          //1 Package Clause \n          package main \n\n    ```", "```go\n          //2 Import Declaration \n          import \"fmt\" \n          import \"math/rand\" \n          import \"time\" \n\n    ```", "```go\n          //3 Source Body \n          var greetings = [][]string{ \n            {\"Hello, World!\",\"English\"}, \n            ... \n          } \n\n          func greeting() [] string { \n            ... \n          } \n\n          func main() { \n            ... \n          } \n\n    ```", "```go\nfunc main() { \n    if \"a\" == \"a\" \n    { \n      fmt.Println(\"Hello, World!\") \n    } \n} \n\n```", "```go\n$> ... missing condition in if statement ... \n\n```", "```go\nlonStr := \"Hello World! \" +\n\"How are you?\"\n\n```", "```go\nlonStr := \"Hello World! \"\n+ \"How are you?\"\n\n```", "```go\nfmt.Printf(\"[%s] %d %d %v\",\nstr,\nnum1,\nnum2,\nnameMap)\n\n```", "```go\nfmt.Printf(\"[%s] %d %d %v\",\nstr,\nnum1,\nnum2,\nnameMap)\n\n```", "```go\nweekDays := []string{\n\"Mon\", \"Tue\",\n\"Wed\", \"Thr\",\n\"Fri\"\n}\n\n```", "```go\nweekDays2 := []string{\n\"Mon\", \"Tue\",\n\"Wed\", \"Thr\",\n\"Fri\",\n}\n\n```", "```go\nimport \"fmt\" \nimport \"path/filepath\" \nimport _ \"log\" \n\n```", "```go\n_, execFile := filepath.Split(\"/opt/data/bigdata.txt\")\n```", "```go\n*var <identifier list> <type>*\n\n```", "```go\npackage main \n\nimport \"fmt\" \n\nvar name, desc string \nvar radius int32 \nvar mass float64 \nvar active bool \nvar satellites []string \n\nfunc main() { \n  name = \"Sun\" \n  desc = \"Star\" \n  radius = 685800 \n  mass = 1.989E+30 \n  active = true \n  satellites = []string{ \n    \"Mercury\", \n    \"Venus\", \n    \"Earth\", \n    \"Mars\", \n    \"Jupiter\", \n    \"Saturn\", \n    \"Uranus\", \n    \"Neptune\", \n  } \n  fmt.Println(name) \n  fmt.Println(desc) \n  fmt.Println(\"Radius (km)\", radius) \n  fmt.Println(\"Mass (kg)\", mass) \n  fmt.Println(\"Satellites\", satellites) \n} \n\n```", "```go\nvar name, desc string = \"Earth\", \"Planet\" \nvar radius int32 = 6378 \nvar mass float64 = 5.972E+24 \nvar active bool = true \nvar satellites = []string{ \n  \"Moon\", \n} \n\n```", "```go\nvar name, desc = \"Mars\", \"Planet\" \nvar radius = 6755 \nvar mass = 641693000000000.0 \nvar active = true \nvar satellites = []string{ \n  \"Phobos\", \n  \"Deimos\", \n} \n\n```", "```go\nfunc main() { \n    name := \"Neptune\" \n    desc := \"Planet\" \n    radius := 24764 \n    mass := 1.024e26 \n    active := true \n    satellites := []string{ \n         \"Naiad\", \"Thalassa\", \"Despina\", \"Galatea\", \"Larissa\", \n     \"S/2004 N 1\", \"Proteus\", \"Triton\", \"Nereid\", \"Halimede\", \n         \"Sao\", \"Laomedeia\", \"Neso\", \"Psamathe\", \n    } \n... \n} \n\n```", "```go\nvar ( \n  name string = \"Earth\" \n  desc string = \"Planet\" \n  radius int32 = 6378 \n  mass float64 = 5.972E+24 \n  active bool = true \n  satellites []string   \n) \n\n```", "```go\n\"Mastering Go\" \n'G' \nfalse \n111009 \n2.71828 \n94314483457513374347558557572455574926671352 1e+500 \n5.0i \n\n```", "```go\nconst a1, a2 string = \"Mastering\", \"Go\" \nconst b rune = 'G' \nconst c bool = false \nconst d int32 = 111009 \nconst e float32 = 2.71828 \nconst f float64 = math.Pi * 2.0e+3 \nconst g complex64 = 5.0i \nconst h time.Duration = 4 * time.Second \n\n```", "```go\nconst i = \"G is\" + \" for Go \" \nconst j = 'V' \nconst k1, k2 = true, !k1 \nconst l = 111*100000 + 9 \nconst m1 = math.Pi / 3.141592 \nconst m2 = 1.414213562373095048801688724209698078569671875376... \nconst m3 = m2 * m2 \nconst m4 = m3 * 1.0e+400 \nconst n = -5.0i * 3 \nconst o = time.Millisecond * 5 \n\n```", "```go\nconst m2 = 1.414213562373095048801688724209698078569671875376... \nvar u1 float32 = m2 \nvar u2 float64 = m2 \nu3 := m2 \n\n```", "```go\nu1 = 1.4142135      //float32 \nu2 = 1.4142135623730951   //float64 \n\n```", "```go\nU3 = 1.4142135623730951  //float64 \n\n```", "```go\nconst ( \n  a1, a2 string        = \"Mastering\", \"Go\" \n  b      rune          = 'G' \n  c      bool          = false \n  d      int32         = 111009 \n  e      float32       = 2.71828 \n  f      float64       = math.Pi * 2.0e+3 \n  g      complex64     = 5.0i \n  h      time.Duration = 4 * time.Second \n... \n) \n\n```", "```go\nconst ( \n  StarHyperGiant = iota \n  StarSuperGiant \n  StarBrightGiant \n  StarGiant \n  StarSubGiant \n  StarDwarf \n  StarSubDwarf \n  StarWhiteDwarf \n  StarRedDwarf \n  StarBrownDwarf \n) \n\n```", "```go\nconst ( \n  StarHyperGiant = iota \n  StarSuperGiant \n  StarBrightGiant \n  StarGiant \n  StarSubGiant \n) \nconst ( \n  StarDwarf = iota \n  StarSubDwarf \n  StarWhiteDwarf \n  StarRedDwarf \n  StarBrownDwarf \n) \n\n```", "```go\nconst ( \n  StarDwarf byte = iota \n  StarSubDwarf \n  StarWhiteDwarf \n  StarRedDwarf \n  StarBrownDwarf \n) \n\n```", "```go\nconst ( \n  StarHyperGiant = 2.0*iota \n  StarSuperGiant \n  StarBrightGiant \n  StarGiant \n  StarSubGiant \n) \n\n```", "```go\n StarHyperGiant = 0    [float64]\n    StarSuperGiant = 2    [float64]\n    StarBrightGiant = 4   [float64]\n    StarGiant = 6         [float64]\n    StarSubGiant = 8      [float64] \n\n```", "```go\n_              = iota    // value 0 \nStarHyperGiant = 1 << iota \nStarSuperGiant \nStarBrightGiant \nStarGiant \nStarSubGiant \n_          // value 64 \nStarDwarf \nStarSubDwarf \nStarWhiteDwarf \nStarRedDwarf \nStarBrownDwarf \n\n```", "```go\n StarHyperGiant = 2\n    StarSuperGiant = 4\n    StarBrightGiant = 8\n    StarGiant = 16\n    StarSubGiant = 32\n    StarDwarf = 128\n    StarSubDwarf = 256\n    StarWhiteDwarf = 512\n    StarRedDwarf = 1024\n    StarBrownDwarf = 2048 \n\n```", "```go\nfunc reverse(s string) { \n  for i := len(s) - 1; i >= 0; { \n    fmt.Print(string(s[i])) \n    i-- \n  } \n} \n\n```", "```go\nnextChar := i++       // syntax error \nfmt.Println(\"Current char\", i--)   // syntax error \nnextChar++        // OK \n\n```", "```go\nfor i := len(s) - 1; i >= 0; { \n  fmt.Print(string(s[i])) \n  --i   //syntax error \n} \n\n```"]