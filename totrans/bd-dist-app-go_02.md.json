["```go\nwget -c https://golang.org/dl/go1.15.6.linux-amd64.tar.gz   //64bit\nwget -c https://golang.org/dl/go1.15.6.linux-386.tar.gz     //32bit\n```", "```go\ntar -C /usr/local -xzf go1.15.6.linux-amd64.tar.gz\n```", "```go\nexport PATH=$PATH:/usr/local/go/bin\n```", "```go\ngo version\n```", "```go\nwget -c https://golang.org/dl/go1.15.6.windows-amd64.msi   //64bit\nwget -c https://golang.org/dl/go1.15.6.windows-386.msi     //32bit\n```", "```go\nsource ~/.profile\n```", "```go\nbrew install golang@1.15.6\n```", "```go\nbrew update\nbrew upgrade golang\n```", "```go\nmkdir -p $HOME/go/{bin,src,pkg}\n```", "```go\nThe go, bin and  src folders should be at the same level (remove extra spaces from go and src folders, so the folders are aligned with bin folder)\n$HOME \n └── go \n ├── bin \n └── src \n```", "```go\nexport GOPATH=$HOME/go\nexport PATH=$PATH:$GOPATH/bin\n```", "```go\necho $PATH\n```", "```go\n/Users/USER/go/bin:/usr/local/sbin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin\n```", "```go\ngo get github.com/gin-gonic/gin\n```", "```go\nmkdir -p $GOHOME/src/hello-world \ncd $GOHOME/src/hello-world\n```", "```go\npackage main\nimport \"github.com/gin-gonic/gin\"\nfunc main() {\n   router := gin.Default()\n   router.GET(\"/\", func(c *gin.Context) {\n       c.JSON(200, gin.H{\n           \"message\": \"hello world\",\n       })\n   })\n   router.Run()\n}\n```", "```go\ngo run main.go\n```", "```go\ncurl -X GET http://localhost:8080\n```", "```go\nr.Run(\":5000\")\n```", "```go\ngit init \ngit remote add origin https://github.com/mlabouardy/hello-world.git\n```", "```go\ngit add . \ngit commit -m \"initial commit\" \ngit push origin master\n```", "```go\ngo mod init hello-world\n```", "```go\nmodule github.com/mlabouardy/hello-world\ngo 1.15\n```", "```go\nmodule github.com/mlabouardy/hello-world\ngo 1.15\nrequire github.com/gin-gonic/gin v1.6.3\n```", "```go\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/gin-contrib/sse v0.1.0 h1:Y/yl/+YNO8GZSjAhjMsSuLt29uWRFHdHYUb5lYOV9qE=\ngithub.com/gin-contrib/sse v0.1.0/go.mod h1:RHrZQHXnP2xjPF+u1gW/2HnVO7nvIa9PG3Gm+fLHvGI=\ngithub.com/gin-gonic/gin v1.6.3 h1:ahKqKTFpO5KTPHxWZjEdPScmYaGtLo8Y4DMHoEsnp14=\ngithub.com/gin-gonic/gin v1.6.3/go.mod h1:75u5sXoLsGZoRN5Sgbi1eraJ4GU3++wFwWzhwvtwp4M=\ngithub.com/go-playground/assert/v2 v2.0.1/go.mod h1:VDjEfimB/XKnb+ZQfWdccd7VUvScMdVu0Titje2rxJ4=\ngithub.com/go-playground/locales v0.13.0 h1:HyWk6mgj5qFqCT5fjGBuRArbVDfE4hi8+e8ceBS/t7Q=\ngithub.com/go-playground/locales v0.13.0/go.mod\n```", "```go\ngo list -m all\n```", "```go\ngithub.com/mlabouardy/hello-world\ngithub.com/davecgh/go-spew v1.1.1\ngithub.com/gin-contrib/sse v0.1.0\ngithub.com/gin-gonic/gin v1.6.3\ngithub.com/go-playground/assert/v2 v2.0.1\ngithub.com/go-playground/locales v0.13.0\ngithub.com/go-playground/universal-translator v0.17.0\ngithub.com/go-playground/validator/v10 v10.2.0\ngithub.com/golang/protobuf v1.3.3\ngithub.com/google/gofuzz v1.0.0\ngithub.com/json-iterator/go v1.1.9\ngithub.com/leodido/go-urn v1.2.0\ngithub.com/mattn/go-isatty v0.0.12\ngithub.com/modern-go/concurrent v0.0.0-20180228061459\ne0a39a4cb421\ngithub.com/modern-go/reflect2 v0.0.0-20180701023420\n4b7aa43c6742\ngithub.com/pmezard/go-difflib v1.0.0\ngithub.com/stretchr/objx v0.1.0\ngithub.com/stretchr/testify v1.4.0\ngithub.com/ugorji/go v1.1.7\ngithub.com/ugorji/go/codec v1.1.7\ngolang.org/x/sys v0.0.0-20200116001909-b77594299b42\ngolang.org/x/text v0.3.2\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405\ngopkg.in/yaml.v2 v2.2.8\n```", "```go\ngit add .\ngit commit -m \"dependency management\"\ngit push origin master\n```", "```go\ngo mod vendor\n```", "```go\ngo mod graph | sed -Ee 's/@[^[:blank:]]+//g' | sort | uniq >unver.txt\n```", "```go\ngithub.com/gin-contrib/sse github.com/stretchr/testify\ngithub.com/gin-gonic/gin github.com/gin-contrib/sse\ngithub.com/gin-gonic/gin github.com/go-playground/validator/v10\ngithub.com/gin-gonic/gin github.com/golang/protobuf\ngithub.com/gin-gonic/gin github.com/json-iterator/go\ngithub.com/gin-gonic/gin github.com/mattn/go-isatty\ngithub.com/gin-gonic/gin github.com/stretchr/testify\ngithub.com/gin-gonic/gin github.com/ugorji/go/codec\ngithub.com/gin-gonic/gin gopkg.in/yaml.v2\n```", "```go\ndigraph {\n    graph [overlap=false, size=14];\n    root=\"$(go list -m)\";\n    node [ shape = plaintext, fontname = \"Helvetica\", \n          fontsize=24];\n    \"$(go list -m)\" [style = filled, \n                     fillcolor = \"#E94762\"];\n```", "```go\ncat unver.txt | awk '{print \"\\\"\"$1\"\\\" -> \\\"\"$2\"\\\"\"};' >>graph.dot\necho \"}\" >>graph.dot\nsed -i '' 's+\\(\"github.com/[^/]*/\\)\\([^\"]*\"\\)+\\1\\\\n\\2+g' graph.dot\n```", "```go\n    apt-get install graphviz\n    ```", "```go\n    brew install graphviz\n    ```", "```go\n    choco install graphviz.portable\n    ```", "```go\nsfdp -Tsvg -o graph.svg graph.dot\n```", "```go\nopen graph.svg\n```", "```go\npackage main\nimport \"github.com/gin-gonic/gin\"\nfunc IndexHandler(c *gin.Context){\n   c.JSON(200, gin.H{\n       \"message\": \"hello world\",\n   })\n}\nfunc main() {\n   router := gin.Default()\n   router.GET(\"/\", IndexHandler)\n   router.Run()\n}\n```", "```go\n/users/john\n/hello/mark\n```", "```go\nfunc main() {\n   router := gin.Default()\n   router.GET(\"/:name\", IndexHandler)\n   router.Run()\n}\n```", "```go\nfunc IndexHandler(c *gin.Context) {\n   name := c.Params.ByName(\"name\")\n   c.JSON(200, gin.H{\n       \"message\": \"hello \" + name,\n   })\n}\n```", "```go\nfunc main() {\n   router := gin.Default()\n   router.GET(\"/\", IndexHandler)\n   router.Run()\n}\ntype Person struct {\n     XMLName xml.Name `xml:\"person\"`\n     FirstName     string   `xml:\"firstName,attr\"`\n     LastName     string   `xml:\"lastName,attr\"`\n}\nfunc IndexHandler(c *gin.Context) {\n     c.XML(200, Person{FirstName: \"Mohamed\", \n                       LastName: \"Labouardy\"})\n}\n```"]