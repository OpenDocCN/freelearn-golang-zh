["```go\n    ssh ec2-user@IP –I key.pem\n    ```", "```go\n    chapter06/docker-compose.yml file:\n\n    ```", "```go\n\n    The stack consists of the following services:a. RESTful API written with Go and the Gin frameworkb. A dashboard written with JavaScript and the React frameworkc. MongoDB for data storaged. Redis for in-memory storage and API cachinge. Nginx as a reverse proxy\n    ```", "```go\n    cd api\n    docker build -t api .\n    ```", "```go\n    cd ..\n    docker-compose up –d\n    ```", "```go\naws ecr get-login-password --region REGION | docker login --username AWS --password-stdin ID.dkr.ecr.REGION.amazonaws.com\ndocker tag api ID.dkr.ecr.REGION.amazonaws.com/USER/recipes-api:latest\ndocker push ID.dkr.ecr.REGION.amazonaws.com/USER/recipes-api:latest\n```", "```go\nversion: \"3.9\"\nservices:\n api:\n   image: ACCOUNT_ID.dkr.ecr.eu-central-1.amazonaws.com/\n      mlabouardy/recipes-api:latest\n   environment:\n     - MONGO_URI=mongodb://admin:password@mongodb:27017/\n           test?authSource=admin&readPreference=\n           primary&ssl=false\n     - MONGO_DATABASE=demo\n     - REDIS_URI=redis:6379\n   external_links:\n     - mongodb\n     - redis\n   scale: 5\n dashboard:\n   image: ACCOUNT_ID.dkr.ecr.eu-central-1.amazonaws.com/\n       mlabouardy/dashboard:latest\n```", "```go\necs-cli configure profile --profile-name default --access-key KEY --secret-key SECRET\n```", "```go\n{\n   \"Version\": \"2012-10-17\",\n   \"Statement\": [\n       {\n           \"Sid\": \"\",\n           \"Effect\": \"Allow\",\n           \"Principal\": {\n               \"Service\": \"ecs-tasks.amazonaws.com\"\n           },\n           \"Action\": \"sts:AssumeRole\"\n       }\n   ]\n}\n```", "```go\naws iam --region REGION create-role --role-name ecsTaskExecutionRole --assume-role-policy-document file://task-execution-assume-role.json\naws iam --region REGION attach-role-policy --role-name ecsTaskExecutionRole --policy-arn arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy\n```", "```go\necs-cli configure --cluster sandbox --default-launch-type FARGATE --config-name sandbox --region REGION\necs-cli up --cluster-config sandbox --aws-profile default\n```", "```go\nversion: 1\ntask_definition:\n task_execution_role: ecsTaskExecutionRole\n ecs_network_mode: awsvpc\n task_size:\n   mem_limit: 2GB\n   cpu_limit: 256\nrun_params:\n network_configuration:\n   awsvpc_configuration:\n     subnets:\n       - \"subnet-e0493c88\"\n       - \"subnet-7472493e\"\n     security_groups:\n       - \"sg-d84cb3b3\"\n     assign_public_ip: ENABLED\n```", "```go\necs-cli compose --project-name application -f \ndocker-compose.ecs.yml up --cluster sandbox \n--create-log-groups\n```", "```go\naws ec2 authorize-security-group-ingress --group-id SG_ID --protocol tcp --port 80 --cidr 0.0.0.0/0 --region REGION\n```", "```go\necs-cli compose --project-name application service ps –cluster--config sandbox --ecs-profile default\n```", "```go\ncurl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/darwin/amd64/kubectl \nchmod +x ./kubectl\nmv kubectl /usr/local/bin/\n```", "```go\nClient Version: version.Info{Major:\"1\", Minor:\"21\", GitVersion:\"v1.21.0\", GitCommit:\"cb303e613a121a29364f75cc67d3d580833a7479\", GitTreeState:\"clean\", BuildDate:\"2021-04-08T16:31:21Z\", GoVersion:\"go1.16.1\", Compiler:\"gc\", Platform:\"darwin/amd64\"}\n```", "```go\naws eks update-kubeconfig --name sandbox --region eu-central-1\n```", "```go\nkubectl get nodes\n```", "```go\n    curl -L https://github.com/kubernetes/kompose/releases/download/v1.22.0/kompose-darwin-amd64 -o kompose\n    chmod +x kompose\n    sudo mv ./kompose /usr/local/bin/kompose\n    ```", "```go\n    kompose convert -o deploy\n    ```", "```go\n    apiVersion: apps/v1\n    kind: Deployment\n    metadata:\n     annotations:\n       kompose.cmd: kompose convert\n       kompose.version: 1.22.0 (955b78124)\n     creationTimestamp: null\n     labels:\n       io.kompose.service: api\n     name: api\n    spec:\n     replicas: 1\n     selector:\n       matchLabels:\n         io.kompose.service: api\n     strategy: {}\n     template:\n       metadata:\n         annotations:\n           kompose.cmd: kompose convert\n           kompose.version: 1.22.0 (955b78124)\n         creationTimestamp: null\n         labels:\n           io.kompose.network/api_network: \"true\"\n           io.kompose.service: api\n       spec:\n         containers:\n           - env:\n               - name: MONGO_DATABASE\n                 value: demo\n               - name: MONGO_URI\n                 value: mongodb://admin:password\n                     @mongodb:27017/test?authSource=admin\n                     &readPreference=primary&ssl=false\n               - name: REDIS_URI\n                 value: redis:6379\n             image: ID.dkr.ecr.REGION.amazonaws.com/USER\n                 /recipes-api:latest\n             name: api\n             resources: {}\n         restartPolicy: Always\n    status: {}\n    ```", "```go\n    kubectl apply -f .\n    ```", "```go\n    kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.5/aio/deploy/recommended.yaml\n    ```", "```go\n    apiVersion: v1\n    kind: ServiceAccount\n    metadata:\n      name: eks-admin\n      namespace: kube-system\n    ---\n    apiVersion: rbac.authorization.k8s.io/v1beta1\n    kind: ClusterRoleBinding\n    metadata:\n      name: eks-admin\n    roleRef:\n      apiGroup: rbac.authorization.k8s.io\n      kind: ClusterRole\n      name: cluster-admin\n    subjects:\n    - kind: ServiceAccount\n      name: eks-admin\n      namespace: kube-system\n    ```", "```go\n    kubectl apply -f eks-admin-service-account.yml\n    ```", "```go\n    kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep eks-admin | awk '{print $1}')\n    ```", "```go\n    kubectl proxy\n    ```"]