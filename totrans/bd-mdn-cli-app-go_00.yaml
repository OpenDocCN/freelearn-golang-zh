- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: '*If you’re interested in taking your command-line interface (CLI) application
    development skills to the next level, Building Modern CLI Applications with Go
    is the book for you. This guide provides a comprehensive and hands-on approach
    to building CLI applications from scratch, using the popular Go programming language.
    Not only will you learn how to use frameworks such as Cobra and Termdash, but
    you’ll also discover how to integrate empathetic approaches that prioritize human-first
    design. This book covers the entire development process, from compiling and distributing
    your application across multiple operating systems, to releasing it with GoReleaser
    and expanding your user base through Homebrew formulas. With clear explanations,
    practical examples, and insightful tips, this book will transform you into a skilled
    and creative CLI developer, able to create powerful, intuitive, and user-friendly
    applications that will delight* *your users.*'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果您想将您的命令行界面（CLI）应用程序开发技能提升到下一个层次，那么《使用 Go 构建 Modern CLI 应用程序》这本书就是您所需要的。本指南提供了一种全面且实用的方法，从零开始使用流行的
    Go 编程语言构建 CLI 应用程序。您不仅将学习如何使用 Cobra 和 Termdash 等框架，还将发现如何整合以人为先的设计理念。本书涵盖了整个开发过程，从编译和分发您的应用程序到多个操作系统，到使用
    GoReleaser 发布以及通过 Homebrew 公式扩展您的用户群。凭借清晰的解释、实用的示例和有见地的技巧，本书将使您成为一名熟练且富有创造力的 CLI
    开发者，能够创建强大、直观且用户友好的应用程序，从而让您* *的用户感到愉悦。*'
- en: Who this book is for
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书面向对象
- en: '*This book is aimed at intermediate Go developers who want to expand their
    skillset and develop powerful, user-friendly command-line* *interface applications.*'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '*本书面向希望扩展技能集并开发强大、用户友好的命令行* *界面应用程序的中级 Go 开发者。*'
- en: What this book covers
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖内容
- en: '[*Chapter 1*](B18883_01.xhtml#_idTextAnchor014), *Understanding CLI Standards,*
    The Command-Line Interface (CLI) was initially created as a way to interact with
    Operating Systems before graphical user interfaces (GUIs) were invented. Although
    the GUI and web have become more common, there has been a resurgence of CLI development
    in recent years, particularly as an additional offering alongside a company’s
    API. In this chapter, you will learn about the history and anatomy of the CLI,
    the principles of UNIX, and why Go is a compelling language for building CLI applications.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第 1 章*](B18883_01.xhtml#_idTextAnchor014)，*理解 CLI 标准*，命令行界面（CLI）最初是为了在图形用户界面（GUI）发明之前与操作系统交互而创建的。尽管
    GUI 和网络已经变得更加普遍，但近年来 CLI 开发又重新兴起，尤其是在公司 API 之外作为一项额外服务。在本章中，您将了解 CLI 的历史和结构，UNIX
    的原则以及为什么 Go 是构建 CLI 应用程序的有力语言。'
- en: '[*Chapter 2*](B18883_02.xhtml#_idTextAnchor036), *Structuring Go Code for CLI
    Applications*, This chapter serves as a guide for those who are unsure of how
    to begin creating a new CLI application. It covers popular ways to structure code,
    the concept of domain-driven design, and provides an example of a real-world use
    case for an audio metadata CLI application. By the end of the chapter, readers
    will have the necessary skills to develop an application based on their specific
    use cases and requirements.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第 2 章*](B18883_02.xhtml#_idTextAnchor036)，*为 CLI 应用程序结构化 Go 代码*，本章为那些不确定如何开始创建新的
    CLI 应用程序的人提供指南。它涵盖了结构化代码的流行方式，领域驱动设计的概念，并提供了一个音频元数据 CLI 应用程序的实际用例。到本章结束时，读者将具备根据他们特定的用例和需求开发应用程序的必要技能。'
- en: '[*Chapter 3*](B18883_03.xhtml#_idTextAnchor061), *Building an Audio Metadata
    CLI*, This chapter provides hands-on learning by walking readers through building
    an audio metadata CLI’s use cases from start to finish. The code is available
    online and can be explored independently or alongside the chapter. Additionally,
    readers are encouraged to use their imagination to consider alternative ways to
    implement commands.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第 3 章*](B18883_03.xhtml#_idTextAnchor061)，*构建音频元数据 CLI*，本章通过引导读者从头到尾构建音频元数据
    CLI 的用例来提供实践学习。代码可在网上找到，可以独立探索或与章节一起探索。此外，鼓励读者发挥想象力，考虑实现命令的替代方法。'
- en: '[*Chapter 4*](B18883_04.xhtml#_idTextAnchor087), *Popular Frameworks for Building
    CLIs*, In this chapter, the most popular frameworks for developing modern CLI
    applications will be explored, with a focus on Cobra and its ability to quickly
    generate the scaffolding needed for a CLI application. Viper, which easily integrates
    with Cobra and provides extensive configuration options for applications, will
    also be discussed.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第4章*](B18883_04.xhtml#_idTextAnchor087), *构建CLIs的流行框架*，本章将探讨开发现代CLI应用程序最流行的框架，重点关注Cobra及其快速生成CLI应用程序所需脚手架的能力。Viper也将被讨论，它易于与Cobra集成，并为应用程序提供广泛的配置选项。'
- en: '[*Chapter 5*](B18883_05.xhtml#_idTextAnchor109), *Defining the Command-Line
    Process*, This chapter delves deeper into the anatomy of a command-line application,
    breaking down the different types of input such as subcommands, arguments, and
    flags, as well as other inputs such as stdin, signals, and control characters.
    It also provides examples of processing data for each input type and how to return
    the result in a way that is easily interpreted by both humans and computers.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第5章*](B18883_05.xhtml#_idTextAnchor109), *定义命令行进程*，本章深入探讨了命令行应用程序的结构，分解了不同类型的输入，如子命令、参数和标志，以及其他输入，如stdin、信号和控制字符。它还提供了处理每种输入类型数据的示例以及如何以易于人类和计算机解释的方式返回结果。'
- en: '[*Chapter 6*](B18883_06.xhtml#_idTextAnchor123), *Calling External Processes,
    Handling Errors and Timeouts*, This chapter will teach you how to call external
    processes and handle errors, including timeouts, that may occur when interacting
    with other commands or API services. The os/exec package is discussed, which allows
    for the creation and running of commands with various options, such as retrieving
    data from standard output and standard error pipes. Additionally, the net/http
    package is explored for calling external API service endpoints, and the chapter
    concludes with strategies for capturing and handling errors that may arise.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第6章*](B18883_06.xhtml#_idTextAnchor123), *调用外部进程，处理错误和超时*，本章将向您介绍如何调用外部进程并处理可能在与其他命令或API服务交互时发生的错误，包括超时。本章讨论了os/exec包，该包允许使用各种选项创建和运行命令，例如从标准输出和标准错误管道检索数据。此外，还探讨了net/http包，用于调用外部API服务端点，本章最后讨论了捕获和处理可能出现的错误的策略。'
- en: '[*Chapter 7*](B18883_07.xhtml#_idTextAnchor143), *Developing for Different
    Platforms*, One of the things that makes building a command line application powerful
    is the ability to easily create code that can run on different machines, regardless
    of their operating systems. The os, time, path, and runtime packages are great
    tools to help developers create platform-independent code. In this chapter, we
    explore the functions and methods in these packages with simple examples, and
    show how to specify code for operating systems using build tags. By the end, you’ll
    feel more confident in your ability to write code that works across multiple platforms.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第7章*](B18883_07.xhtml#_idTextAnchor143), *为不同平台开发*，构建命令行应用程序强大的一个因素是能够轻松创建可以在不同机器上运行的代码，无论它们的操作系统是什么。os、time、path和runtime包是帮助开发者创建平台无关代码的强大工具。在本章中，我们将通过简单的示例探讨这些包中的函数和方法，并展示如何使用构建标签指定操作系统代码。到本章结束时，您将对自己的代码能够在多个平台上运行的能力更有信心。'
- en: '[*Chapter 8*](B18883_08.xhtml#_idTextAnchor166), *Building for Humans Versus
    Machines*, Developing your command-line application with your end user in mind
    is an important aspect to consider for better usability. In this chapter, we’ll
    explore ways to build for humans and scripts, use ASCII art to increase information
    density, and the importance of consistency for better navigation across different
    commands and subcommands.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第8章*](B18883_08.xhtml#_idTextAnchor166), *为人类和机器构建*，考虑到最终用户来开发您的命令行应用程序是提高可用性的一个重要方面。在本章中，我们将探讨为人类和脚本构建的方法，使用ASCII艺术来增加信息密度，以及在不同命令和子命令之间保持一致性对于更好的导航的重要性。'
- en: '[*Chapter 9*](B18883_09.xhtml#_idTextAnchor190), *The Empathic Side of Development*,
    In this chapter, you will learn how to use empathy to develop a better command-line
    interface (CLI) by considering the output and errors written, providing empathetic
    documentation, and readily available help and support for users. By rewriting
    errors in a way that users can easily understand, providing detailed logging and
    help features like man pages, usage examples, and bug submission options, developers
    can create an empathetic CLI that meets the user’s perspective and provides them
    with reassurance.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第9章*](B18883_09.xhtml#_idTextAnchor190), *开发的同理心方面*，在本章中，您将学习如何通过考虑输出和错误、提供同理心文档以及为用户提供易于获取的帮助和支持，利用同理心来开发更好的命令行界面（CLI）。通过以用户易于理解的方式重写错误，提供详细的日志记录和帮助功能，如man页面、使用示例和错误提交选项，开发者可以创建一个符合用户视角并为他们提供保障的同理心CLI。'
- en: '[*Chapter 10*](B18883_10.xhtml#_idTextAnchor225), *Interactivity with prompts
    and Terminal Dashboards*, This chapter will show you how to improve usability
    by adding interactivity to your command-line application using either prompts
    or terminal dashboards. By providing examples and step-by-step instructions for
    creating surveys and dashboards, this chapter will help you build a more engaging
    and user-friendly interface. However, it is important to disable interactivity
    when not outputting to a terminal.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第10章*](B18883_10.xhtml#_idTextAnchor225), *使用提示和终端仪表板进行交互性*，本章将向您展示如何通过添加提示或终端仪表板来提高您的命令行应用程序的可用性。通过提供创建调查和仪表板的示例和逐步说明，本章将帮助您构建一个更具吸引力和用户友好的界面。然而，当不是输出到终端时，重要的是要禁用交互性。'
- en: '[*Chapter 11*](B18883_11.xhtml#_idTextAnchor258), *Custom Builds and Testing
    CLI Commands*, To enhance the stability and scalability of a growing Go project,
    it is essential to incorporate build tags with Boolean logic to enable targeted
    builds and testing. This chapter demonstrates the use of build tags and testing
    through a real-world example, the audiofile CLI, and covers topics such as integrating
    levels, enabling profiling, and testing HTTP clients.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第11章*](B18883_11.xhtml#_idTextAnchor258), *自定义构建和测试CLI命令*，为了提高不断增长的Go项目的稳定性和可扩展性，将布尔逻辑的构建标签纳入其中以实现有针对性的构建和测试是至关重要的。本章通过一个真实世界的例子，即audiofile
    CLI，展示了构建标签和测试的使用，并涵盖了诸如集成级别、启用性能分析以及测试HTTP客户端等主题。'
- en: '[*Chapter 12*](B18883_12.xhtml#_idTextAnchor291), *Cross Compilation Across
    Different Platforms*, This chapter explains cross-compilation in Go, including
    the different operating systems and architectures that Go can compile and how
    to determine which is needed. It covers topics such as manual compilation versus
    build automation tools, using GOOS and GOARCH, compiling for Linux, MacOS, and
    Windows, and scripting to compile for multiple platforms.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第12章*](B18883_12.xhtml#_idTextAnchor291), *跨平台交叉编译*，本章解释了Go中的交叉编译，包括Go可以编译的不同操作系统和架构以及如何确定所需的内容。它涵盖了诸如手动编译与构建自动化工具、使用GOOS和GOARCH、为Linux、MacOS和Windows编译以及为多个平台编写脚本等主题。'
- en: '[*Chapter 13*](B18883_13.xhtml#_idTextAnchor331), *Using Containers for Distribution*,
    In this chapter, we’ll dive into Docker containers and how they can benefit you
    when testing and sharing your CLI application. We’ll begin with the basics and
    gradually move onto more complex topics, such as using containers for integration
    testing. Additionally, we’ll weigh up the pros and cons of using Docker, helping
    you determine whether it’s the right choice for you. By the end of the chapter,
    you’ll be equipped to containerize your application, test it through Docker, and
    share it with others via Docker Hub.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第13章*](B18883_13.xhtml#_idTextAnchor331), *使用容器进行分发*，在本章中，我们将深入了解Docker容器以及它们在测试和共享您的CLI应用程序时如何为您带来好处。我们将从基础知识开始，逐渐过渡到更复杂的话题，例如使用容器进行集成测试。此外，我们还将权衡使用Docker的优缺点，帮助您确定它是否是您的正确选择。到本章结束时，您将具备将应用程序容器化、通过Docker进行测试以及通过Docker
    Hub与他人共享的能力。'
- en: '[*Chapter 14*](B18883_14.xhtml#_idTextAnchor359), *Publishing your Go binary
    as a Homebrew Formula with GoReleaser*, In this chapter, you’ll learn how to automate
    the release of a Go binary as a Homebrew formula using GoReleaser and GitHub Actions.
    GoReleaser simplifies the creation, testing, and distribution of Go binaries,
    and GitHub Actions is a CI/CD platform that automates software development workflows.
    By creating a Homebrew tap for your application, you can simplify the installation
    process for MacOS users and reach a larger audience.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第14章*](B18883_14.xhtml#_idTextAnchor359)，*使用GoReleaser将Go二进制文件作为Homebrew
    Formula发布*，在本章中，您将学习如何使用GoReleaser和GitHub Actions自动化Go二进制文件的发布。GoReleaser简化了Go二进制文件的创建、测试和分发，GitHub
    Actions是一个CI/CD平台，它自动化了软件开发工作流程。通过为您的应用程序创建Homebrew tap，您可以简化MacOS用户的安装过程，并扩大您的受众范围。'
- en: To get the most out of this book
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为了充分利用本书
- en: '*To get the most out of this book, you should have intermediate-level knowledge
    of Golang. The book assumes that you’re familiar with Go’s syntax, data types,
    control flow, and other basic concepts. It focuses on more advanced topics, such
    as creating and testing CLI applications, using external libraries, and building
    and distributing binaries. If you’re new to Go, you may find the material challenging,
    but if you have prior experience, you’ll be able to build on your existing knowledge
    and take your skills to the* *next level.*'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '*为了充分利用本书，您应该具备中级水平的Golang知识。本书假设您熟悉Go的语法、数据类型、控制流和其他基本概念。它侧重于更高级的主题，如创建和测试CLI应用程序、使用外部库以及构建和分发二进制文件。如果您是Go的新手，可能会觉得材料具有挑战性，但如果有先前的经验，您将能够建立现有的知识并提升您的技能到*下一个层次*。**'
- en: '| **Software/hardware covered in** **the book** | **Operating** **system requirements**
    |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| **本书涵盖的软件/硬件** | **操作系统要求** |'
- en: '| Go 1.19 | Windows, macOS, or Linux |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| Go 1.19 | Windows, macOS, 或 Linux |'
- en: '| Cobra CLI |  |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| Cobra CLI |  |'
- en: '| Docker |  |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| Docker |  |'
- en: '| Docker Compose |  |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| Docker Compose |  |'
- en: '| GoReleaser CLI |  |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| GoReleaser CLI |  |'
- en: '*Install Cobra* *CLI:* [https://github.com/spf13/cobra-cli](https://github.com/spf13/cobra-cli)'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '*安装 Cobra CLI:* [https://github.com/spf13/cobra-cli](https://github.com/spf13/cobra-cli)'
- en: '*Install Docker* *Desktop:* [https://www.docker.com/products/docker-desktop/](https://www.docker.com/products/docker-desktop/)'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '*安装 Docker Desktop:* [https://www.docker.com/products/docker-desktop/](https://www.docker.com/products/docker-desktop/)'
- en: '*Install the Docker Compose* *plugin:* [https://docs.docker.com/compose/install/](https://docs.docker.com/compose/install/)'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '*安装 Docker Compose 插件:* [https://docs.docker.com/compose/install/](https://docs.docker.com/compose/install/)'
- en: '*Install the GoReleaser tool* *at:* [https://goreleaser.com/install/](https://goreleaser.com/install/)'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '*在[https://goreleaser.com/install/](https://goreleaser.com/install/)安装GoReleaser工具*'
- en: '**If you are using the digital version of this book, we advise you to type
    the code yourself or access the code from the book’s GitHub repository (a link
    is available in the next section). Doing so will help you avoid any potential
    errors related to the copying and pasting** **of code.**'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果您使用的是本书的数字版，我们建议您亲自输入代码或从书的GitHub仓库（下一节中有一个链接）获取代码。这样做将帮助您避免与代码的复制和粘贴相关的任何潜在错误。**'
- en: Download the example code files
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: You can download the example code files for this book from GitHub at [https://github.com/PacktPublishing/Building-Modern-CLI-Applications-in-Go](https://github.com/PacktPublishing/Building-Modern-CLI-Applications-in-Go).
    If there’s an update to the code, it will be updated in the GitHub repository.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从GitHub下载本书的示例代码文件：[https://github.com/PacktPublishing/Building-Modern-CLI-Applications-in-Go](https://github.com/PacktPublishing/Building-Modern-CLI-Applications-in-Go)。如果代码有更新，它将在GitHub仓库中更新。
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还提供了来自我们丰富的图书和视频目录中的其他代码包，可在[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)找到。查看它们吧！
- en: Download the color images
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载彩色图像
- en: 'We also provide a PDF file that has color images of the screenshots and diagrams
    used in this book. You can download it here: [https://packt.link/F4Fus](https://packt.link/F4Fus).'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还提供了一份包含本书中使用的截图和图表的彩色图像的PDF文件。您可以从这里下载：[https://packt.link/F4Fus](https://packt.link/F4Fus)。
- en: Conventions used
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 本书使用了多种文本约定。
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: “Mount the downloaded `WebStorm-10*.dmg` disk image
    file as another disk in your system.”'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '`Code in text`：表示文本中的代码单词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter昵称。以下是一个示例：“将下载的`WebStorm-10*.dmg`磁盘映像文件作为系统中的另一个磁盘挂载。”'
- en: 'A block of code is set as follows:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望您注意代码块中的特定部分时，相关的行或项目将以粗体显示：
- en: '[PRE1]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都按照以下方式编写：
- en: '[PRE2]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For instance, words in menus or dialog boxes appear in **bold**. Here is an example:
    “Select **System info** from the **Administration** panel.”'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**粗体**：表示新术语、重要单词或屏幕上看到的单词。例如，菜单或对话框中的单词以粗体显示。以下是一个示例：“从**管理**面板中选择**系统信息**。”'
- en: Tips or important notes
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士或重要注意事项
- en: Appear like this.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来像这样。
- en: Get in touch
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联系我们
- en: Feedback from our readers is always welcome.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们始终欢迎读者的反馈。
- en: '`customercare@packtpub.com` and mention the book title in the subject of your
    message.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '`customercare@packtpub.com`并在邮件主题中提及书名。'
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)
    and fill in the form.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**勘误表**：尽管我们已经尽一切努力确保内容的准确性，但错误仍然可能发生。如果您在这本书中发现了错误，我们将非常感激您向我们报告。请访问[www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)并填写表格。'
- en: '`copyright@packt.com` with a link to the material.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '`copyright@packt.com`，并附上材料的链接。'
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com).'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果您想成为一名作者**：如果您在某个领域有专业知识，并且对撰写或为书籍做出贡献感兴趣，请访问[authors.packtpub.com](http://authors.packtpub.com)。'
- en: Share your thoughts
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分享您的想法
- en: Once you’ve read *Building Modern CLI Applications in Go*, we’d love to hear
    your thoughts! Scan the QR code below to go straight to the Amazon review page
    for this book and share your feedback.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您阅读了《Building Modern CLI Applications in Go》，我们非常乐意听到您的想法！扫描下面的二维码直接进入此书的亚马逊评论页面并分享您的反馈。
- en: '![](img/B18883_QR.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18883_QR.jpg)'
- en: '[https://packt.link/r/1804611654](https://packt.link/r/1804611654)'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/r/1804611654](https://packt.link/r/1804611654)'
- en: Your review is important to us and the tech community and will help us make
    sure we’re delivering excellent quality content.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 您的评论对我们和科技社区非常重要，并将帮助我们确保我们提供高质量的内容。
- en: Download a free PDF copy of this book
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载此书的免费PDF副本
- en: Thanks for purchasing this book!
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢您购买此书！
- en: Do you like to read on the go but are unable to carry your print books everywhere?
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 您喜欢在路上阅读，但又无法携带您的印刷书籍到处走吗？
- en: Is your eBook purchase not compatible with the device of your choice?
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 您的电子书购买是否与您选择的设备不兼容？
- en: Don’t worry, now with every Packt book you get a DRM-free PDF version of that
    book at no cost.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 别担心，现在每购买一本Packt书籍，您都可以免费获得该书的DRM免费PDF版本。
- en: Read anywhere, any place, on any device. Search, copy, and paste code from your
    favorite technical books directly into your application.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何地方、任何设备上阅读。直接从您最喜欢的技术书籍中搜索、复制和粘贴代码到您的应用程序中。
- en: The perks don’t stop there, you can get exclusive access to discounts, newsletters,
    and great free content in your inbox daily
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 优惠远不止于此，您还可以获得独家折扣、新闻通讯以及每天收件箱中的优质免费内容。
- en: 'Follow these simple steps to get the benefits:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下简单步骤获取优惠：
- en: Scan the QR code or visit the link below
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 扫描二维码或访问以下链接
- en: '![](img/B18883_QR_Free_PDF.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18883_QR_Free_PDF.jpg)'
- en: '[https://packt.link/free-ebook/9781804611654](https://packt.link/free-ebook/9781804611654)'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/free-ebook/9781804611654](https://packt.link/free-ebook/9781804611654)'
- en: Submit your proof of purchase
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提交您的购买证明
- en: That’s it! We’ll send your free PDF and other benefits to your email directly
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就这些！我们将直接将免费PDF和其他优惠发送到您的邮箱。
- en: 'Part 1: Getting Started with a Solid Foundation'
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1部分：从坚实基础开始
- en: This part covers the Command-Line Interface (CLI) and its resurgence in popularity.
    The history, anatomy, and design principles of the CLI are discussed, with a focus
    on UNIX’s philosophy and the benefits of using Go to build a CLI. The guide offers
    a step-by-step approach to building a new application, including code structure,
    domain-driven design, and an example audio metadata CLI application. Hands-on
    learning is encouraged with the example audio metadata CLI application, and popular
    frameworks, such as Cobra and Viper, are explored to speed up the development
    process. Overall, this part provides a comprehensive overview of the CLI and its
    practical applications in modern programming, offering valuable guidance to developers
    looking to build efficient and effective CLI applications.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分涵盖了命令行界面（CLI）及其在流行度上的复兴。讨论了 CLI 的历史、结构和设计原则，重点关注 UNIX 的哲学和利用 Go 构建 CLI 的好处。指南提供了一个逐步构建新应用程序的方法，包括代码结构、领域驱动设计以及一个示例音频元数据
    CLI 应用程序。通过示例音频元数据 CLI 应用程序鼓励动手学习，并探讨了如 Cobra 和 Viper 等流行框架以加快开发过程。总体而言，本部分提供了
    CLI 及其在现代编程中实际应用的全面概述，为寻求构建高效且有效的 CLI 应用程序的开发者提供了宝贵的指导。
- en: 'This part has the following chapters:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分包含以下章节：
- en: '[*Chapter 1*](B18883_01.xhtml#_idTextAnchor014), *Understanding CLI Standards*'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第一章*](B18883_01.xhtml#_idTextAnchor014), *理解 CLI 标准*'
- en: '[*Chapter 2*](B18883_02.xhtml#_idTextAnchor036), *Structuring Go Code for CLI
    Applications*'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第二章*](B18883_02.xhtml#_idTextAnchor036), *为命令行应用程序结构化 Go 代码*'
- en: '[*Chapter 3*](B18883_03.xhtml#_idTextAnchor061), *Building an Audio Metadata
    CLI*'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第三章*](B18883_03.xhtml#_idTextAnchor061), *构建音频元数据 CLI*'
- en: '[*Chapter 4*](B18883_04.xhtml#_idTextAnchor087), *Popular Frameworks for Building
    CLIs*'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第四章*](B18883_04.xhtml#_idTextAnchor087), *构建 CLIs 的流行框架*'
