- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*If you’re interested in taking your command-line interface (CLI) application
    development skills to the next level, Building Modern CLI Applications with Go
    is the book for you. This guide provides a comprehensive and hands-on approach
    to building CLI applications from scratch, using the popular Go programming language.
    Not only will you learn how to use frameworks such as Cobra and Termdash, but
    you’ll also discover how to integrate empathetic approaches that prioritize human-first
    design. This book covers the entire development process, from compiling and distributing
    your application across multiple operating systems, to releasing it with GoReleaser
    and expanding your user base through Homebrew formulas. With clear explanations,
    practical examples, and insightful tips, this book will transform you into a skilled
    and creative CLI developer, able to create powerful, intuitive, and user-friendly
    applications that will delight* *your users.*'
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*This book is aimed at intermediate Go developers who want to expand their
    skillset and develop powerful, user-friendly command-line* *interface applications.*'
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[*Chapter 1*](B18883_01.xhtml#_idTextAnchor014), *Understanding CLI Standards,*
    The Command-Line Interface (CLI) was initially created as a way to interact with
    Operating Systems before graphical user interfaces (GUIs) were invented. Although
    the GUI and web have become more common, there has been a resurgence of CLI development
    in recent years, particularly as an additional offering alongside a company’s
    API. In this chapter, you will learn about the history and anatomy of the CLI,
    the principles of UNIX, and why Go is a compelling language for building CLI applications.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 2*](B18883_02.xhtml#_idTextAnchor036), *Structuring Go Code for CLI
    Applications*, This chapter serves as a guide for those who are unsure of how
    to begin creating a new CLI application. It covers popular ways to structure code,
    the concept of domain-driven design, and provides an example of a real-world use
    case for an audio metadata CLI application. By the end of the chapter, readers
    will have the necessary skills to develop an application based on their specific
    use cases and requirements.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 3*](B18883_03.xhtml#_idTextAnchor061), *Building an Audio Metadata
    CLI*, This chapter provides hands-on learning by walking readers through building
    an audio metadata CLI’s use cases from start to finish. The code is available
    online and can be explored independently or alongside the chapter. Additionally,
    readers are encouraged to use their imagination to consider alternative ways to
    implement commands.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 4*](B18883_04.xhtml#_idTextAnchor087), *Popular Frameworks for Building
    CLIs*, In this chapter, the most popular frameworks for developing modern CLI
    applications will be explored, with a focus on Cobra and its ability to quickly
    generate the scaffolding needed for a CLI application. Viper, which easily integrates
    with Cobra and provides extensive configuration options for applications, will
    also be discussed.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 5*](B18883_05.xhtml#_idTextAnchor109), *Defining the Command-Line
    Process*, This chapter delves deeper into the anatomy of a command-line application,
    breaking down the different types of input such as subcommands, arguments, and
    flags, as well as other inputs such as stdin, signals, and control characters.
    It also provides examples of processing data for each input type and how to return
    the result in a way that is easily interpreted by both humans and computers.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 6*](B18883_06.xhtml#_idTextAnchor123), *Calling External Processes,
    Handling Errors and Timeouts*, This chapter will teach you how to call external
    processes and handle errors, including timeouts, that may occur when interacting
    with other commands or API services. The os/exec package is discussed, which allows
    for the creation and running of commands with various options, such as retrieving
    data from standard output and standard error pipes. Additionally, the net/http
    package is explored for calling external API service endpoints, and the chapter
    concludes with strategies for capturing and handling errors that may arise.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 7*](B18883_07.xhtml#_idTextAnchor143), *Developing for Different
    Platforms*, One of the things that makes building a command line application powerful
    is the ability to easily create code that can run on different machines, regardless
    of their operating systems. The os, time, path, and runtime packages are great
    tools to help developers create platform-independent code. In this chapter, we
    explore the functions and methods in these packages with simple examples, and
    show how to specify code for operating systems using build tags. By the end, you’ll
    feel more confident in your ability to write code that works across multiple platforms.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 8*](B18883_08.xhtml#_idTextAnchor166), *Building for Humans Versus
    Machines*, Developing your command-line application with your end user in mind
    is an important aspect to consider for better usability. In this chapter, we’ll
    explore ways to build for humans and scripts, use ASCII art to increase information
    density, and the importance of consistency for better navigation across different
    commands and subcommands.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 9*](B18883_09.xhtml#_idTextAnchor190), *The Empathic Side of Development*,
    In this chapter, you will learn how to use empathy to develop a better command-line
    interface (CLI) by considering the output and errors written, providing empathetic
    documentation, and readily available help and support for users. By rewriting
    errors in a way that users can easily understand, providing detailed logging and
    help features like man pages, usage examples, and bug submission options, developers
    can create an empathetic CLI that meets the user’s perspective and provides them
    with reassurance.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 10*](B18883_10.xhtml#_idTextAnchor225), *Interactivity with prompts
    and Terminal Dashboards*, This chapter will show you how to improve usability
    by adding interactivity to your command-line application using either prompts
    or terminal dashboards. By providing examples and step-by-step instructions for
    creating surveys and dashboards, this chapter will help you build a more engaging
    and user-friendly interface. However, it is important to disable interactivity
    when not outputting to a terminal.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 11*](B18883_11.xhtml#_idTextAnchor258), *Custom Builds and Testing
    CLI Commands*, To enhance the stability and scalability of a growing Go project,
    it is essential to incorporate build tags with Boolean logic to enable targeted
    builds and testing. This chapter demonstrates the use of build tags and testing
    through a real-world example, the audiofile CLI, and covers topics such as integrating
    levels, enabling profiling, and testing HTTP clients.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 12*](B18883_12.xhtml#_idTextAnchor291), *Cross Compilation Across
    Different Platforms*, This chapter explains cross-compilation in Go, including
    the different operating systems and architectures that Go can compile and how
    to determine which is needed. It covers topics such as manual compilation versus
    build automation tools, using GOOS and GOARCH, compiling for Linux, MacOS, and
    Windows, and scripting to compile for multiple platforms.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 13*](B18883_13.xhtml#_idTextAnchor331), *Using Containers for Distribution*,
    In this chapter, we’ll dive into Docker containers and how they can benefit you
    when testing and sharing your CLI application. We’ll begin with the basics and
    gradually move onto more complex topics, such as using containers for integration
    testing. Additionally, we’ll weigh up the pros and cons of using Docker, helping
    you determine whether it’s the right choice for you. By the end of the chapter,
    you’ll be equipped to containerize your application, test it through Docker, and
    share it with others via Docker Hub.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 14*](B18883_14.xhtml#_idTextAnchor359), *Publishing your Go binary
    as a Homebrew Formula with GoReleaser*, In this chapter, you’ll learn how to automate
    the release of a Go binary as a Homebrew formula using GoReleaser and GitHub Actions.
    GoReleaser simplifies the creation, testing, and distribution of Go binaries,
    and GitHub Actions is a CI/CD platform that automates software development workflows.
    By creating a Homebrew tap for your application, you can simplify the installation
    process for MacOS users and reach a larger audience.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*To get the most out of this book, you should have intermediate-level knowledge
    of Golang. The book assumes that you’re familiar with Go’s syntax, data types,
    control flow, and other basic concepts. It focuses on more advanced topics, such
    as creating and testing CLI applications, using external libraries, and building
    and distributing binaries. If you’re new to Go, you may find the material challenging,
    but if you have prior experience, you’ll be able to build on your existing knowledge
    and take your skills to the* *next level.*'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Software/hardware covered in** **the book** | **Operating** **system requirements**
    |'
  prefs: []
  type: TYPE_TB
- en: '| Go 1.19 | Windows, macOS, or Linux |'
  prefs: []
  type: TYPE_TB
- en: '| Cobra CLI |  |'
  prefs: []
  type: TYPE_TB
- en: '| Docker |  |'
  prefs: []
  type: TYPE_TB
- en: '| Docker Compose |  |'
  prefs: []
  type: TYPE_TB
- en: '| GoReleaser CLI |  |'
  prefs: []
  type: TYPE_TB
- en: '*Install Cobra* *CLI:* [https://github.com/spf13/cobra-cli](https://github.com/spf13/cobra-cli)'
  prefs: []
  type: TYPE_NORMAL
- en: '*Install Docker* *Desktop:* [https://www.docker.com/products/docker-desktop/](https://www.docker.com/products/docker-desktop/)'
  prefs: []
  type: TYPE_NORMAL
- en: '*Install the Docker Compose* *plugin:* [https://docs.docker.com/compose/install/](https://docs.docker.com/compose/install/)'
  prefs: []
  type: TYPE_NORMAL
- en: '*Install the GoReleaser tool* *at:* [https://goreleaser.com/install/](https://goreleaser.com/install/)'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are using the digital version of this book, we advise you to type
    the code yourself or access the code from the book’s GitHub repository (a link
    is available in the next section). Doing so will help you avoid any potential
    errors related to the copying and pasting** **of code.**'
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from GitHub at [https://github.com/PacktPublishing/Building-Modern-CLI-Applications-in-Go](https://github.com/PacktPublishing/Building-Modern-CLI-Applications-in-Go).
    If there’s an update to the code, it will be updated in the GitHub repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Download the color images
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We also provide a PDF file that has color images of the screenshots and diagrams
    used in this book. You can download it here: [https://packt.link/F4Fus](https://packt.link/F4Fus).'
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: “Mount the downloaded `WebStorm-10*.dmg` disk image
    file as another disk in your system.”'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For instance, words in menus or dialog boxes appear in **bold**. Here is an example:
    “Select **System info** from the **Administration** panel.”'
  prefs: []
  type: TYPE_NORMAL
- en: Tips or important notes
  prefs: []
  type: TYPE_NORMAL
- en: Appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '`customercare@packtpub.com` and mention the book title in the subject of your
    message.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)
    and fill in the form.'
  prefs: []
  type: TYPE_NORMAL
- en: '`copyright@packt.com` with a link to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com).'
  prefs: []
  type: TYPE_NORMAL
- en: Share your thoughts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once you’ve read *Building Modern CLI Applications in Go*, we’d love to hear
    your thoughts! Scan the QR code below to go straight to the Amazon review page
    for this book and share your feedback.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B18883_QR.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '[https://packt.link/r/1804611654](https://packt.link/r/1804611654)'
  prefs: []
  type: TYPE_NORMAL
- en: Your review is important to us and the tech community and will help us make
    sure we’re delivering excellent quality content.
  prefs: []
  type: TYPE_NORMAL
- en: Download a free PDF copy of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Thanks for purchasing this book!
  prefs: []
  type: TYPE_NORMAL
- en: Do you like to read on the go but are unable to carry your print books everywhere?
  prefs: []
  type: TYPE_NORMAL
- en: Is your eBook purchase not compatible with the device of your choice?
  prefs: []
  type: TYPE_NORMAL
- en: Don’t worry, now with every Packt book you get a DRM-free PDF version of that
    book at no cost.
  prefs: []
  type: TYPE_NORMAL
- en: Read anywhere, any place, on any device. Search, copy, and paste code from your
    favorite technical books directly into your application.
  prefs: []
  type: TYPE_NORMAL
- en: The perks don’t stop there, you can get exclusive access to discounts, newsletters,
    and great free content in your inbox daily
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow these simple steps to get the benefits:'
  prefs: []
  type: TYPE_NORMAL
- en: Scan the QR code or visit the link below
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18883_QR_Free_PDF.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '[https://packt.link/free-ebook/9781804611654](https://packt.link/free-ebook/9781804611654)'
  prefs: []
  type: TYPE_NORMAL
- en: Submit your proof of purchase
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: That’s it! We’ll send your free PDF and other benefits to your email directly
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Part 1: Getting Started with a Solid Foundation'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This part covers the Command-Line Interface (CLI) and its resurgence in popularity.
    The history, anatomy, and design principles of the CLI are discussed, with a focus
    on UNIX’s philosophy and the benefits of using Go to build a CLI. The guide offers
    a step-by-step approach to building a new application, including code structure,
    domain-driven design, and an example audio metadata CLI application. Hands-on
    learning is encouraged with the example audio metadata CLI application, and popular
    frameworks, such as Cobra and Viper, are explored to speed up the development
    process. Overall, this part provides a comprehensive overview of the CLI and its
    practical applications in modern programming, offering valuable guidance to developers
    looking to build efficient and effective CLI applications.
  prefs: []
  type: TYPE_NORMAL
- en: 'This part has the following chapters:'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 1*](B18883_01.xhtml#_idTextAnchor014), *Understanding CLI Standards*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 2*](B18883_02.xhtml#_idTextAnchor036), *Structuring Go Code for CLI
    Applications*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 3*](B18883_03.xhtml#_idTextAnchor061), *Building an Audio Metadata
    CLI*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 4*](B18883_04.xhtml#_idTextAnchor087), *Popular Frameworks for Building
    CLIs*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
