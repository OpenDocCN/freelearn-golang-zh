["```go\ngo tool dist list\n```", "```go\n{\n\"GOOS\": \"linux\",\n\"GOARCH\": \"arm64\",\n\"CgoSupported\": true,\n\"FirstClass\": true\n},\n```", "```go\ngo env GOOS GOARCH\n```", "```go\ndarwin\namd64\n```", "```go\nGOOS=darwin GOARCH=amd64 go build\n```", "```go\nmmontagnino@Marians-MacBook-Pro audiofile % go build -help\nusage: go build [-o output] [build flags] [packages]\nRun 'go help build' for details\n```", "```go\nbuild-darwin-free:\n    go build -tags \"darwin free\" -o bin/audiofile main.go\n    chmod +x bin/audiofile\nbuild-darwin-pro:\n    go build -tags \"darwin pro\" -o bin/audiofile main.go\n    chmod +x bin/audiofile\nbuild-darwin-pro-profile:\n    go build -tags \"darwin pro profile\" -o bin/audiofile main.go\n    chmod +x bin/audiofile\n```", "```go\nbuild-darwin-free:\n    go build -tags \"darwin free\" -o builds/free/darwin/audiofile main.go\n    chmod +x builds/free/darwin/audiofile\nbuild-darwin-pro:\n    go build -tags \"darwin pro\" -o builds/pro/darwin/audiofile main.go\n    chmod +x builds/pro/darwin/audiofile\nbuild-darwin-pro-profile:\n    go build -tags \"darwin pro profile\" -o builds/profile/darwin/audiofile main.go\n    chmod +x builds/profile/darwin/audiofile\n```", "```go\nbuild-linux-free:\n    go build -tags \"linux free\" -o builds/free/linux/audiofile main.go\n    chmod +x builds/free/linux/audiofile\nbuild-linux-pro:\n   go build -tags \"linux pro\" -o builds/pro/linux/audiofile main.go\n   chmod +x builds/pro/linux/audiofile\nbuild-linux-pro-profile:\n   go build -tags \"linux pro profile\" -o builds/profile/linux/audiofile main.go\n   chmod +x builds/profile/linux/audiofile\nbuild-windows-free:\n    go build -tags \"windows free\" -o builds/free/windows/ audiofile.exe main.go\nbuild-windows-pro:\n    go build -tags \"windows pro\" -o builds/pro/windows/audiofile.exe main.go\nbuild-windows-pro-profile:\n    go build -tags \"windows pro profile\" -o builds/profile/windows/audiofile.exe main.go\n```", "```go\nbuild-all: build-darwin-free build-darwin-pro build-darwin-pro-profile build-linux-free build-linux-pro build-linux-pro-profile build-windows-free build-windows-pro build-windows-pro-profile\n```", "```go\nmake build-all\n```", "```go\nmmontagnino@Marians-MacBook-Pro audiofile % make build-all\ngo build -tags \"darwin free\" -o builds/free/darwin/audiofile main.go\nchmod +x builds/free/darwin/audiofile\ngo build -tags \"darwin pro\" -o builds/pro/darwin/audiofile main.go\nchmod +x builds/pro/darwin/audiofile\ngo build -tags \"darwin pro profile\" -o builds/profile/darwin/audiofile main.go\nchmod +x builds/profile/darwin/audiofile\ngo build -tags \"linux free\" -o builds/free/linux/audiofile main.go\n# internal/goos\n/usr/local/go/src/internal/goos/zgoos_linux.go:7:7: GOOS redeclared in this block\n        /usr/local/go/src/internal/goos/zgoos_darwin.go:7:7: other declaration of GOOS\n/usr/local/go/src/internal/goos/zgoos_linux.go:9:7: IsAix redeclared in this block\n        /usr/local/go/src/internal/goos/zgoos_darwin.go:9:7: other declaration of IsAix\n/usr/local/go/src/internal/goos/zgoos_linux.go:10:7: IsAndroid redeclared in this block\n...\n/usr/local/go/src/internal/goos/zgoos_linux.go:17:7: too many errors\nmake: *** [build-linux-free] Error 2\n```", "```go\ngo build -tags \"linux free\" -o builds/free/linux/audiofile main.go\n```", "```go\nGOOS=\"darwin\"\n```", "```go\nbuild-linux-free:\n    GOOS=linux go build -tags \"linux free\" -o builds/free/linux/audiofile main.go\n    chmod +x builds/free/linux/audiofile\nbuild-linux-pro:\n    GOOS=linux go build -tags \"linux pro\" -o builds/pro/linux/audiofile main.go\n    chmod +x builds/pro/linux/audiofile\nbuild-linux-pro-profile:\n    GOOS=linux go build -tags \"linux pro profile\" -o builds/profile/linux/audiofile main.go\n    chmod +x builds/profile/linux/audiofile\n```", "```go\nbuild-windows-free:\n    GOOS=windows go build -tags \"windows free\" -o builds/free/windows/audiofile.exe main.go\nbuild-windows-pro:\n    GOOS=windows go build -tags \"windows pro\" -o builds/pro/windows/audiofile.exe main.go\nbuild-windows-pro-profile:\n    GOOS=windows go build -tags \"windows pro profile\" -o builds/profile/windows/audiofile.exe main.go\n```", "```go\nmmontagnino@Marians-MacBook-Pro audiofile % find ./builds -type f\n./builds/pro/linux/audiofile\n./builds/pro/darwin/audiofile\n./builds/pro/windows/audiofile.exe\n./builds/free/linux/audiofile\n./builds/free/darwin/audiofile\n./builds/free/windows/audiofile.exe\n./builds/profile/linux/audiofile\n./builds/profile/darwin/audiofile\n./builds/profile/windows/audiofile.exe\n```", "```go\nbuild-darwin-amd64-free:\n    GOOS=darwin GOARCH=amd64 go build -tags \"darwin free\" -o builds/free/darwin/audiofile main.go\n    chmod +x builds/free/darwin/audiofile\n```", "```go\nmmontagnino@Marians-MacBook-Pro audiofile % go install -help\nusage: go install [build flags] [packages]\nRun 'go help install' for details\n```", "```go\ngo install -tags \"darwin pro\" github.com/marianina8/audiofile\n```", "```go\nmmontagnino@Marians-MacBook-Pro audiofile % go env | grep GOPATH\nGOPATH=\"/Users/mmontagnino/Code\"\n```", "```go\ninstall-darwin-free:\n    go install -tags \"darwin free\" github.com/marianina8/audiofile\ninstall-darwin-pro:\n    go install -tags \"darwin pro\" github.com/marianina8/audiofile\ninstall-darwin-pro-profile:\n    go install -tags \"darwin pro profile\" github.com/marianina8/audiofile\n```", "```go\ninstall-linux-free:\n    GOOS=linux go install -tags \"linux free\" github.com/marianina8/audiofile\ninstall-linux-pro:\n    GOOS=linux go install -tags \"linux pro\" github.com/marianina8/audiofile\ninstall-linux-pro-profile:\n    GOOS=linux go install -tags \"linux pro profile\" github.com/marianina8/audiofile\n```", "```go\ninstall-windows-free:\n    GOOS=windows go install -tags \"windows free\" github.com/marianina8/audiofile\ninstall-windows-pro:\n    GOOS=windows go install -tags \"windows pro\" github.com/marianina8/audiofile\ninstall-windows-pro-profile:\n    GOOS=windows go install -tags \"windows pro profile\" github.com/marianina8/audiofile\n```", "```go\ninstall-linux-amd64-free:\n    GOOS=linux GOARCH=amd64 go install -tags \"linux free\" github.com/marianina8/audiofile\n```", "```go\ntouch build.sh\n```", "```go\nvi build.sh\n```", "```go\n#!/bin/bash\n```", "```go\ngo tool dist list | grep darwin\n```", "```go\ndarwin/amd64\ndarwin/arm64\n```", "```go\n# Generate darwin builds\ndarwin_archs=(amd64 arm64)\nfor darwin_arch in ${darwin_archs[@]}\ndo\n    echo \"building for darwin/${darwin_arch} free version...\"\n    env GOOS=darwin GOARCH=${darwin_arch} go build -tags free -o builds/free/darwin/${darwin_arch}/audiofile main.go\n    echo \"building for darwin/${darwin_arch} pro version...\"\n    env GOOS=darwin GOARCH=${darwin_arch} go build -tags pro -o builds/pro/darwin/${darwin_arch}/audiofile main.go\n    echo \"building for darwin/${darwin_arch} profile version...\"\n    env GOOS=darwin GOARCH=${darwin_arch} go build -tags profile -o builds/profile/darwin/${darwin_arch}/audiofile main.go\ndone\n```", "```go\ngo tool dist list | grep linux\n```", "```go\nlinux/386        linux/mips64le\nlinux/amd64    linux/mipsle\nlinux/arm        linux/ppc64\nlinux/arm64    linux/ppc64le\nlinux/loong64    linux/riscv64\nlinux/mips        linux/s390x\nlinux/mips64\n```", "```go\n# Generate linux builds\nlinux_archs=(386 amd64 arm arm64 loong64 mips mips64 mips64le mipsle ppc64 ppc64le riscv64 s390x)\nfor linux_arch in ${linux_archs[@]}\ndo\n    echo \"building for linux/${linux_arch} free version...\"\n    env GOOS=linux GOARCH=${linux_arch} go build -tags free -o builds/free/linux/${linux_arch}/audiofile main.go\n    echo \"building for linux/${linux_arch} pro version...\"\n    env GOOS=linux GOARCH=${linux_arch} go build -tags pro -o builds/pro/linux/${linux_arch}/audiofile main.go\n    echo \"building for linux/${linux_arch} profile version...\"\n    env GOOS=linux GOARCH=${linux_arch} go build -tags profile -o builds/profile/linux/${linux_arch}/audiofile main.go\ndone\n```", "```go\ngo tool dist list | grep windows\n```", "```go\nwindows/386\nwindows/amd64\nwindows/arm\nwindows/arm64\n```", "```go\n# Generate windows builds\nwindows_archs=(386 amd64 arm arm64)\nfor windows_arch in ${windows_archs[@]}\ndo\n    echo \"building for windows/${windows_arch} free version...\"\n    env GOOS=windows GOARCH=${windows_arch} go build -tags free -o builds/free/windows/${windows_arch}/audiofile.exe main.go\n    echo \"building for windows/${windows_arch} pro version...\"\n    env GOOS=windows GOARCH=${windows_arch} go build -tags pro -o builds/pro/windows/${windows_arch}/audiofile.exe main.go\n    echo \"building for windows/${windows_arch} profile version...\"\n    env GOOS=windows GOARCH=${windows_arch} go build -tags profile -o builds/profile/windows/${windows_arch}/audiofile.exe main.go\ndone\n```", "```go\n./build.sh\n```", "```go\n/builds/{level}/{operating-system}/{architecture}/{audiofile-executable}\n```", "```go\nnotepad build.ps1\n```", "```go\nWrite-Output \"building for windows/amd64...\"\n```", "```go\nPS C:\\Users\\mmontagnino\\Code\\src\\github.com\\marianina8\\audiofile> go tool dist list | Select-String darwin\n```", "```go\ndarwin/amd64\ndarwin/arm64\n```", "```go\nPS C:\\Users\\mmontagnino\\Code\\src\\github.com\\marianina8\\audiofile> go tool dist list | Select-String linux\n```", "```go\nPS C:\\Users\\mmontagnino\\Code\\src\\github.com\\marianina8\\audiofile> go tool dist list | Select-String windows\n```", "```go\n# Generate darwin builds\n$darwin_archs=\"amd64\",\"arm64\"\nforeach ($darwin_arch in $darwin_archs)\n{\n    Write-Output \"building for darwin/$($darwin_arch) free version...\"\n    $env:GOOS=\"darwin\";$env:GOARCH=$darwin_arch; go build -tags free -o .\\builds\\free\\darwin\\$darwin_arch\\audiofile main.go\n    Write-Output \"building for darwin/$($darwin_arch) pro version...\"\n    $env:GOOS=\"darwin\";$env:GOARCH=$darwin_arch; go build -tags pro -o .\\builds\\pro\\darwin\\$darwin_arch\\audiofile main.go\n    Write-Output \"building for darwin/$($darwin_arch) profile version...\"\n    $env:GOOS=\"darwin\";$env:GOARCH=$darwin_arch; go build -tags profile -o .\\builds\\profile\\darwin\\$darwin_arch\\audiofile main.go\n}\n```", "```go\n# Generate linux builds\n$linux_archs=\"386\",\"amd64\",\"arm\",\"arm64\",\"loong64\",\"mips\",\"mips64\",\"mips64le\",\"mipsle\",\"ppc64\",\"ppc64le\",\"riscv64\",\"s390x\"\nforeach ($linux_arch in $linux_archs)\n{\n    Write-Output \"building for linux/$($linux_arch) free version...\"\n    $env:GOOS=\"linux\";$env:GOARCH=$linux_arch; go build -tags free -o .\\builds\\free\\linux\\$linux_arch\\audiofile main.go\n    Write-Output \"building for linux/$($linux_arch) pro version...\"\n    $env:GOOS=\"linux\";$env:GOARCH=$linux_arch; go build -tags pro -o .\\builds\\pro\\linux\\$linux_arch\\audiofile main.go\n    Write-Output \"building for linux/$($linux_arch) profile version...\"\n    $env:GOOS=\"linux\";$env:GOARCH=$linux_arch; go build -tags profile -o .\\builds\\profile\\linux\\$linux_arch\\audiofile main.go\n}\n```", "```go\n# Generate windows builds\n$windows_archs=\"386\",\"amd64\",\"arm\",\"arm64\"\nforeach ($windows_arch in $windows_archs)\n{\n    Write-Output \"building for windows/$($windows_arch) free version...\"\n    $env:GOOS=\"windows\";$env:GOARCH=$windows_arch; go build -tags free -o .\\builds\\free\\windows\\$windows_arch\\audiofile.exe main.go\n    Write-Output \"building for windows/$($windows_arch) pro version...\"\n    $env:GOOS=\"windows\";$env:GOARCH=$windows_arch; go build -tags pro -o .\\builds\\pro\\windows\\$windows_arch\\audiofile.exe main.go\n    Write-Output \"building for windows/$($windows_arch) profile version...\"\n    $env:GOOS=\"windows\";$env:GOARCH=$windows_arch; go build -tags profile -o .\\builds\\profile\\windows\\$windows_arch\\audiofile.exe main.go\n}\n```", "```go\n./build.ps1\n```", "```go\nbuilding for $GOOS/$GOARCH [free/pro/profile] version...\n```", "```go\n/builds/{level}/{operating-system}/{architecture}/{audiofile-executable}\n```"]