["```go\npackage main\n/*\n#include <stdio.h>\n#include <stdlib.h>\nvoid print_hello(const char *name) {\n    printf(\"Hello %s!\\n\", name);\n}\n*/\nimport \"C\"\nimport \"unsafe\"\nfunc main() {\n    cName := C.CString(\"World\")\n    C.print_hello(cName)\n    C.free(unsafe.Pointer(cName))\n}\n```", "```go\n$ go run cgo.go\nHello World!\n$\n```", "```go\nFlatButton(color:Colors.cyan, child: Text(\"Tap Me\"))\n```", "```go\nwidget.Button{Text: \"Tap Me\", Importance: widget.                \t    HighImportance}\n```", "```go\nfunc TestButton_Tapped(t *testing.T) {\n    tapped := false\n    button := widget.NewButton(\"Hi\", func() {\n        tapped = true\n    })\n    test.Tap(button)\n    if !tapped {\n        t.Errorf(\"Button was not tapped\")\n    }\n}\nfunc TestEntry_Typed(t *testing.T) {\n    entry := widget.NewEntry()\n    test.Type(entry, \"Hi\")\n    if entry.Text != \"Hi\" {\n        t.Errorf(\"Text was not updated\")\n    }\n}\n```", "```go\nfunc TestButton_Render(t *testing.T) { \n    button := widget.NewButton(\"Hi\", func() {}) \n    window := test.NewWindow(button)\n    test.AssertImageMatches(t, \"button.png\", window.Canvas().    \t        Capture()) \n}\n```"]