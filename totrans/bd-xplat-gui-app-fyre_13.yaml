- en: '*Chapter 10*: Distribution – App Stores and Beyond'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第10章*：分发 – 应用商店及其他'
- en: The final challenge in cross-platform development is how to deliver your app
    to distribute your completed project. Whether you want to distribute using platform-specific
    app stores, package managers, or through a simple download site, there is a little
    more work to do. This chapter explores the steps required to deliver applications
    to system app stores, mobile marketplaces, and download sites.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 跨平台开发的最终挑战是如何将您的应用程序分发到系统应用商店、移动市场和下载站点。无论您是想通过平台特定的应用商店、包管理器还是通过简单的下载站点进行分发，都需要做更多的工作。本章探讨了将应用程序分发给系统应用商店、移动市场和下载站点的步骤。
- en: 'This chapter will cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Building your application for release
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为发布构建应用程序
- en: Distributing apps to desktop app stores
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将应用程序分发到桌面应用商店
- en: Uploading apps to Google Play and iOS App Store
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将应用程序上传到Google Play和iOS应用商店
- en: By the end of this chapter, you should have the knowledge to distribute your
    apps to any platform.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，您应该具备将您的应用程序分发到任何平台的知识。
- en: Technical requirements
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: This chapter has the same requirements as [*Chapter 3*](B16820_03_Final_JM_ePub.xhtml#_idTextAnchor066),
    *Window, Canvas, and Drawing*, that is, to have the **Fyne** toolkit installed
    and a **Go** and **C** compiler working. For more information, please refer to
    that chapter.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本章与[*第3章*](B16820_03_Final_JM_ePub.xhtml#_idTextAnchor066)的要求相同，*窗口、画布和绘图*，即需要安装**Fyne**工具包，并且**Go**和**C**编译器正在运行。更多信息，请参阅该章节。
- en: For deployment to **Android** devices, you will need to install the **Android
    SDK** and **NDK** (see [*Appendix B*](B16820_12_Final_JM_ePub.xhtml#_idTextAnchor256),
    *Installation of Mobile Build Tools*). To build for **iOS** devices, you will
    also need to install **Xcode** on your **Macintosh** computer (an Apple Mac is
    required for licensing reasons).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 对于部署到**Android**设备，您需要安装**Android SDK**和**NDK**（见[*附录B*](B16820_12_Final_JM_ePub.xhtml#_idTextAnchor256)，*移动构建工具的安装*）。要为**iOS**设备构建，您还需要在您的**Macintosh**计算机上安装**Xcode**（由于许可原因，需要苹果Mac）。
- en: The full source code for this chapter can be found at [https://github.com/PacktPublishing/Building-Cross-Platform-GUI-Applications-with-Fyne/tree/master/Chapter10](https://github.com/PacktPublishing/Building-Cross-Platform-GUI-Applications-with-Fyne/tree/master/Chapter10).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的完整源代码可以在[https://github.com/PacktPublishing/Building-Cross-Platform-GUI-Applications-with-Fyne/tree/master/Chapter10](https://github.com/PacktPublishing/Building-Cross-Platform-GUI-Applications-with-Fyne/tree/master/Chapter10)找到。
- en: Building your application for release
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为发布构建应用程序
- en: As we saw in [*Chapter 9*](B16820_09_Final_JM_ePub.xhtml#_idTextAnchor219),
    *Bundling Resources and Preparing for Release*, the `fyne package` command bundles
    our application binary and metadata into a format that can be installed on `fyne
    release`.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在[*第9章*](B16820_09_Final_JM_ePub.xhtml#_idTextAnchor219)中看到的，*捆绑资源和准备发布*，`fyne
    package`命令将我们的应用程序二进制文件和元数据打包成可以在`fyne release`上安装的格式。
- en: In this section, we will learn how to use the `release` command to prepare an
    application for sharing.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习如何使用`release`命令为共享准备应用程序。
- en: Running the release command
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 运行发布命令
- en: 'Just like the `fyne` `package` command that we saw in [*Chapter 9*](B16820_09_Final_JM_ePub.xhtml#_idTextAnchor219),
    *Bundling Resources and Preparing for Release*, this new `release` command is
    responsible for packaging up our application with its metadata. The `release`
    command, however, applies changes to the application in preparation for distribution.
    The specific changes will differ depending on the OS, but usually include the
    following:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 就像我们在[*第9章*](B16820_09_Final_JM_ePub.xhtml#_idTextAnchor219)中看到的`fyne` `package`命令一样，*捆绑资源和准备发布*，这个新的`release`命令负责将我们的应用程序及其元数据打包。然而，`release`命令会对应用程序进行更改，以准备分发。具体更改将根据操作系统而有所不同，但通常包括以下内容：
- en: Turning off any debug output
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关闭任何调试输出
- en: Instructing applications to use *production* identities for web services
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 指示应用程序使用*生产*身份验证的Web服务
- en: Packaging applications into distribution-specific archives
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将应用程序打包成特定于分发的存档
- en: Applying the certification required for app stores
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 申请应用商店所需的认证
- en: As we work through this chapter, we will look at options that are specific to
    each platform, but in this section, we can explore how to adapt applications for
    release builds for any OS.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们学习本章的过程中，我们将查看每个平台特有的选项，但在本节中，我们可以探索如何为任何操作系统适配应用程序的发布构建。
- en: Let's imagine that we have a function in our app called `connectToServer()`
    that will initiate a web connection to one of our company's services. Throughout
    the development process, it has been connecting to a development server, but for
    our distributed app we want to use the **production** (sometimes called *live*)
    server.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们假设在我们的应用程序中有一个名为`connectToServer()`的函数，它将启动与公司服务之一的网络连接。在整个开发过程中，它一直连接到开发服务器，但对我们分发的应用程序，我们希望使用**生产**（有时称为*实时*）服务器。
- en: 'The following steps demonstrate how we can use this type of build to adapt
    the code appropriately for release:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤演示了如何使用此类构建来适当地调整代码以适应发布：
- en: 'To build this demo, we create a new `main.go` file that defines two different
    possible server authentication keys, `serverKeyDevelopment` and `serverKeyProduction`:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了构建这个演示，我们创建一个新的`main.go`文件，定义了两种不同的服务器认证密钥，`serverKeyDevelopment`和`serverKeyProduction`：
- en: '[PRE0]'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Next, we add a simple function that opens a dialog window showing the authentication
    key that will be used:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们添加一个简单的函数，该函数打开一个对话框窗口，显示将要使用的认证密钥：
- en: '[PRE1]'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: As you can see, this function takes the current `fyne.App` as one parameter,
    so that we can query the build type using the `BuildType()` function. The second
    is the current `fyne.Window` parameter, which we use so that we can show the dialog
    for this example. Such a function would normally return a server connection, but
    this is just a simple demo.
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如您所见，此函数接受当前的`fyne.App`作为参数之一，这样我们就可以使用`BuildType()`函数查询构建类型。第二个是当前的`fyne.Window`参数，我们使用它来显示此示例的对话框。此类函数通常会返回服务器连接，但这只是一个简单的演示。
- en: 'Just like previous examples, we also need to create a basic `main` function
    that will run the example. In this case, we open a new window that says simply
    `connectToServer` method that will demonstrate the build type:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就像之前的示例一样，我们还需要创建一个基本的`main`函数来运行示例。在这种情况下，我们打开一个新窗口，显示简单的`connectToServer`方法，将演示构建类型：
- en: '[PRE2]'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Now we simply run the application:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们简单地运行应用程序：
- en: '[PRE3]'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'You should see that it creates a window, shown in the following screenshot:'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您应该看到它创建了一个窗口，如下面的截图所示：
- en: '![Figure 10.1 – Running in development mode'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图10.1 – 开发模式下的运行'
- en: '](img/Figure_10.1_B16820.jpg)'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图10.1 – 开发模式下的运行'
- en: Figure 10.1 – Running in development mode
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.1 – 开发模式下的运行
- en: 'Next, let''s build the application for release. As we are packaging the app
    metadata at this point, we will need an icon file. An example, `Icon.png`, is
    included in the book repository, but you can add any you like, placing it alongside
    `main.go`. We can then prepare the release version using the `fyne` tool:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，让我们构建用于发布的应用程序。由于我们现在正在打包应用程序元数据，我们需要一个图标文件。书中包含了示例文件`Icon.png`，但您也可以添加任何喜欢的图标，将其放置在`main.go`旁边。然后我们可以使用`fyne`工具准备发布版本：
- en: '[PRE4]'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Running the packaged application by double-clicking the application, you should
    see this different output:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过双击应用程序运行打包的应用程序，您应该看到不同的输出：
- en: '![Figure 10.2 – Running in release mode'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.2 – 发布模式下的运行'
- en: '](img/Figure_10.2_B16820.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.2 – 发布模式下的运行'
- en: Figure 10.2 – Running in release mode
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.2 – 发布模式下的运行
- en: The preceding example is a simple introduction to the `release` command and
    how it can adjust application behavior. As we use it throughout this chapter,
    you will see additional parameters required by various systems for certification
    and other features. We could have added information here about the version and
    build number (using `-appVersion` and `-appBuild`), but for most desktop releases
    this is optional. We will start adding it to the commands later in this chapter.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 上述示例是关于`release`命令及其如何调整应用程序行为的简单介绍。随着我们在本章中使用它，您将看到各种系统为认证和其他功能所需的附加参数。我们本可以在此处添加有关版本和构建号（使用`-appVersion`和`-appBuild`）的信息，但对于大多数桌面发布来说，这是可选的。我们将在本章的后面部分开始将其添加到命令中。
- en: With the application now bundled in this section, we could distribute the application
    to *beta testers* or small communities who are happy to manage their own software
    installation by downloading from the web.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 现在应用程序已在此部分捆绑，我们可以将其分发给*测试人员*或小型社区，他们愿意通过从网络下载来管理自己的软件安装。
- en: Sharing your app on the web
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在网络上分享您的应用
- en: With an application now set up to use the production values where appropriate,
    we can start a plan for distribution. In many cases, the files created by `fyne
    release` will be in a different format to `fyne package` (because this command
    focuses on app store and marketplace distribution). To apply the release parameters
    to the previous package format, you can use `fyne package –release` instead.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 现在应用程序已设置好，在适当的地方使用生产值，我们可以开始制定分发计划。在许多情况下，`fyne release`创建的文件将与`fyne package`（因为此命令专注于应用程序商店和市场分发）的文件格式不同。要将发布参数应用于之前的包格式，您可以使用`fyne
    package –release`。
- en: If you want to share your applications without using the platform's official
    distribution, then this can be done by uploading the result of the `release` command
    to a website or file sharing platform. In most cases, this is a simple case of
    copying the file or uploading it to wherever you want to share it. However, with
    some systems (mainly macOS), the application is a bundle, or directory, and this
    may not be downloadable from a website link. In these situations, it is a good
    idea to compress or archive the set of files into a single file that can be downloaded.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想在不用平台官方分发的情况下分享您的应用程序，可以通过将`release`命令的结果上传到网站或文件共享平台来实现。在大多数情况下，这只是一个简单地将文件复制或上传到您想要分享的地方。然而，在某些系统（主要是macOS）中，应用程序是一个包或目录，这可能无法通过网站链接下载。在这些情况下，将文件集压缩或归档成一个可下载的单个文件是一个好主意。
- en: 'On your mac (where macOS apps are normally created) you can open the app folder
    in **Finder** and right-click the package, and then select the **Compress <filename>**
    option from the context menu, shown as follows:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的mac（macOS应用程序通常创建的地方）中，您可以在**Finder**中打开应用程序文件夹，右键单击包，然后从上下文菜单中选择**压缩 <filename>**选项，如下所示：
- en: '![Figure 10.3 – Compressing a macOS app bundle for sharing on the web'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.3 – 压缩macOS应用程序包以便在网络上共享]'
- en: '](img/Figure_10.3_B16820.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_10.3_B16820.jpg]'
- en: Figure 10.3 – Compressing a macOS app bundle for sharing on the web
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.3 – 压缩macOS应用程序包以便在网络上共享
- en: The resulting `.zip` file created can be shared more easily from a website,
    and people downloading it can just double-click the file to expand your application,
    which can then be run as normal.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的`.zip`文件可以更容易地从网站共享，下载它的人只需双击文件即可展开您的应用程序，然后可以像平常一样运行。
- en: In this section, we saw how to package an application for release and how to
    share the resulting file so that others can install our software. However, for
    most applications, it will be more beneficial to distribute through the provided
    store or marketplace. We'll step through this process for the most common OSes
    in the following sections.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们了解了如何打包应用程序以供发布，以及如何共享生成的文件，以便他人可以安装我们的软件。然而，对于大多数应用程序来说，通过提供的商店或市场进行分发将更有益。在接下来的几节中，我们将逐步介绍这一过程，针对最常见的操作系统。
- en: Distributing apps to desktop app stores
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将应用程序分发到桌面应用程序商店
- en: Most desktop OSes now have a central location for discovering and installing
    applications. Apple created the **Mac App Store**, Windows has the **Microsoft
    Store**, and each Linux distribution has its preferred package manager. Having
    an application listed in (and hosted by) a platform marketplace significantly
    increases the number of users you can expect and also reduces the associated hosting
    costs. When paired with carefully prepared metadata (as described in [*Chapter
    9*](B16820_09_Final_JM_ePub.xhtml#_idTextAnchor219), *Bundling Resources and Preparing
    for Release*), a marketplace can easily become your largest distribution channel.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数桌面操作系统现在都有一个用于发现和安装应用程序的中心位置。苹果创建了**Mac App Store**，Windows有**Microsoft Store**，每个Linux发行版都有自己的首选包管理器。将应用程序列在（并由平台市场托管）可以显著增加您预期的用户数量，并降低相关的托管成本。当与精心准备的元数据（如[第9章](B16820_09_Final_JM_ePub.xhtml#_idTextAnchor219)，*捆绑资源和准备发布*）相结合时，市场可以轻松成为您最大的分发渠道。
- en: In this section, we step through the process for the macOS and Windows stores.
    We will return to Linux and BSD distribution later in the chapter as they are
    less mainstream and far more complicated.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将逐步介绍macOS和Windows商店的过程。我们将在本章的后面部分回到Linux和BSD分发，因为它们不太主流，而且更加复杂。
- en: Mac App Store
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Mac App Store
- en: The Mac App Store is the desktop version of Apple's famous iOS App Store. It
    provides many thousands of applications available to buy and download, or gift
    to others. There is also curated content, which includes listings of the most
    popular apps in various categories, as well as staff picks and recommended software.
    Unfortunately, the Mac App Store cannot be browsed online as it requires the App
    Store software, which is pre-installed on compatible Mac computers.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: Mac App Store是苹果公司著名的iOS App Store的桌面版本。它提供了成千上万的应用程序可供购买和下载，或赠送给他人。此外，还有精选内容，包括各种类别中最受欢迎的应用程序列表，以及员工精选和推荐软件。不幸的是，Mac
    App Store不能在线浏览，因为它需要预安装在兼容Mac电脑上的App Store软件。
- en: To distribute an app on the App Store, you will need to have the development
    tools installed (see [*Appendix B*](B16820_12_Final_JM_ePub.xhtml#_idTextAnchor256),
    *Installation of Mobile Build Tools*), but you will also need to sign up to the
    **Apple Developer Program**. If you are not already a member, you can sign up
    at [developer.apple.com/programs/enroll/](http://developer.apple.com/programs/enroll/).
    The development resources are free to access, but there is an annual subscription
    charge for access to the code signing tools, which are required to complete the
    release process we are about to explore.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 要在App Store上分发应用程序，你需要安装开发工具（参见[*附录B*](B16820_12_Final_JM_ePub.xhtml#_idTextAnchor256)，*移动构建工具的安装*)），但你还需要注册**Apple
    Developer Program**。如果你还不是会员，你可以在[developer.apple.com/programs/enroll/](http://developer.apple.com/programs/enroll/)注册。开发资源是免费访问的，但为了访问代码签名工具，你需要支付年度订阅费用，这些工具是完成我们即将探讨的发布过程所必需的。
- en: Packaging a macOS release
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 打包macOS发布版本
- en: To package a release for upload to the Mac App Store is like the release process
    we explored earlier in this chapter, but we must also provide certification details
    that apply **code signing** to our application.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 将发布版本打包上传到Mac App Store的过程类似于我们在本章前面探索的发布过程，但我们还必须提供适用于对应用程序进行**代码签名**的认证细节。
- en: Code signing is a complicated process to set up, so for the purpose of this
    description, it is assumed that you already have a distribution certificate installed.
    For further instructions on downloading your certificate, please see Apple's documentation
    at [developer.apple.com/support/certificates/](http://developer.apple.com/support/certificates/).
    You need to note the name of the certificate (use `build` command later. You will
    also need to note which provisioning profile you are using to build. As with certificates,
    this should already be downloaded and installed on your computer, but you need
    to note the name (you can find more details on the Apple Developer portal at [developer.apple.com/account/resources/certificates/](http://developer.apple.com/account/resources/certificates/)).
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 代码签名是一个复杂的设置过程，因此在本描述中，我们假设你已经安装了分发证书。有关下载证书的进一步说明，请参阅苹果公司的文档[developer.apple.com/support/certificates/](http://developer.apple.com/support/certificates/)。你需要注意证书的名称（稍后使用`build`命令时需要。你还需要注意你正在使用的配置文件。与证书一样，这应该已经下载并安装在你的电脑上，但你需要注意其名称（你可以在苹果开发者门户[developer.apple.com/account/resources/certificates/](http://developer.apple.com/account/resources/certificates/)上找到更多详细信息）。
- en: 'Once you have identified the certificate name and provisioning profile, you
    can use the details in the following command:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你确定了证书名称和配置文件，你就可以使用以下命令中的详细信息：
- en: '[PRE5]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The resulting app package is ready to be uploaded to the **App Store Connect**
    website for validation.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的应用包已准备好上传到**App Store Connect**网站进行验证。
- en: Uploading to the Mac App Store
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 上传到Mac App Store
- en: App Store applications are managed through the App Store Connect website (at
    [appstoreconnect.apple.com/](http://appstoreconnect.apple.com/)). Log in using
    your Apple Developer account and create a new application (if you have not already
    done so). This is where you add the metadata that will be displayed in the store
    – be sure to check the information carefully as some data cannot be changed after
    release.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: App Store应用程序通过App Store Connect网站（[appstoreconnect.apple.com/](http://appstoreconnect.apple.com/)）进行管理。使用你的苹果开发者账户登录并创建一个新的应用程序（如果你还没有这样做）。这是你添加将在商店中显示的元数据的地方——务必仔细检查信息，因为一些数据在发布后无法更改。
- en: Well-chosen descriptions and screenshots will help your application to be more
    easily discovered. Within this app definition, you need to start preparing a new
    release, with an appropriate version number and supporting information. You will
    probably notice that you are not yet able to select a build – to enable this,
    we first need to upload the compiled package.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 选择的描述和截图将有助于您的应用程序更容易被发现。在此应用程序定义中，您需要开始准备一个新版本，包括适当的版本号和相关支持信息。您可能会注意到您还不能选择构建版本——为了启用此功能，我们首先需要上传编译包。
- en: 'Apple has recently created a new app named **Transporter** that is currently
    the easiest way to upload a new build. You can follow these steps to do so:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 苹果公司最近创建了一个名为**Transporter**的新应用程序，目前这是上传新构建版本最简单的方式。您可以按照以下步骤进行操作：
- en: Open the Transporter app and log in with your **Apple ID**.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 Transporter 应用程序，并使用您的**Apple ID**登录。
- en: Once logged in, you will be asked to choose the application to upload – select
    the application package created by the `release` command in the previous section
    and proceed to the upload.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录后，您将被要求选择要上传的应用程序——选择上一节中由`release`命令创建的应用程序包，然后进行上传。
- en: Once complete, the build will appear on the App Store Connect website (you may
    need to refresh the page). If you prefer command-line tools for managing the upload
    progress, you can use **xcrun altool**, which provides the same capability. Whichever
    way you upload the package, you need to select the resulting build in the app
    details on the website.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦完成，构建版本将出现在 App Store Connect 网站上（您可能需要刷新页面）。如果您更喜欢使用命令行工具来管理上传进度，可以使用**xcrun
    altool**，它提供相同的功能。无论您以何种方式上传包，您都需要在网站上的应用程序详情中选择相应的构建版本。
- en: Once you have chosen this new build, you can click on the **Submit for Review**
    button to start the review process.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦选择了这个新构建版本，您就可以点击**提交审查**按钮开始审查流程。
- en: We'll now move to the next section to learn about the review process.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将进入下一节，了解审查流程。
- en: Mac App Store review process
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Mac App Store 审查流程
- en: As soon as an app is submitted for review, it goes through an automated set
    of code checks. This process verifies that the application does not contain obvious
    errors in metadata or code signing, and performs a code analysis to ensure you
    are not using APIs that are private to Apple or otherwise restricted. Assuming
    that these automated checks pass, then the application will be sent for final
    acceptance by a member of the App Store review team.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦应用程序提交审查，它就会通过一系列自动的代码检查。这个过程验证应用程序不包含元数据或代码签名中的明显错误，并执行代码分析以确保您没有使用苹果公司专有的或受限制的
    API。假设这些自动检查通过，那么应用程序将被发送给 App Store 审查团队的成员进行最终接受。
- en: 'The review team checks your application for quality, reliability, compliance
    with the **Human Interface Guidelines** (**HIG**: [developer.apple.com/app-store/review/](http://developer.apple.com/app-store/review/)),
    and that it meets other criteria for inclusion on the store. This process typically
    takes a day or two, but can be longer for the first release of a new application.
    Once the process is complete, your software will be available to purchase or download
    on the App Store. In your first week of distribution, it may even be included
    in the **New and Noteworthy** section.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 审查团队会检查您的应用程序的质量、可靠性、是否符合**人类界面指南**（**HIG**：[developer.apple.com/app-store/review/](http://developer.apple.com/app-store/review/)），以及它是否符合商店收录的其他标准。这个过程通常需要一两天，但新应用程序的首个版本可能需要更长的时间。一旦这个过程完成，您的软件将可在
    App Store 上购买或下载。在您的第一周分发期间，它甚至可能被包含在**新功能和值得注意**部分。
- en: Now that we have understood the Mac App Store process, let's look at the Microsoft
    Store process.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经了解了 Mac App Store 的流程，让我们看看微软商店的流程。
- en: Microsoft Store
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 微软商店
- en: The **Microsoft Store** is the official location for finding and installing
    software, apps, and games for all the current **Windows**, **Windows Phone**,
    and **Xbox** devices. It provides hosting and search facilities as well as handling
    payments for paid software and supports discounts and vouchers as well. You can
    browse the contents of the Microsoft Store online (at [www.microsoft.com/store/apps](http://www.microsoft.com/store/apps))
    or by using the Store apps on each of the systems it supports.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '**微软商店**是查找和安装所有当前**Windows**、**Windows Phone**和**Xbox**设备软件、应用程序和游戏的官方位置。它提供托管和搜索功能，以及处理付费软件的支付，还支持折扣和优惠券。您可以在网上浏览微软商店的内容（在[www.microsoft.com/store/apps](http://www.microsoft.com/store/apps)），或者通过使用它支持的每个系统上的商店应用程序。'
- en: To submit an application to the Microsoft Store, you will require a Microsoft
    account (which you may already have if you've signed in to Windows, Xbox, or **Office
    365**). You will also have to start an annual subscription to access the relevant
    portions of the partner portal. You can log in and sign up at [partner.microsoft.com/en-US/dashboard/apps/signup](http://partner.microsoft.com/en-US/dashboard/apps/signup).
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 要将应用程序提交到微软商店，你需要一个微软账户（如果你已经登录过 Windows、Xbox 或 **Office 365**，你可能已经有了账户）。你还需要开始一个年度订阅，以便访问合作伙伴门户的相关部分。你可以在
    [partner.microsoft.com/en-US/dashboard/apps/signup](http://partner.microsoft.com/en-US/dashboard/apps/signup)
    登录和注册。
- en: Packaging a Windows release
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Windows 发布打包
- en: 'Preparing a release package for the Microsoft Store is very similar to the
    packaging we have done before, but as a release asset, it will require version
    numbers applied. As with the macOS App Store, we will need to sign the software.
    If you have not already done so, be sure to download your certificate, noting
    its name. Windows apps use a combined version number, such as `1.2.3.4`, but the
    `fyne` tool splits this into two parts. To package the app for a specific version,
    pass the last number as `-appBuild` and the rest of the version as `-appVersion`,
    shown as follows:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 准备微软商店的发布包与之前我们做的打包过程非常相似，但作为一个发布资产，它将需要应用版本号。就像在 macOS 应用商店一样，我们需要对软件进行签名。如果你还没有这样做，请确保下载你的证书，并注意其名称。Windows
    应用使用一个组合版本号，例如 `1.2.3.4`，但 `fyne` 工具将其分为两部分。为了打包特定版本的软件，将最后一个数字作为 `-appBuild`
    传递，其余版本作为 `-appVersion`，如下所示：
- en: '[PRE6]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The output of this command will be a `.appx` file. This file is the package
    type required for uploading to the store and should not be shared in other ways.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令的输出将是一个 `.appx` 文件。此文件是上传到商店所需的包类型，不应以其他方式共享。
- en: Uploading to Microsoft Store
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 上传到微软商店
- en: The completed package should be uploaded to the partner portal within the **Packages**
    page. When preparing for upload, make sure that all of your application metadata
    has been added to the correct locations so that people will find your software
    easily. Once the package is uploaded, it will be checked for various errors that
    could stop it from being released. Should you encounter any warnings, you will
    need to remove the uploaded build from the portal, fix the issue, and upload a
    new package for retesting.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 完成的包应上传到合作伙伴门户的 **包** 页面。在准备上传时，请确保你的所有应用程序元数据都已添加到正确的位置，以便人们可以轻松找到你的软件。一旦包上传，它将检查可能阻止其发布的各种错误。如果你遇到任何警告，你需要从门户中删除已上传的构建版本，修复问题，并上传一个新的包以重新测试。
- en: Microsoft Store review process
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 微软商店审查流程
- en: Once your package is uploaded and has passed the initial validation, it will
    be added to a queue to be reviewed. The Microsoft staff will review your application
    for correctness and suitability, and validate that it is of suitably high quality
    for inclusion in the store. Assuming that these checks all pass, they will publish
    it for distribution across the devices that you specified during the submission
    process.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你的包上传并通过初步验证，它将被添加到队列中等待审查。微软工作人员将审查你的应用程序的正确性和适用性，并验证其是否具有足够高的质量，可以包含在商店中。假设所有这些检查都通过，他们将在你提交过程中指定的设备上发布它。
- en: In the next section, we will learn about Linux and BSD distributions.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将了解 Linux 和 BSD 发行版。
- en: Linux and BSD distributions
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Linux 和 BSD 发行版
- en: Linux and BSD distributions have a reputation for handling package distribution
    well; a desktop system will likely have a graphical package management application
    that provides easily searchable indexes containing thousands of packages. Despite
    there being hundreds of different Linux and BSD distributions, they are all based
    on similar binary files and file structures.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 和 BSD 发行版在处理包分发方面享有良好声誉；桌面系统可能有一个图形包管理应用程序，它提供易于搜索的索引，包含数千个包。尽管有数百种不同的
    Linux 和 BSD 发行版，但它们都基于类似的二进制文件和文件结构。
- en: Packaging for Linux/Unix
  id: totrans-92
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Linux/Unix 打包
- en: The basis of packaging Fyne apps for Linux and BSD systems is the `.tar.gz`
    file created in the *Building for release* section at the beginning of this chapter.
    The contents of that file will be adapted during packaging for a target distribution.
    By adding platform-specific metadata and running the file's package command, you
    can create packages for your preferred distribution.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章开头“为发布构建”部分创建的`.tar.gz`文件是Linux和BSD系统打包Fyne应用的基础。该文件的内容将在打包目标分发时进行适配。通过添加平台特定的元数据和运行文件的包命令，您可以创建适合您首选分发的包。
- en: Review process for Linux packages
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Linux软件包的审核流程
- en: Once packages have been created for a system, the application developer can
    submit it to the package list. For each system, the method of requesting addition
    is different, but can normally be found in the project documentation. However,
    as Linux and BSD are open source systems, you may find that an existing package
    maintainer may be happy to do that for you.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦为系统创建了包，应用程序开发者可以将其提交到包列表。对于每个系统，请求添加的方法可能不同，但通常可以在项目文档中找到。然而，由于Linux和BSD是开源系统，您可能会发现现有的包维护者可能愿意为您做这件事。
- en: In this section, we saw how Linux and BSD packaging can be accomplished using
    the available tools. This, combined with the *Mac App Store* and *Microsoft Store*
    sections, cover how to distribute your apps on most of the major desktop OSes.
    Next, we will see how to adapt this approach for uploading mobile applications
    to the appropriate distribution channels.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们看到了如何使用可用的工具完成Linux和BSD的打包。结合*Mac App Store*和*Microsoft Store*部分，涵盖了如何在大多数主要桌面操作系统上分发您的应用。接下来，我们将看到如何调整这种方法以将移动应用程序上传到适当的分发渠道。
- en: Uploading apps to Google Play and the iOS App Store
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 上传应用到Google Play和iOS App Store
- en: Managing releases for mobile platforms can be slightly more complicated as the
    apps cannot be directly tested on the devices that we use to build them. However,
    the Fyne release process is designed to encompass all platforms, so in this section,
    we will see how the same tools can be used for releasing to mobile device stores.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 管理移动平台的发布可能稍微复杂一些，因为应用不能直接在我们构建它们的设备上进行测试。然而，Fyne发布流程旨在涵盖所有平台，因此在本节中，我们将看到如何使用相同的工具发布到移动设备商店。
- en: iOS App Store
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: iOS App Store
- en: Packaging applications for iOS is very similar to the macOS distribution process
    described earlier in this chapter. You will need to have **Xcode** installed and
    a distribution certificate and provisioning profile prepared and downloaded from
    the Apple Developer portal, at [developer.apple.com/account/resources/certificates/](http://developer.apple.com/account/resources/certificates/).
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 为iOS打包应用与本章前面描述的macOS分发流程非常相似。您需要安装**Xcode**，并从Apple开发者门户[developer.apple.com/account/resources/certificates/](http://developer.apple.com/account/resources/certificates/)准备和下载分发证书和配置文件。
- en: Packaging an iOS release
  id: totrans-101
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 打包iOS发布版本
- en: 'For an iOS `release` package command, we run the following command on our Mac
    system, remembering to add the `-os ios` parameters:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 对于iOS发布包命令，我们在我们的Mac系统上运行以下命令，记得添加`-os ios`参数：
- en: '[PRE7]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The file resulting from the preceding command will be a `.ipa` file, which is
    the format required for uploading an iOS app to the App Store. Once you have this
    file, it can be uploaded using the same process described in the *Mac App Store*
    section earlier in this chapter.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 前面命令生成的文件将是一个`.ipa`文件，这是上传iOS应用到App Store所需的格式。一旦您有了这个文件，就可以使用本章前面*Mac App Store*部分中描述的相同流程上传。
- en: iOS App Store reviewing process
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: iOS App Store审核流程
- en: The review process for iOS apps is very similar to the Mac App Store. Submission
    of a build will start an automated check process that usually takes just minutes.
    After this, a manual review will be performed that can last for days, but even
    for reviews of complex apps in busy periods, the review will normally be completed
    within a week.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: iOS应用的审核流程与Mac App Store非常相似。提交构建版本将启动一个自动检查流程，通常只需几分钟。之后，将进行人工审核，这可能需要几天时间，但在繁忙时期对复杂应用的审核通常在一周内完成。
- en: In the next section, we will look at the Google Play Store process.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将查看Google Play Store流程。
- en: Google Play Store
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Google Play Store
- en: Packaging an Android app for the Google Play Store requires that we apply versioning
    information and our certification to the package file. Once again, the `fyne release`
    command will handle this, but we need to gather the relevant information. Version
    information can be passed the same as for previous builds, but the certification
    is different for Android.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Android 应用打包到 Google Play 商店需要我们将版本信息和我们的认证应用到包文件中。再次强调，`fyne release` 命令将处理此操作，但我们需要收集相关信息。版本信息可以像之前构建那样传递，但
    Android 的认证不同。
- en: Packaging an Android release
  id: totrans-110
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 打包 Android 发布版本
- en: Certification information for Android apps is stored in a `.keystore` file.
    If you have distributed an Android app before, you will probably already have
    one. If this is your first time, you will need to set up your developer credentials,
    including a private key and certificate. More information is available in the
    official documentation at [developer.android.com/studio/publish/app-signing](http://developer.android.com/studio/publish/app-signing).
    Be sure to keep your **keystore** safe as it will be required to release future
    versions of your app.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: Android 应用的认证信息存储在 `.keystore` 文件中。如果您之前已经分发过 Android 应用，您可能已经有一个。如果是第一次，您需要设置您的开发者凭据，包括私钥和证书。更多详细信息可在官方文档[developer.android.com/studio/publish/app-signing](http://developer.android.com/studio/publish/app-signing)中找到。请确保您的
    **keystore** 安全，因为它将用于发布您应用的未来版本。
- en: 'Once you have located the keystore that contains this information, you are
    ready to start the release process. Using the same version information as other
    builds, we will run the `fyne release` command with an additional `-keyStore`
    parameter that is followed by the path to the file. The full command will look
    something like the following:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦找到包含此信息的 keystore，您就可以开始发布流程。使用与其他构建相同的版本信息，我们将运行带有额外 `-keyStore` 参数的 `fyne
    release` 命令，该参数后面跟着文件的路径。完整的命令看起来可能如下所示：
- en: '[PRE8]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Be sure to have the password and optional key alias at hand as the command will
    ask for additional information to complete the signing process. The result of
    this will be a `.apk` file much like from previous development packaging, but
    with signing details ready for upload. You might consider renaming the file to
    mark it as a release so there is no confusion later when you start with the development
    again.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 确保您有密码和可选的密钥别名在手，因为命令将要求提供额外信息以完成签名过程。这将产生一个类似于之前开发打包的 `.apk` 文件，但带有为上传准备的签名细节。您可以考虑将文件重命名为标记其为发布版本，这样在您再次开始开发时就不会产生混淆。
- en: Uploading to Play Console
  id: totrans-115
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 上传到 Play Console
- en: To upload your application for inclusion in the Google Play Store, you will
    need to log in to the **Play Console** (there will be a small charge if you have
    not already signed up) at [play.google.com/console/](http://play.google.com/console/).
    Once logged in, you can start the process of creating a new application. Here
    you will upload the metadata, icons, and other marketing materials, as with the
    Apple iOS App Store explored earlier.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 要将您的应用程序上传到 Google Play 商店，您需要登录到 **Play Console**（如果您尚未注册，将收取少量费用）[play.google.com/console/](http://play.google.com/console/)。登录后，您就可以开始创建新应用程序的过程。在这里，您将上传元数据、图标和其他营销材料，就像之前探索的
    Apple iOS 应用商店一样。
- en: In the `release` command so that the file matches the metadata online. Once
    you have filled in the information, locate the `.apk` file (or tap on the **Upload**
    button to choose it). Once the upload has completed, it will go through some automated
    checks to confirm compatibility. If anything is wrong at this stage, you can go
    back to your project to make the changes, re-build the file in release mode, and
    upload a replacement file.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `release` 命令中，确保文件与在线元数据匹配。填写完信息后，找到 `.apk` 文件（或轻触 **上传** 按钮选择它）。上传完成后，它将经过一些自动化检查以确认兼容性。如果在此阶段有任何问题，您可以返回项目进行更改，以发布模式重新构建文件，并上传替换文件。
- en: Play store reviewing process
  id: totrans-118
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Play 商店审查流程
- en: Once your app has been submitted to the Google Play Console, you can track its
    progress through the review process. There are some manual aspects to the checks
    that will be performed, which can lead to wait times of around a day or two. **Google**
    notes that in some cases, additional checks may need to be performed that can
    take up to 7 days or longer. This can often be the case with new user accounts
    or apps when they are first being published. Once approved, your app will be visible
    in the Play Store on all supported Android devices.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您的应用程序提交到 Google Play Console，您就可以通过审查过程跟踪其进度。检查过程中有一些手动环节，可能会导致等待时间约为一天或两天。**谷歌**指出，在某些情况下，可能需要进行额外的检查，这可能需要长达
    7 天或更长时间。这通常发生在新用户账户或应用程序首次发布时。一旦批准，您的应用程序将在所有支持的 Android 设备上的 Play 商店中可见。
- en: Summary
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this final chapter, we looked at how to package and distribute graphical
    applications using the Fyne tool. Unlike the distribution of command-line or system
    utilities, the process of delivering a GUI application requires additional metadata
    and packaging to integrate well with each OS. We saw how the basic release process
    can create an application package ready for distribution beyond our development
    and test team members.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在最后一章中，我们探讨了如何使用 Fyne 工具打包和分发图形应用程序。与命令行或系统工具的分发不同，交付 GUI 应用程序的过程需要额外的元数据和打包，以便与每个操作系统良好集成。我们看到了基本发布流程如何创建一个适用于分发到我们开发和测试团队成员之外的应用程序包。
- en: Packaging for different platforms can be complicated, so we walked through the
    steps required to build native-looking graphical packages for macOS, Windows,
    and Linux, as well as mobile packaging for iOS and Android. Each package has its
    own metadata format and package structure, but this was generated automatically
    using the `fyne` `release` tool.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 为不同平台打包可能会很复杂，因此我们详细介绍了构建原生外观的图形包的步骤，包括适用于 macOS、Windows 和 Linux 的图形包，以及适用于
    iOS 和 Android 的移动打包。每个包都有自己的元数据格式和包结构，但这些都是通过使用 `fyne` `release` 工具自动生成的。
- en: We also saw how to build release packages for distribution on official stores,
    and how these packages can be submitted to the app store or marketplace that will
    be preinstalled on the user's device. The Windows, macOS, iOS and Android stores
    provide an opportunity for applications to earn revenue following release, and
    the Linux software listings will help to increase the visibility of our software
    package.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还看到了如何构建用于在官方商店分发的发布包，以及如何将这些包提交到将在用户设备上预先安装的应用商店或市场。Windows、macOS、iOS 和 Android
    商店为应用程序在发布后赚取收入提供了机会，而 Linux 软件列表将有助于提高我们软件包的可见性。
- en: Having learned the various aspects of developing graphical apps using Fyne,
    we have made it all the way to a complete and published application. Hopefully,
    this guide has been helpful and has enabled you to create the app that you had
    been aiming to build and to get it working across all your devices over a range
    of OSes.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在学习了使用 Fyne 开发图形应用程序的各个方面之后，我们已经完成了从开发到发布的全过程。希望这个指南对您有所帮助，并使您能够创建您一直想要构建的应用程序，并在各种操作系统上让它在您的所有设备上运行。
- en: If you would like to distribute your application to the community, please consider
    sharing it on the Fyne app listing by going to [developer.fyne.io/submit](http://developer.fyne.io/submit).
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想将您的应用程序分发给社区，请考虑通过访问 [developer.fyne.io/submit](http://developer.fyne.io/submit)
    在 Fyne 应用列表中分享它。
