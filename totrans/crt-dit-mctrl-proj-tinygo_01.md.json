["```go\n    package main\n    func main() {\n        print(\"Hello World\\n\")\n    }\n    ```", "```go\n    $ go version\n    go version go1.15.2 linux/amd64\n    ```", "```go\n    $ go build ./ch1/hello-world/\n    ```", "```go\n    $ ls -l\n    -rwxrwxr-x 1 tobias tobias 1231780 Okt  4 19:31 hello-world\n    ```", "```go\n    tinygo build command has a syntax that is similar to the Go build command. \n    ```", "```go\n    $ ls -l\n    -rwxrwxr-x 1 tobias tobias 1231780 Okt  4 19:31 hello-world\n    -rwxrwxr-x 1 tobias tobias   21152 Okt  4 19:39 hello-world-tiny\n    ```", "```go\n    wget https://github.com/tinygo-org/tinygo/releases/download/v0.15.0/tinygo_0.15.0_amd64.deb\n    sudo dpkg -i tinygo_0.15.0_amd64.deb\n    ```", "```go\n    GOPATH by editing your .profile or .netrc file.\n    ```", "```go\n    $ tinygo version\n    tinygo version 0.15.0 linux/amd64 (using go version go1.15.2 and LLVM version 10.0.1)\n    ```", "```go\n    sudo apt-get install gcc-avr\n    sudo apt-get install avr-libc\n    sudo apt-get install avrdude\n    ```", "```go\n    Set-ExecutionPolicy RemoteSigned -scope CurrentUser\n    ```", "```go\n    iwr -useb get.scoop.sh | iex\n    ```", "```go\n    scoop install tinygo\n    ```", "```go\n    tinygo version\n    ```", "```go\n    tinygo version 0.15.0 windows/amd64 (using go version go1.15.3 and LLVM version 10.0.1)\n    ```", "```go\n    brew tap tinygo-org/tools\n    brew install tinygo\n    ```", "```go\n    $ tinygo version\n    tinygo version 0.15.0 darwin/amd64 (using go version go1.15 and LLVM version 10.0.1)\n    ```", "```go\n    brew tap osx-cross/avr\n    brew install avr-gcc\n    brew install avrdude\n    ```", "```go\ndocker pull tinygo/tinygo:0.15.0\n```", "```go\ndocker run -v $GOPATH:/go -e \"GOPATH=/go\" tinygo/tinygo:0.15.0 tinygo build -o /go/src/github.com/myuser/myrepo/wasm.wasm -target wasm --no-debug /go/src/github.com/myuser/myrepo/wasm-main.go\n```", "```go\n    Go: install\n    ```", "```go\n    All tools successfully installed. You are ready to Go :).\n    ```", "```go\n{\n   \"go.toolsEnvVars\": {\n     \"GOROOT\": \"/home/user/.cache/tinygo/goroot-go1.14-f930d5b\n         5f36579e8cbf1f-syscall\",\n     \"GOFLAGS\": \"-tags=cortexm,baremetal,linux,arm,nrf51822,\n         nrf51,nrf,microbit,tinygo,gc.conservative,scheduler.\n         tasks\"\n }\n}\n```", "```go\ntinygo info arduino\n```", "```go\nLLVM triple:       avr-unknown-unknown\nGOOS:              linux\nGOARCH:            arm\nbuild tags:        avr baremetal linux arm atmega328p atmega avr5 arduino tinygo gc.conservative scheduler.none\ngarbage collector: conservative\nscheduler:         none\ncached GOROOT:     /home/tobias/.cache/tinygo/goroot-go1.15.2-bb8dfc1625dfff39df9d5a78a474eb93c273cccfe3243ee4e33bafef0dcd97fe-syscall\n```", "```go\n export GOFLAGS=-tags=avr,baremetal,linux,arm,atmega328p,atmega,avr5,arduino,tinygo,gc.conservative,scheduler.none; code\n```", "```go\n    package main\n    ```", "```go\n    import (\n        \"machine\"\n        \"time\"\n    )\n    ```", "```go\n    func main() {\n    ```", "```go\n        led := machine.LED\n    ```", "```go\n        led.Configure(machine.PinConfig{Mode: machine.\n        PinOutput})\n    ```", "```go\n        for {\n    ```", "```go\n        led.Low()\n    ```", "```go\n        time.Sleep(time.Millisecond * 300)\n    ```", "```go\n        led.High()\n    ```", "```go\n        time.Sleep(time.Millisecond * 300)\n    ```", "```go\n    }\n    ```", "```go\n    }\n    ```", "```go\ntinygo flash --target=arduino ch1/hello-world-of-things/main.go\n```", "```go\navrdude: AVR device initialized and ready to accept instructions \nReading | ################################################## | 100% 0.00s \navrdude: Device signature = 0x1e950f (probably m328p)\navrdude: NOTE: \"flash\" memory has been specified, an erase cycle will be performed\n         To disable this feature, specify the -D option.\navrdude: erasing chip\navrdude: reading input file \"/tmp/tinygo208327574/main.hex\"\navrdude: writing flash (558 bytes): \nWriting | ################################################## | 100% 0.10s \navrdude: 558 bytes of flash written\navrdude: verifying flash memory against /tmp/tinygo208327574/main.hex:\navrdude: load data flash data from input file /tmp/tinygo208327574/main.hex:\navrdude: input file /tmp/tinygo208327574/main.hex contains 558 bytes\navrdude: reading on-chip flash data: \nReading | ################################################## | 100% 0.08s \navrdude: verifying ...\navrdude: 558 bytes of flash verified \navrdude done.  Thank you.\n```"]