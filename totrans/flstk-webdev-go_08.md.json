["```go\nnpm install\n```", "```go\nnpx vue-cli-service serve\n```", "```go\nimport Vue from 'vue'\nimport App from './App.vue'\nimport vuetify from './plugins/vuetify';\nVue.config.productionTip = false\nnew Vue({\n vuetify,\n render: h => h(App)\n}).$mount('#app')\n```", "```go\nimport Vue from 'vue';\nimport Vuetify from 'vuetify/lib/framework';\nVue.use(Vuetify);\nexport default new Vuetify({});\n```", "```go\n<template>\n <v-app>\n   <v-container>\n    ...\n     <v-row>\n       <v-col>\n         Color Picker\n       </v-col>\n       <v-col>\n         <v-color-picker/>\n       </v-col>\n     </v-row>\n   </v-container>\n </v-app>\n</template>\n```", "```go\n<head>\n   ...\n   <link rel=\"stylesheet\" href=\n      \"https://cdn.jsdelivr.net/npm/bulma@0.9.3/css/\n       bulma.min.css\">\n</head>\n```", "```go\n<section class=\"hero is-medium is-primary\">\n   <div class=\"hero-body\">\n       <div class=\"container\">\n           <div class=\"columns\">\n               ...\n           </div>\n       </div>\n   </div>\n</section>\n<section class=\"section\">\n   <div class=\"container\">\n       <div class=\"columns\">\n           <div class=\"column is-8-desktop\n                       is-offset-2-desktop\">\n               <div class=\"content\">\n                   ...\n               </div>\n           </div>\n       </div>\n   </div>\n</section>\n```", "```go\nnpm install\nnpx vue-cli-service serve\n```", "```go\nimport Vue from 'vue'\nimport App from './App.vue'\nimport Buefy from \"buefy\";\nVue.use(Buefy);\nnew Vue({\n render: h => h(App)\n}).$mount('#app')\n```", "```go\n<!--example from https://buefy.org/documentation-->\n<template>\n <section>\n   <div class=\"container\">\n     <b-carousel>\n       <b-carousel-item v-for=\"(carousel, i) in carousels\"\n        :key=\"i\">\n         <section :class=\"`hero is-medium\n                           is-${carousel.color}`\">\n           <div class=\"hero-body has-text-centered\">\n             <h1 class=\"title\">{{ carousel.text }}</h1>\n           </div>\n         </section>\n       </b-carousel-item>\n     </b-carousel>\n   </div>\n...\n </section>\n</template>\n```", "```go\n<script>\nVue.use(VeeValidate);\nvar app = new Vue({\n  el: '#app',\n  data: {\n    email: '',\n  },\n  methods: {\n    onSubmit: function(scope) {\n      this.errors.clear(scope);\n      this.$validator.validateAll(scope);\n    }\n  }\n});\n</script>\n<template>\n<div>\n  <form v-on:submit.prevent=\"onSubmit('scope')\">\n    <div>\n      <div v-for=\"error in errors.all('scope')\">\n        {{error}}\n      </div>\n    </div>\n    <div>\n      <label>Email Address</label>\n      <input type=\"text\" v-model=\"email\"\n        name=\"Email Address\" v-validate data-scope=\"scope\"\n        data-rules=\"required|min:6|email\">\n    </div>\n    <div>\n      <button type=\"submit\">\n        Send\n      </button>\n    </div>\n  </form>\n  <div class=\"debug\">\n    email: {{email}}<br>\n  </div>\n</div>\n</template>\n```", "```go\n<script>\nVue.use(window.vuelidate.default)\nconst { required, minLength,email } = window.validators\nnew Vue({\n    el: \"#app\",\n  data: {\n      text: ''\n  },\n  validations: {\n      text: {\n        required,\n      email,\n      minLength: minLength(2)\n    }\n  },\n  methods: {\n      status(validation) {\n        return {\n        error: validation.$error,\n        dirty: validation.$dirty\n      }\n    }\n  }\n})\n</script>\n<template>\n<div>\n  <form>\n    <div>\n      <label>Email Address</label>\n      <input v-model=\"$v.text.$model\"\n        :class=\"status($v.text)\">\n      <pre>{{ $v }}</pre>\n    <div>\n  </form>\n</div>\n</template>\n```", "```go\n...\nvalidations: {\n  name: { alpha },\n  email: { required, email }\n  users: {\n    minLength: minLength(2)\n  },\n  tags: {\n    maxLength: maxLength(5)\n  },\n  formA: ['name', 'email'],\n  formB: ['users', 'tags']\n}\n```", "```go\nimport { required, maxLength, email } from '@vuelidate/validators'\n```", "```go\n<template>\n<div id=\"app\">\n  <div>\n   <custom-input\n    v-cleave=\"{ creditCard: true,\n    onCreditCardTypeChanged: cardChanged, }\"\n    v-model=\"ccNumber\" />\n</div>\n<pre>\n{{ ccNumber }}\n{{ cardType }}\n</pre>\n</template>\n```"]