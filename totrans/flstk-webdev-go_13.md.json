["```go\nsystemctl list-units --type=service --state=running   | grep -i docker && systemctl list-units --type=service --state=active  | grep -i containerd\n```", "```go\n  docker.service                     loaded    active running Docker Application Container Engine\n  containerd.service             loaded    active running containerd container runtime\n```", "```go\ndocker images\n```", "```go\ndocker run hello-world\n```", "```go\n$ docker run hello-world\n```", "```go\nUnable to find image 'hello-world:latest' locally\nlatest: Pulling from library/hello-world\n2db29710123e: Pull complete\nDigest: sha256:10d7d58d5ebd2a652f4d93fdd86da8f265f5318c6a73cc5b 6a9798ff6d2b2e67\nStatus: Downloaded newer image for hello-world:latest\n```", "```go\nHello from Docker!\nThis message shows that your installation appears to be working correctly.\nTo generate this message, Docker took the following steps:\n 1\\. The Docker client contacted the Docker daemon.\n …\n …\n https://docs.docker.com/get-started/\n```", "```go\n{\n  \"Repositories\": {\n    \"hello-world\": {\n      \"hello-world:latest\":\n        \"sha256:feb5d9fea6a5e9606aa995e879d862b82\n         5965ba48de054caab5ef356dc6b3412\",\n      \"hello-world@sha256:\n        10d7d58d5ebd2a652f4d93fdd86da8f265f5318c6a7\n       3cc5b6a9798ff6d2b2e67\":\n         \"sha256:feb5d9fea6a5e9606aa995e879d862\n          b825965ba48de054caab5ef356dc6b3412\"\n    },\n    \"...\n    \"redis\": {\n      \"redis:latest\":\n        \"sha256:bba24acba395b778d9522a1adf5f0d6bba3e609\n         4b2d298e71ab08828b880a01b\",\n      \"redis@sha256:69a3ab2516b560690e37197b71bc61ba24\n                    5aafe4525ebdec\n       e1d8a0bc5669e3e2\":\n         \"sha256:bba24acba395b778d9522a1adf5f0d6bba3\n          e6094b2d298e71ab08828b880a01b\"\n    }\n  }\n}\n```", "```go\ndocker images\n```", "```go\nREPOSITORY    TAG       IMAGE ID           CREATED           SIZE\n..\nhello-world      latest    feb5d9fea6a5   7 months ago   13.3kB\n..\n```", "```go\nsudo find /var/lib/docker -name 'feb5d9fea6a5*'\n```", "```go\n/var/lib/docker/image/overlay2/imagedb/content/sha256/feb5d9fea 6a5e9606aa995e879d862b825965ba48de054caab5ef356dc6b3412\n```", "```go\nsudo cat /var/lib/docker/image/overlay2/imagedb/content/sha256/feb5d9fea6a5e9606aa995e879d862b825965ba48de054caab5ef356dc6b3412\n```", "```go\n{\n  \"architecture\": \"amd64\",\n  \"config\": {\n    …\n    ],\n        …\n  },\n      …\n    \"Cmd\": [\n      \"/bin/sh\",\n      \"-c\",\n      \"#(nop) \",\n      \"CMD [\\\"/hello\\\"]\"\n    ],\n    \"Image\": \"sha256:b9935d4e8431fb1a7f0989304ec8\n              6b3329a99a25f5efdc7f09f3f8c41434ca6d\",\n    \"Volumes\": null,\n    \"WorkingDir\": \"\",\n    \"Entrypoint\": null,\n    \"OnBuild\": null,\n    \"Labels\": {}\n  },\n  \"created\": \"2021-09-23T23:47:57.442225064Z\",\n  \"docker_version\": \"20.10.7\",\n  \"history\": [\n    {\n       …\n  ],\n  \"os\": \"linux\",\n  \"rootfs\": {\n    \"type\": \"layers\",\n    \"diff_ids\": [\n      \"sha256:e07ee1baac5fae6a26f30cabfe54a36d3402f96afda3\n              18fe0a96cec4ca393359\"\n    ]\n  }\n}\n```", "```go\ndocker image inspect hello-world:latest\n```", "```go\n[\n    {\n        \"Id\": \"sha256:feb5d9fea6a5e9606aa995e879d862b825\n               965ba48de054caab5ef356dc6b3412\",\n        \"RepoTags\": [\n            \"hello-world:latest\"\n        ],\n        \"RepoDigests\": [\n            \"hello-world@sha256:10d7d58d5ebd2a652\n           f4d93fdd86da8f265f5318c6a73cc5b6a9798ff6d2b2e67\"\n        ],\n        \"Parent\": \"\",\n        \"Comment\": \"\",\n        \"Created\": \"2021-09-23T23:47:57.442225064Z\",\n        \"Container\": \"8746661ca3c2f215da94e6d3f7dfdcafaff5\n                      ec0b21c9aff6af3dc379a82fbc72\",\n        \"ContainerConfig\": {\n            …\n            \"Cmd\": [\n                \"/bin/sh\",\n                \"-c\",\n                \"#(nop) \",\n                \"CMD [\\\"/hello\\\"]\"\n            ],\n            \"Image\": \"sha256:b9935d4e8431fb1a7f0989304ec86b\n                      3329a99a25f5efdc7f09f3f8c41434ca6d\",\n            …\n        },\n      …\n        \"Architecture\": \"amd64\",\n        \"Os\": \"linux\",\n        \"Size\": 13256,\n        \"VirtualSize\": 13256,\n        \"GraphDriver\": {\n            \"Data\": {\n                \"MergedDir\":\n                  \"/var/lib/docker/overlay2/c0d9b295437ab\n                   cdeb9caeec51dcbde1b11b0aeb3dd9e469f35\n                   7889defed757d9/merged\",\n                \"UpperDir\":\n                  \"/var/lib/docker/overlay2/c0d9b295437ab\n                   cdeb9caeec51dcbde1b11b0aeb3dd9e469f357\n                   889defed757d9/diff\",\n                \"WorkDir\":\n                  \"/var/lib/docker/overlay2/c0d9b295437ab\n                   cdeb9caeec51dcbde1b11b0aeb3dd9e469f357\n                   889defed757d9/work\"\n            },\n            \"Name\": \"overlay2\"\n        },\n                    …]\n```", "```go\ntotal 16\ndrwx--x---  3 root root 4096 Apr 30 18:36 ./\ndrwx--x--- 30 root root 4096 Apr 30 19:21 ../\n-rw-------  1 root root    0 Apr 30 19:21 committed\ndrwxr-xr-x  2 root root 4096 Apr 30 18:36 diff/\n-rw-r--r--  1 root root   26 Apr 30 18:36 link\n```", "```go\ndrwxr-xr-x 2 root root  4096 Apr 30 18:36 .\ndrwx--x--- 3 root root  4096 Apr 30 18:36 ..\n-rwxrwxr-x 1 root root 13256 Sep 24  2021 hello\n```", "```go\ndocker run -p 7777:7777  -v /home/user/Downloads/redis-7.0-rc3/data:/data redis --port 7777\n```", "```go\n1:C 05 May 2022 11:20:08.723 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo\n1:C 05 May 2022 11:20:08.723 # Redis version=6.2.6, bits=64, commit=00000000, modified=0, pid=1, just started\n1:C 05 May 2022 11:20:08.723 # Configuration loaded\n1:M 05 May 2022 11:20:08.724 * monotonic clock: POSIX clock_gettime\n1:M 05 May 2022 11:20:08.724 * Running mode=standalone, port=7777.\n…\n1:M 05 May 2022 11:20:08.724 * Ready to accept connections\n```", "```go\nCONTAINER ID   IMAGE      COMMAND                  CREATED         STATUS         PORTS                                                 NAMES\ne1f58f395d06   redis      \"docker-entrypoint.s…\"   5 minutes ago   Up 5 minutes   6379/tcp, 0.0.0.0:7777->7777/tcp, :::7777->7777/tcp   reverent_dhawan\n```", "```go\ndocker inspect e1f58f395d06\n```", "```go\n[[\n    {\n        ...\n        \"Mounts\": [\n            {\n                \"Type\": \"bind\",\n                \"Source\": \"/home/user/Downloads/redis-7.0-\n                           rc3/data\",\n                \"Destination\": \"/data\",\n                \"Mode\": \"\",\n                \"RW\": true,\n                \"Propagation\": \"rprivate\"\n            }\n        ],\n        \"Config\": {\n            ...\n            \"Env\": [\n                \"PATH=/usr/local/sbin:/usr/local/bin:\n                      /usr/sbin:/usr/bin:/sbin:/bin\",\n                \"GOSU_VERSION=1.14\",\n                ...\n            ],\n            ...\n        },\n        \"NetworkSettings\": {\n            ...\n            \"Ports\": {\n                \"6379/tcp\": null,\n                \"7777/tcp\": [\n                    {\n                        \"HostIp\": \"0.0.0.0\",\n                        \"HostPort\": \"7777\"\n                    },\n                    {\n                        \"HostIp\": \"::\",\n                        \"HostPort\": \"7777\"\n                    }\n                ]\n            },\n            ...\n            \"Networks\": {\n                \"bridge\": {\n                    ...\n                }\n            }\n        }\n    }\n]\n```", "```go\n# 1\\. Compile the app.\nFROM golang:1.18  as builder\nWORKDIR /app\nCOPY . .\nRUN CGO_ENABLED=0 GOOS=linux go build -a -o bin/embed\n# 2\\. Create final environment for the compiled binary.\nFROM alpine:latest\nRUN apk --update upgrade && apk --no-cache add curl ca-certificates && rm -rf /var/cache/apk/*\nRUN mkdir -p /app\n# 3\\. Copy the binary from step 1 and set it as the default command.\nCOPY --from=builder /app/bin/embed /app\nWORKDIR /app\nCMD /app/embed\n```", "```go\nFROM golang:1.18  as builder\nWORKDIR /app\nCOPY . .\nRUN CGO_ENABLED=0 GOOS=linux go build -a -o bin/embed\n```", "```go\nFROM alpine:latest\nRUN apk --update upgrade && apk --no-cache add curl ca-certificates && rm -rf /var/cache/apk/*\nRUN mkdir -p /app\n```", "```go\nCOPY --from=builder /app/bin/embed /app\nWORKDIR /app\nCMD /app/embed\n```", "```go\ndocker build  --tag chapter13 .\n```", "```go\nSending build context to Docker daemon   29.7kB\nStep 1/10 : FROM golang:1.18  as builder\n ---> 65b2f1fa535f\nStep 2/10 : WORKDIR /app\n ---> Using cache\n ---> 7ab996f8148c\n…\nStep 5/10 : FROM alpine:latest\n ---> 0ac33e5f5afa\n…\nStep 8/10 : COPY --from=builder /app/bin/embed /app\n…\nStep 10/10 : CMD /app/embed\n ---> Using cache\n ---> ade99a01b92e\nSuccessfully built ade99a01b92e\nSuccessfully tagged chapter13:latest\n```", "```go\nREPOSITORY    TAG           IMAGE ID       CREATED             SIZE\n…\nchapter13     latest        ade99a01b92e   33 minutes ago      16.9MB\n…\ngolang        1.18          65b2f1fa535f   14 hours ago        964MB\n…\nhello-world   latest        feb5d9fea6a5   7 months ago        13.3kB\n```", "```go\ndocker  run -p 3333:3333 chapter13\n```", "```go\ndocker compose -f compose.yaml up\n```", "```go\n[+] Running 7/7\n   ⠿ cache Pulled 11.6s\n   ⠿ 213ec9aee27d Already exists  0.0s\n   ⠿ c99be1b28c7f Pull complete    1.4s\n   ⠿ 8ff0bb7e55e3 Pull complete   1.8s\n   ⠿ 477c33011f3e Pull complete   4.8s\n   ⠿ 2bbc51a93257 Pull complete   4.8s\n   ⠿ 2d27eae19281 Pull complete   4.9s\n[+] Building 7.3s (15/15) FINISHED\n => [internal] load build definition from Dockerfile    0.0s\n => => transferring dockerfile: 491B                    0.0s\n => [internal] load .dockerignore                       0.0s\n => => transferring context: 2B                         0.0s\n => [internal] load metadata for docker.io/library/alpine:latest 0.0s\n => [internal] load metadata for docker.io/library/golang:1.18   0.0s\n => [builder 1/4] FROM docker.io/library/golang:1.18             0.3s\n => [stage-1 1/5] FROM docker.io/library/alpine:latest           0.1s\n => [internal] load build context                                0.2s\n => => transferring context: 18.81kB                             0.0s\n => [stage-1 2/5] RUN apk --update upgrade && apk --no-cache add curl ca-certificates && rm -rf /var/cache/apk/*   5.5s\n => [builder 2/4] WORKDIR /app  0.2s\n => [builder 3/4] COPY . .   0.1s\n => [builder 4/4] RUN CGO_ENABLED=0 GOOS=linux go build -a -o bin/embed 6.4s\n => [stage-1 3/5] RUN mkdir -p /app  1.4s\n => [stage-1 4/5] COPY --from=builder /app/bin/embed /app  0.1s\n => [stage-1 5/5] WORKDIR /app  0.0s\n => exporting to image  0.1s\n => => exporting layers  0.1s\n => => writing image sha256:84621b13c179c03eed57a23c66974659eae 4b50c97e3f8af13de99db1adf4c06  0.0s\n => => naming to docker.io/library/embed-server  0.0s\n[+] Running 3/3\n ⠿ Network embed_default     Created 0.1s\n ⠿ Container embed-cache-1   Created 0.1s\n ⠿ Container embed-server-1  Created 0.1s\nAttaching to embed-cache-1, embed-server-1\nembed-server-1  | 2022/09/10 06:24:30 Server Version : 0.0.1\nembed-cache-1   | 1:C 10 Sep 2022 06:24:30.898 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo\nembed-cache-1   | 1:C 10 Sep 2022 06:24:30.898 # Redis version=7.0.4, bits=64, commit=00000000, modified=0, pid=1, just started\n...\nembed-cache-1   | 1:M 10 Sep 2022 06:24:30.899 * Running mode=standalone, port=6379.\nembed-cache-1   | 1:M 10 Sep 2022 06:24:30.899 # Server initialized\n...\nembed-cache-1   | 1:M 10 Sep 2022 06:24:30.899 * Loading RDB produced by version 6.2.7\nembed-cache-1   | 1:M 10 Sep 2022 06:24:30.899 * RDB age 10 seconds\n...\nembed-cache-1   | 1:M 10 Sep 2022 06:24:30.899 * Ready to accept connections\n```", "```go\nversion: '3'\nservices:\n server:\n   build: .\n   ports:\n     - \"3333:3333\"\n cache:z\n   image: redis:7.0.4-alpine\n   restart: always\n   ports:\n     - '6379:6379'\n```"]