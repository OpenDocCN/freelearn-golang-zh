- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Go programming language has firmly established itself as a favorite for
    building complex and scalable system applications. Go offers a direct and practical
    approach to programming that lets programmers write correct and predictable code
    using concurrency idioms and a full-featured standard library.
  prefs: []
  type: TYPE_NORMAL
- en: What this learning path covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Module 1](part0010.html#9H5K1-9c484ed022e64a0fb0e1aebf8e05d4fd "Part 1. Module
    1")*, Learning Go programming,* is a step-by-step, practical guide full of real
    world examples to help you get started with Go in no time at all. We start off
    by understanding the fundamentals of Go, followed by a detailed description of
    the Go data types, program structures and Maps. After this, you learn how to use
    Go concurrency idioms to avoid pitfalls and create programs that are exact in
    expected behavior. Next, you will be familiarized with the tools and libraries
    that are available in Go for writing and exercising tests, benchmarking, and code
    coverage.'
  prefs: []
  type: TYPE_NORMAL
- en: Finally, you will be able to utilize some of the most important features of
    GO such as, Network Programming and OS integration to build efficient applications.
    All the concepts are explained in a crisp and concise manner and by the end of
    this module; you would be able to create highly efficient programs that you can
    deploy over cloud.
  prefs: []
  type: TYPE_NORMAL
- en: '[Module 2](part0089.html#2KS221-9c484ed022e64a0fb0e1aebf8e05d4fd "Part 2. Module
    2"), *Go Design Patterns*, will provide readers with a reference point to software
    design patterns and CSP concurrency design patterns to help them build applications
    in a more idiomatic, robust, and convenient way in Go.'
  prefs: []
  type: TYPE_NORMAL
- en: The module starts with a brief introduction to Go programming essentials and
    quickly moves on to explain the idea behind the creation of design patterns and
    how they appeared in the 90's as a common "language" between developers to solve
    common tasks in object-oriented programming languages. You will then learn how
    to apply the 23 Gang of Four (GoF) design patterns in Go and also learn about
    CSP concurrency patterns, the "killer feature" in Go that has helped Google develop
    software to maintain thousands of servers.
  prefs: []
  type: TYPE_NORMAL
- en: With all of this the module will enable you to understand and apply design patterns
    in an idiomatic way that will produce concise, readable, and maintainable software.
  prefs: []
  type: TYPE_NORMAL
- en: '[Module 3](part0152.html#4GULG1-9c484ed022e64a0fb0e1aebf8e05d4fd "Part 3. Module
    3")*, Go Programming Blueprints - Second Edition,* will show you how to leverage
    all the latest features and much more. This module shows you how to build powerful
    systems and drops you into real-world situations. You will learn to develop high-quality
    command-line tools that utilize the powerful shell capabilities and perform well
    using Go''s in-built concurrency mechanisms. Scale, performance, and high availability
    lie at the heart of our projects, and the lessons learned throughout this module
    will arm you with everything you need to build world-class solutions. You will
    get a feel for app deployment using Docker and Google App Engine. Each project
    could form the basis of a start-up, which means they are directly applicable to
    modern software markets*.*'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this learning path
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Module 1:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To follow the examples in this module, you will need Go version 1.6 or later.
    Go supports architectures including AMD64, x386, and ARM running the following
    operating systems:'
  prefs: []
  type: TYPE_NORMAL
- en: Windows XP (or later)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mac OSX 10.7 (or later)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Linux 2.6 (or later)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: FreeBSD 8 (or later)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Module 2:'
  prefs: []
  type: TYPE_NORMAL
- en: Most of the chapters in this module are written following a simple TDD approach,
    here the requirements are written first, followed by some unit tests and finally
    the code that satisfies those requirements. We will use only tools that comes
    with the standard library of Go as a way to better understand the language and
    its possibilities. This idea is key to follow the module and understanding the
    way that Go solves problems, especially in distributed systems and concurrent
    applications.
  prefs: []
  type: TYPE_NORMAL
- en: 'Module 3:'
  prefs: []
  type: TYPE_NORMAL
- en: To compile and run the code from this module, you will need a computer capable
    of running an operating system that supports the Go toolset, a list of which can
    be found at [https://golang.org/doc/install#requirements](https://golang.org/doc/install#requirements)
  prefs: []
  type: TYPE_NORMAL
- en: '[Appendix](part0227_split_000.html#6OFFM1-9c484ed022e64a0fb0e1aebf8e05d4fd
    "Appendix Appendix. Good Practices for a Stable Go Environment"), *Good Practices
    for a Stable Go Environment*, has some useful tips to install Go and set up your
    development environment, including how to work with the GOPATH environment variable.'
  prefs: []
  type: TYPE_NORMAL
- en: Who this learning path is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Beginners to Go who are comfortable in other OOP languages like Java, C# or
    Python will find this course interesting and beneficial.
  prefs: []
  type: TYPE_NORMAL
- en: Reader feedback
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome. Let us know what you think about
    this course—what you liked or disliked. Reader feedback is important for us as
    it helps us develop titles that you will really get the most out of.
  prefs: []
  type: TYPE_NORMAL
- en: To send us general feedback, simply e-mail `<[feedback@packtpub.com](mailto:feedback@packtpub.com)>`,
    and mention the course's title in the subject of your message.
  prefs: []
  type: TYPE_NORMAL
- en: If there is a topic that you have expertise in and you are interested in either
    writing or contributing to a course, see our author guide at [www.packtpub.com/authors](http://www.packtpub.com/authors).
  prefs: []
  type: TYPE_NORMAL
- en: Customer support
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you are the proud owner of a Packt course, we have a number of things
    to help you to get the most from your purchase.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the example code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can download the example code files for this course from your account at
    [http://www.packtpub.com](http://www.packtpub.com). If you purchased this course
    elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register to our website using your e-mail address and password.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Hover the mouse pointer on the **SUPPORT** tab at the top.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Code Downloads & Errata**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the course in the **Search** box.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the course for which you're looking to download the code files.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose from the drop-down menu where you purchased this course from.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Code Download**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can also download the code files by clicking on the **Code Files** button
    on the course's webpage at the Packt Publishing website. This page can be accessed
    by entering the course's name in the **Search** box. Please note that you need
    to be logged in to your Packt account.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR / 7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg / iZip / UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip / PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the course is also hosted on GitHub at [https://github.com/PacktPublishing/Go-Design-Patterns-for-Real-World-Projects](https://github.com/PacktPublishing/Go-Design-Patterns-for-Real-World-Projects).
    We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Errata
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our courses—maybe a mistake in the
    text or the code—we would be grateful if you could report this to us. By doing
    so, you can save other readers from frustration and help us improve subsequent
    versions of this course. If you find any errata, please report them by visiting
    [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your course, clicking on the **Errata Submission Form** link, and entering
    the details of your errata. Once your errata are verified, your submission will
    be accepted and the errata will be uploaded to our website or added to any list
    of existing errata under the Errata section of that title.
  prefs: []
  type: TYPE_NORMAL
- en: To view the previously submitted errata, go to [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)
    and enter the name of the course in the search field. The required information
    will appear under the **Errata** section.
  prefs: []
  type: TYPE_NORMAL
- en: Piracy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Piracy of copyrighted material on the Internet is an ongoing problem across
    all media. At Packt, we take the protection of our copyright and licenses very
    seriously. If you come across any illegal copies of our works in any form on the
    Internet, please provide us with the location address or website name immediately
    so that we can pursue a remedy.
  prefs: []
  type: TYPE_NORMAL
- en: Please contact us at `<[copyright@packtpub.com](mailto:copyright@packtpub.com)>`
    with a link to the suspected pirated material.
  prefs: []
  type: TYPE_NORMAL
- en: We appreciate your help in protecting our authors and our ability to bring you
    valuable content.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you have a problem with any aspect of this course, you can contact us at
    `<[questions@packtpub.com](mailto:questions@packtpub.com)>`, and we will do our
    best to address the problem.
  prefs: []
  type: TYPE_NORMAL
