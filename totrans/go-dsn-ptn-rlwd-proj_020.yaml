- en: Go in a nutshell
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Go 语言概述
- en: 'By design, Go has a simple syntax. Its designers wanted to create a language
    that is clear, concise, and consistent with few syntactic surprises. When reading
    Go code, keep this mantra in mind: w*hat you see is what it is*. Go shies away
    from a clever and terse coding style in favor of code that is clear and readable
    as exemplified by the following program:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 按照设计，Go 语言拥有简单的语法。其设计者希望创建一种清晰、简洁且一致的编程语言，语法上尽可能少有惊喜。在阅读 Go 语言代码时，请记住这个口诀：*所见即所得*。Go
    语言避免使用巧妙而紧凑的编码风格，而是倾向于编写清晰易读的代码，以下程序就是一个例子：
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: golang.fyi/ch01/metalloids.go
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: golang.fyi/ch01/metalloids.go
- en: 'When the code is executed, it will give the following output:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 当代码执行时，它将给出以下输出：
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: If you have never seen Go before, you may not understand some of the details
    of the syntax and idioms used in the previous program. Nevertheless, when you
    read the code, there is a good chance you will be able to follow the logic and
    form a mental model of the program's flow. That is the beauty of Go's simplicity
    and the reason why so many programmers use it. If you are completely lost, no
    need to worry, as the subsequent chapters will cover all aspects of the language
    to get you going.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你之前从未见过 Go 语言，你可能无法理解先前程序中使用的一些语法和惯用语的细节。然而，当你阅读代码时，你很可能能够跟随逻辑并形成一个关于程序流程的心理模型。这正是
    Go 语言简洁之美的体现，也是为什么那么多程序员选择使用它的原因。如果你感到完全困惑，无需担心，因为随后的章节将涵盖语言的各个方面，帮助你入门。
