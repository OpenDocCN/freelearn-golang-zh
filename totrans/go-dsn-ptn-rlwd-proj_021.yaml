- en: Functions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Go programs are composed of functions, the smallest callable code unit in the
    language. In Go, functions are typed entities that can either be named (as shown
    in the previous example) or be assigned to a variable as a value:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Another interesting feature about Go functions is their ability to return multiple
    values as a result of a call. For instance, the previous function could be re-written
    to return a value of type `error` in addition to the calculated `float64` value:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The previous code uses the multi-return capabilities of Go functions to return
    both the mass and an error value. You will encounter this idiom throughout the
    book used as a mean to properly signal errors to the caller of a function. There
    will be further discussion on multi-return value functions covered in [Chapter
    5](part0035_split_000.html#11C3M2-9c484ed022e64a0fb0e1aebf8e05d4fd "Chapter 5. Functions
    in Go"), *Functions in Go*.
  prefs: []
  type: TYPE_NORMAL
