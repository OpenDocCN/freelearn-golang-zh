- en: Strongly typed
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 强类型
- en: 'All values in Go are statically typed. However, the language offers a simple
    but expressive type system that can have the feel of a dynamic language. For instance,
    types can be safely inferred as shown in the following code snippet:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Go语言中的所有值都是静态类型的。然而，该语言提供了一个简单但表达力强的类型系统，可以给人一种动态语言的感觉。例如，类型可以像以下代码片段所示那样安全地推断：
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'As you would expect, constant grams would be assigned a numeric type, `float64`,
    to be precise, by the Go type system. This is true not only for constants, but
    any variable can use a short-hand form of declaration and assignment as shown
    in the following example:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所预期，常量克会由Go类型系统分配一个数值类型，即`float64`，以保持精确。这不仅适用于常量，任何变量都可以使用简短的声明和赋值形式，如下面的示例所示：
- en: '[PRE1]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
