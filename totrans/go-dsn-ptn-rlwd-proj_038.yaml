- en: The Go source file
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Go 源文件
- en: 'We have seen, in [Chapter 1](part0011_split_000.html#AFM61-9c484ed022e64a0fb0e1aebf8e05d4fd
    "Chapter 1. A First Step in Go"), *A First Step in Go*, some examples of Go programs.
    In this section, we will examine the Go source file. Let us consider the following
    source code file (which prints `"Hello World"` greetings in different languages):'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第1章](part0011_split_000.html#AFM61-9c484ed022e64a0fb0e1aebf8e05d4fd "第1章。Go
    的第一步")中，我们看到了一些 Go 程序的例子。在本节中，我们将检查 Go 源文件。让我们考虑以下源代码文件（该文件以不同语言打印 `"Hello World"`
    欢迎信息）：
- en: '![The Go source file](img/00004.jpeg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![Go 源文件](img/00004.jpeg)'
- en: golang.fyi/ch02/helloworld2.go
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: golang.fyi/ch02/helloworld2.go
- en: 'A typical Go source file, such as the one listed earlier, can be divided into
    three main sections, illustrated as follows:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 一个典型的 Go 源文件，如前面列出的，可以分为三个主要部分，如下所示：
- en: 'The **Package Clause**:'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**包子句**：'
- en: '[PRE0]'
  id: totrans-6
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The **Import Declaration**:'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**导入声明**：'
- en: '[PRE1]'
  id: totrans-8
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The **Source Body**:'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**源代码主体**：'
- en: '[PRE2]'
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The **package** clause indicates the name of the package this source file belongs
    to (see [Chapter 6](part0042_split_000.html#181NK2-9c484ed022e64a0fb0e1aebf8e05d4fd
    "Chapter 6. Go Packages and Programs"), Go *Packages and Programs* for a detailed
    discussion on package organization). The **import** declaration lists any external
    package that the source code wishes to use. The Go compiler strictly enforces
    package declaration usage. It is considered an error (compilation) to include
    an unused package in your source file. The last portion of the source is considered
    the body of your source file. It is where you declare variables, constants, types,
    and functions.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**包**子句表示此源文件所属的包的名称（参见[第6章](part0042_split_000.html#181NK2-9c484ed022e64a0fb0e1aebf8e05d4fd
    "第6章。Go 包和程序")，Go **包和程序**中对包组织进行了详细讨论）。**导入**声明列出了源代码希望使用的任何外部包。Go 编译器严格强制执行包声明使用。在源文件中包含未使用的包被视为错误（编译）。源代码的最后部分被认为是源代码的主体。这是你声明变量、常量、类型和函数的地方。'
- en: All Go source files must end with the `.go` suffix. In general, you can name
    a Go source file whatever you want. Unlike Java, for instance, there is no direct
    association between a Go file name and the types it declared in its content. It
    is, however, considered good practice to name your file something indicative of
    its content.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 所有 Go 源文件都必须以 `.go` 后缀结尾。通常，你可以根据需要命名 Go 源文件。例如，与 Java 不同，Go 文件名与其内容中声明的类型之间没有直接关联。然而，将文件名命名为表明其内容的名称被认为是良好的实践。
- en: Before we explore Go's syntax in greater detail, it is important to understand
    some basic structural elements of the language. While some of these elements are
    syntactically bolted into the language, others are simple idioms and conventions
    that you should be aware of to make your introduction to Go simple and enjoyable.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们更详细地探讨 Go 的语法之前，了解一些语言的基本结构元素非常重要。虽然其中一些元素在语法上是固定在语言中的，但其他元素是简单的习语和约定，你应该了解这些，以便使你对
    Go 的入门简单而愉快。
