- en: The blank identifier
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 空标识符
- en: 'The Go compiler is particularly strict about the use of declared identifiers
    for variables or packages. The basic rule is: *you declare it, you must use it*.
    If you attempt to compile code with unused identifiers such as variables or named
    packages, the compilers will not be pleased and will fail compilation.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Go 编译器对变量或包中声明的标识符的使用特别严格。基本规则是：*你声明的，你必须使用它*。如果你尝试编译包含未使用标识符（如变量或命名包）的代码，编译器将不会高兴，并且会失败编译。
- en: Go allows you to turn off this behavior using the blank identifier, represented
    by the `_` (underscore) character. Any declaration or assignment that uses the
    blank identifier is not bound to any value and is ignored at compile time. The
    blank identifier is usually used in two contexts, as listed in the following subsections.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Go 允许你使用空标识符来关闭这种行为，空标识符由下划线字符 `_` 表示。任何使用空标识符的声明或赋值都不会绑定到任何值，并且在编译时会被忽略。空标识符通常用于以下两个上下文中，具体如下所述的小节。
