- en: Initialized declaration
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 初始化声明
- en: 'As hinted earlier, Go also supports the combination of both variable declaration
    and initialization as one expression using the following format:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，Go 还支持使用以下格式将变量声明和初始化组合为一个表达式：
- en: '*var <identifier list> <type> = <value list or initializer expressions>*'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '*var <标识符列表> <类型> = <值列表或初始化表达式>*'
- en: 'This declaration format has the following properties:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 此声明格式具有以下特性：
- en: An identifier list provided on the left-hand side of the equal sign (followed
    by a type)
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 等号左侧提供的标识符列表（后跟一个类型）
- en: A matching comma-separated value list on the right-hand side
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 右侧的匹配逗号分隔值列表
- en: Assignment occurs in the respective order of identifiers and values
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 赋值按照标识符和值的相应顺序进行
- en: Initializer expressions must yield a matching list of values
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 初始化表达式必须产生一个匹配的值列表
- en: 'The following abbreviated example shows the declaration and initialization
    combination at work:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 以下简化的示例展示了声明和初始化组合的应用：
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: golang.fyi/ch02/vardec2.go
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: golang.fyi/ch02/vardec2.go
