- en: Short variable declaration
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 短变量声明
- en: 'Go can further reduce the variable declaration syntax using the *short variable
    declaration* format. In this format, the declaration loses the var keyword and
    the type specification, and uses an assignment operator `:=` (colon-equal), as
    shown:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Go语言可以通过使用*短变量声明*格式进一步简化变量声明语法。在这个格式中，声明去掉了`var`关键字和类型指定，并使用赋值运算符`:=`（冒号等于），如下所示：
- en: '*<identifier list> := <value list or initializer expressions>*'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '*<标识符列表> := <值列表或初始化表达式>*'
- en: 'This is a simple and uncluttered idiom that is commonly used when declaring
    variables in Go. The following code sample shows usage of the short variable declarations:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个简单且简洁的习语，在Go语言中声明变量时常用。以下代码示例展示了短变量声明的用法：
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: golang.fyi/ch02/vardec4.go
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: golang.fyi/ch02/vardec4.go
- en: Notice the keyword `var` and variable types have been omitted in the declaration.
    Short variable declaration uses the same mechanism to infer the type of the variable
    discussed earlier.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，在声明中省略了关键字`var`和变量类型。短变量声明使用与之前讨论的相同机制来推断变量的类型。
