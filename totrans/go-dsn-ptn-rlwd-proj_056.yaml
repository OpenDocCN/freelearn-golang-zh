- en: Constant literals
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 常量字面量
- en: Constants are values that can be represented by a text literal in the language.
    One of the most interesting properties of constants is that their literal representations
    can either be treated as typed or untyped values. Unlike variables, which are
    intrinsically bound to a type, constants can be stored as untyped values in memory
    space. Without that type constraint, numeric constant values, for instance, can
    be stored with great precision.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 常量是可以在语言中以文本字面量表示的值。常量最有趣的特性之一是它们的字面表示既可以被视为有类型的也可以被视为无类型的值。与本质上与类型绑定的变量不同，常量可以存储在内存空间中的无类型值。没有这种类型约束，例如，数值常量值可以以极高的精度存储。
- en: 'The followings are examples of valid constant literal values that can be expressed
    in Go:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是在 Go 语言中可以表示的有效常量字面量示例：
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
