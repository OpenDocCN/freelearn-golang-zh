- en: Untyped constants
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 无类型常量
- en: 'Constants are even more interesting when they are untyped. An untyped constant
    is declared as follows:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 当常量是无类型的时，它们就更有趣了。一个无类型的常量声明如下：
- en: '*const <identifier list> = <value list or initializer expression>*'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '*const <标识符列表> = <值列表或初始化表达式>*'
- en: 'As before, the keyword `const` is used to declare a list of identifiers as
    constants along with their respective bounded values. However, in this format,
    the type specification is omitted in the declaration. As an untyped entity, a
    constant is merely a blob of bytes in memory without any type precision restrictions
    imposed. The following shows some sample declarations of untyped constants:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，关键字 `const` 用于声明一系列标识符作为常量，并附带它们各自的边界值。然而，在这个格式中，声明中省略了类型指定。作为一个无类型实体，常量仅仅是内存中没有任何类型精度限制的字节块。以下是一些无类型常量的示例声明：
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
