- en: Using iota in expressions
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在表达式中使用`iota`
- en: 'When `iota` appears in an expression, the same mechanism works as expected.
    The compiler will apply the expression for each successive increasing value of
    `iota`. The following example assigns even numbers to the enumerated members of
    the constant declaration block:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 当`iota`出现在一个表达式中时，它的工作机制与预期相同。编译器将为`iota`的每个连续递增值应用该表达式。以下示例将偶数分配给常量声明块中的枚举成员：
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: golang.fyi/ch02/enum2.go
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: golang.fyi/ch02/enum2.go
- en: 'As you may expect, the previous example assigns an even value to each enumerated
    constants, starting with 0, as shown in the following output:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所预期，前面的示例将偶数值分配给每个枚举常量，从0开始，如下面的输出所示：
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
