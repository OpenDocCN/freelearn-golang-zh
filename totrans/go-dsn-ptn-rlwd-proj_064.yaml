- en: Skipping enumerated values
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'When working with enumerated constants, you may want to throw away certain
    values that should not be part of the enumeration. This can be accomplished by
    assigning iota to the blank identifier at the desired position in the enumeration.
    For instance, the following skips the values 0 and `64`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: golang.fyi/ch02/enum3.go
  prefs: []
  type: TYPE_NORMAL
- en: 'Since we skip `iota` position `0`, the first assigned constant value is at
    position `1`. This results in expression `1 << iota` resolving to `1 << 1 = 2`.
    The same is done at the sixth position, where expression `1 << iota` returns `64`.
    That value will be skipped and not assigned to any constant, as shown in the following
    output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
