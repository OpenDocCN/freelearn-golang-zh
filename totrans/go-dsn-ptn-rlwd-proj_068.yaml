- en: Go assignment operators
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Go 中的赋值运算符
- en: '| **Operator** | **Description** |'
  id: totrans-1
  prefs: []
  type: TYPE_TB
  zh: '| **运算符** | **描述** |'
- en: '| `=` | The simple assignment works as expected. It updates the left operand
    with the value of the right. |'
  id: totrans-2
  prefs: []
  type: TYPE_TB
  zh: '| `=` | 简单赋值运算符按预期工作。它将右侧操作数的值更新到左侧操作数。|'
- en: '| `:=` | The colon-equal operator declares a new variable, the left-side operator,
    and assigns it the value (and type) of the operand on the right. |'
  id: totrans-3
  prefs: []
  type: TYPE_TB
  zh: '| `:=` | 冒号等于运算符用于声明一个新变量（左侧操作符），并将其赋值为右侧操作数的值（及其类型）。|'
- en: '| `+=`, `-=`, `*=`, `/=`, `%=` | Apply the indicated operation using the left
    and the right operator and store the result in the left operator. For instance,
    `a *= 8` implies `a = a * 8`. |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '| `+=`, `-=`, `*=`, `/=`, `%=` | 使用左右操作符执行指定的运算，并将结果存储在左侧操作数中。例如，`a *= 8` 等同于
    `a = a * 8`。|'
