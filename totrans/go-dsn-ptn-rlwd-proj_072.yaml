- en: Operator precedence
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 运算符优先级
- en: 'Since Go has fewer operators than are found in its counterparts such as C or
    Java, its operator precedence rules are far simpler. The following table lists
    Go''s operator precedence echelon, starting with the highest:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Go 的运算符比其对应语言如 C 或 Java 少，其运算符优先级规则要简单得多。以下表格列出了 Go 的运算符优先级等级，从最高级开始：
- en: '| **Operation** | **Precedence** |'
  id: totrans-2
  prefs: []
  type: TYPE_TB
  zh: '| **操作** | **优先级** |'
- en: '| Multiplicative | `*`, `/`, `%`, `<<`, `>>`, `&`, `&^` |'
  id: totrans-3
  prefs: []
  type: TYPE_TB
  zh: '| 乘法运算 | `*`, `/`, `%`, `<<`, `>>`, `&`, `&^` |'
- en: '| Additive | `+`, `-`, `&#124;`, `^` |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '| 加法运算 | `+`, `-`, `&#124;`, `^` |'
- en: '| Comparative | `==`, `!=`, `<`, `<=`, `>`, `>=` |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '| 比较运算 | `==`, `!=`, `<`, `<=`, `>`, `>=` |'
- en: '| Logical AND | `&&` |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| 逻辑与 | `&&` |'
- en: '| Logical OR | `&#124;&#124;` |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| 逻辑或 | `&#124;&#124;` |'
