- en: The if statement initialization
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`if`语句的初始化'
- en: 'The `if` statement supports a composite syntax where the tested expression
    is preceded by an initialization statement. At runtime, the initialization is
    executed before the test expression is evaluated, as illustrated in this code
    snippet (from the program listed earlier):'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '`if`语句支持复合语法，其中测试表达式前面跟着一个初始化语句。在运行时，初始化语句会在测试表达式评估之前执行，如下面的代码片段所示（来自前面列出的程序）：'
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The initialization statement follows normal variable declaration and initialization
    rules. The scope of the initialized variables is bound to the `if` statement block,
    beyond which they become unreachable. This is a commonly used idiom in Go and
    is supported in other flow control constructs covered in this chapter.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 初始化语句遵循正常的变量声明和初始化规则。初始化变量的作用域被绑定到`if`语句块，超出此范围则变得不可访问。这在Go语言中是一个常用的惯用语，并且在本章中涵盖的其他流程控制结构中也得到了支持。
