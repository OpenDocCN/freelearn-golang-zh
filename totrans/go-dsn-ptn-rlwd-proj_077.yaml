- en: Switch statements
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Switch 语句
- en: 'Go also supports a `switch` statement similar to that found in other languages
    such as, C or Java. The `switch` statement in Go achieves multi-way branching
    by evaluating values or expressions from `case` clauses, as shown in the following,
    abbreviated, source code:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Go 还支持类似于在其他语言（如 C 或 Java）中找到的 `switch` 语句。Go 中的 `switch` 语句通过评估 `case` 子句中的值或表达式来实现多路分支，如下所示，这是缩写的源代码：
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: golang.fyi/ch03/switchstmt.go
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: golang.fyi/ch03/switchstmt.go
- en: 'The `switch` statement in Go has some interesting properties and rules that
    make it easy to use and reason about:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Go 中的 `switch` 语句有一些有趣的特性和规则，这使得它易于使用和推理：
- en: 'Semantically, Go''s `switch` statement can be used in two contexts:'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从语义上讲，Go 的 `switch` 语句可以在两种上下文中使用：
- en: An expression`switch` statement
  id: totrans-6
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表达式 `switch` 语句
- en: A type`switch` statement
  id: totrans-7
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类型 `switch` 语句
- en: The `break` statement can be used to escape out of a switch code block early.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以使用 `break` 语句提前退出 `switch` 代码块。
- en: The `switch` statement can include a default case when no other case expressions
    evaluate to a match. There can only be one default case and it may be placed anywhere
    within the switch block.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当没有其他情况表达式评估为匹配时，`switch` 语句可以包含一个默认情况。默认情况只能有一个，并且它可以放在 `switch` 块内的任何位置。
