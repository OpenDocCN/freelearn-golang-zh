["```go\nimport ( \n  \"fmt\" \n  \"strings\" \n) \ntype Curr struct { \n  Currency string \n  Name     string \n  Country  string \n  Number   int \n} \n\nvar currencies = []Curr{ \n  Curr{\"DZD\", \"Algerian Dinar\", \"Algeria\", 12}, \n  Curr{\"AUD\", \"Australian Dollar\", \"Australia\", 36}, \n  Curr{\"EUR\", \"Euro\", \"Belgium\", 978}, \n  Curr{\"CLP\", \"Chilean Peso\", \"Chile\", 152}, \n  ... \n} \n\nfunc find(name string) { \n  for i := 0; i < 10; i++ { \n    c := currencies[i] \n    switch { \n    case strings.Contains(c.Currency, name), \n      strings.Contains(c.Name, name), \n      strings.Contains(c.Country, name): \n      fmt.Println(\"Found\", c) \n    } \n  } \n} \n\n```", "```go\nfunc find(name string) { \n  for I := 0; i < 10; i++ { \n    c := currencies[i] \n    if strings.Contains(c.Currency, name) || \n      strings.Contains(c.Name, name) || \n      strings.Contains(c.Country, name){ \n      fmt.Println\"\"Foun\"\", c) \n    } \n  } \n} \n\n```"]