["```go\nimport ( \n  \"fmt\" \n) \n\nvar words = [][]string{  \n  {\"break\", \"lake\", \"go\", \"right\", \"strong\", \"kite\", \"hello\"},  \n  {\"fix\", \"river\", \"stop\", \"left\", \"weak\", \"flight\", \"bye\"},  \n  {\"fix\", \"lake\", \"slow\", \"middle\", \"sturdy\", \"high\", \"hello\"},  \n}  \n\nfunc search(w string) {  \nDoSearch:  \n  for i := 0; i < len(words); i++ {  \n    for k := 0; k < len(words[i]); k++ {  \n      if words[i][k] == w {  \n        fmt.Println(\"Found\", w)  \n        break DoSearch  \n      }  \n    }  \n  }  \n}  \n\nbreak DoSearch statement will essentially exit out of the innermost for loop and cause the execution flow to continue after the outermost labeled for statement, which in this example, will simply end the program.\n```"]