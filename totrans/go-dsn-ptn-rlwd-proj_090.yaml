- en: The break statement
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`break`语句'
- en: 'As in other C-like languages, the Go `break` statement terminates and exits
    the innermost enclosing `switch` or `for` statement code block and transfers control
    to another part of the running program. The `break` statement can accept an optional
    label identifier specifying a labeled location, in the enclosing function, where
    the flow of the program will resume. Here are some attributes of the label for
    the `break` statement to remember:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 就像在其他C-like语言中一样，Go的`break`语句会终止并退出最内层的包含的`switch`或`for`语句代码块，并将控制权转移到运行程序的另一部分。`break`语句可以接受一个可选的标签标识符，指定程序流程将从中恢复的标签位置。以下是关于`break`语句标签的一些属性，需要记住：
- en: The label must be declared within the same running function where the `break`
    statement is located
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标签必须在`break`语句所在的同一运行函数内声明
- en: A declared label must be followed immediately by the enclosing control statement
    (a `for` loop or `switch` statement) where the break is nested
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 声明的标签必须立即跟随包含的控制语句（一个`for`循环或`switch`语句），其中`break`是嵌套的
- en: If a `break` statement is followed by a label, control is transferred, not to
    the location where the label is, but rather to the statement immediately following
    the labeled block. If a label is not provided, the `break` statement abruptly
    exits and transfers control to the next statement following its enclosing `for`
    statement (or `switch` statement) block.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`break`语句后面跟着一个标签，控制权将转移到标签所在的位置，而不是标签本身，而是转移到标签块后面的语句。如果没有提供标签，`break`语句会突然退出，并将控制权转移到其包含的`for`语句（或`switch`语句）块后面的下一个语句。
- en: 'The following code is an overly exaggerated linear search that illustrates
    the working of the `break` statement. It does a word search and exits once the
    first instance of the word is found in the slice:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码是一个过度夸张的线性搜索，它说明了`break`语句的工作原理。它执行单词搜索，并在找到切片中单词的第一个实例后退出：
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
