- en: The goto statement
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`goto` 语句'
- en: 'The `goto` statement is more flexible, in that it allows flow control to be
    transferred to an arbitrary location, inside a function, where a target label
    is defined. The `goto` statement causes an abrupt transfer of control to the label
    referenced by the `goto` statement. The following shows Go''s `goto` statement
    in action in a simple, but functional example:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '`goto` 语句更灵活，因为它允许将流程控制转移到函数内定义的目标标签的任意位置。`goto` 语句会导致控制突然转移到由 `goto` 语句引用的标签。以下是一个简单但功能性的示例，展示了
    Go 的 `goto` 语句的实际应用：'
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: golang.fyi/ch03/gotostmt.go
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: golang.fyi/ch03/gotostmt.go
- en: 'The code uses the `goto` statement to jump to different sections of the `main()`
    function. Notice that the `goto` statement can target labels defined anywhere
    in the code. The superfluous usage of the `Start:` label is left in the code for
    completeness and is not necessary in this context (since continue, without the
    label, would have the same effect). The following provides some guidance when
    using the `goto` statement:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 代码使用 `goto` 语句跳转到 `main()` 函数的不同部分。注意，`goto` 语句可以指向代码中任何地方定义的标签。代码中多余的 `Start:`
    标签保留是为了完整性，在此上下文中并非必需（因为不带标签的 `continue` 会有相同的效果）。以下是在使用 `goto` 语句时的一些指导：
- en: Avoid using the `goto` statement unless the logic being implemented can only
    be achieved using `goto` branching. This is because overuse of the `goto` statement
    can make code harder to reason about and debug.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 除非实现逻辑只能通过 `goto` 分支来完成，否则请避免使用 `goto` 语句。这是因为过度使用 `goto` 语句会使代码更难推理和调试。
- en: Place `goto` statements and their targeted label within the same enclosing code
    block when possible.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当可能时，将 `goto` 语句及其目标标签放置在同一个包含的代码块内。
- en: Avoid placing labels where a `goto` statement will cause the flow to skip new
    variable declarations or cause them to be re-declared.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 避免将标签放置在 `goto` 语句会导致跳过新变量声明或重新声明变量的地方。
- en: Go will let you jump from inner to outer enclosing code blocks.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Go 允许您从内部跳转到外部的包含代码块。
- en: It is a compilation error if you try to jump to a peer or to an enclosing code
    block.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果尝试跳转到同级或包含的代码块，将会出现编译错误。
