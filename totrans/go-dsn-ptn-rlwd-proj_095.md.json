["```go\npackage main \nimport ( \n   \"fmt\" \n   \"unsafe\" \n) \n\nvar ( \n   a uint8   = 72 \n   b int32   = 240 \n   c uint64  = 1234564321 \n   d float32 = 12432345.232 \n   e int64   = -1233453443434 \n   f float64 = -1.43555622362467 \n   g int16   = 32000 \n   h [5]rune = [5]rune{'O', 'n', 'T', 'o', 'p'} \n) \n\nfunc main() { \n   fmt.Printf(\"a = %v [%T, %d bits]\\n\", a, a, unsafe.Sizeof(a)*8) \n   fmt.Printf(\"b = %v [%T, %d bits]\\n\", b, b, unsafe.Sizeof(b)*8) \n   fmt.Printf(\"c = %v [%T, %d bits]\\n\", c, c, unsafe.Sizeof(c)*8) \n   fmt.Printf(\"d = %v [%T, %d bits]\\n\", d, d, unsafe.Sizeof(d)*8) \n   fmt.Printf(\"e = %v [%T, %d bits]\\n\", e, e, unsafe.Sizeof(e)*8) \n   fmt.Printf(\"f = %v [%T, %d bits]\\n\", f, f, unsafe.Sizeof(f)*8) \n   fmt.Printf(\"g = %v [%T, %d bits]\\n\", g, g, unsafe.Sizeof(g)*8) \n   fmt.Printf(\"h = %v [%T, %d bits]\\n\", h, h, unsafe.Sizeof(h)*8) \n} \n\n```", "```go\n$>go run alloc.go\na = 72 [uint8, 8 bits]\nb = 240 [int32, 32 bits]\nc = 1234564321 [uint64, 64 bits]\nd = 1.2432345e+07 [float32, 32 bits]\ne = -1233453443434 [int64, 64 bits]\nf = -1.43555622362467 [float64, 64 bits]\ng = 32000 [int16, 16 bits]\nh = [79 110 84 111 112] [[5]int32, 160 bits]\n\n```"]