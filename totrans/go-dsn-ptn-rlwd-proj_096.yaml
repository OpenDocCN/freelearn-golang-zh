- en: Numeric types
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数值类型
- en: Go's numeric types include support for integral and decimal values with a variety
    of sizes ranging from 8 to 64 bits. Each numeric type has its own layout in memory
    and is considered unique by the type system. As a way of enforcing this, and to
    avoid any sort of confusion when porting Go on different platforms, the name of
    a numeric type reflects its size requirement. For instance, type `*int16*` indicates
    an integer type that uses 16 bits for internal storage*.* This means that numberic
    values must be explicitly be converted when crossing type boundaries in assignments,
    expressions, and operations.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Go 的数值类型包括对从 8 位到 64 位各种大小的整数和小数值的支持。每种数值类型在内存中都有自己的布局，并且由类型系统视为独特。为了强制执行这一点，并避免在将
    Go 移植到不同平台时产生任何混淆，数值类型的名称反映了其大小要求。例如，类型 `*int16*` 表示一个使用 16 位进行内部存储的整数类型*.* 这意味着在赋值、表达式和操作跨越类型边界时，数值值必须显式转换。
- en: The following program is not all that functional, since all values are assigned
    to the blank identifier. However, it illustrates all of the numeric data types
    supported in Go.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 以下程序并不完全具有功能性，因为所有值都分配给了空标识符。然而，它展示了 Go 支持的所有数值数据类型。
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: golang.fyi/ch04/nums.go
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: golang.fyi/ch04/nums.go
