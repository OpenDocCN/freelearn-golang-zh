- en: Unsigned integer types
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following table lists all available types that can represent unsigned integers
    and their storage requirements in Go:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Type** | **Size** | **Description** |'
  prefs: []
  type: TYPE_TB
- en: '| `uint8` | Unsigned 8-bit | Range 0 - 255 |'
  prefs: []
  type: TYPE_TB
- en: '| `uint16` | Unsigned 16-bit | Range 0 - 65535 |'
  prefs: []
  type: TYPE_TB
- en: '| `uint32` | Unsigned 32-bit | Range 0 - 4294967295 |'
  prefs: []
  type: TYPE_TB
- en: '| `uint64` | Unsigned 64-bit | Range 0 - 18446744073709551615 |'
  prefs: []
  type: TYPE_TB
- en: '| `uint` | Implementation specific | A pre-declared type designed to represent
    either the 32 or 64-bit integers. As of version 1.x of Go, `uint` represents a
    32-bit unsigned integer. |'
  prefs: []
  type: TYPE_TB
- en: '| `byte` | Unsigned 8-bit | Alias for the `unit8` type. |'
  prefs: []
  type: TYPE_TB
- en: '| `uintptr` | Unsigned | An unsigned integer type designed to store pointers
    (memory addresses) for the underlying machine architecture. |'
  prefs: []
  type: TYPE_TB
