- en: Rune and string types
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Rune 和字符串类型
- en: In order to start our discussion about the `rune` and `string` types, some background
    context is in order. Go can treat character and string literal constants in its
    source code as Unicode. It is a global standard whose goal is to catalog symbols
    for known writing systems by assigning a numerical value (known as code point)
    to each character.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 为了开始我们关于 `rune` 和 `string` 类型的讨论，我们需要一些背景信息。Go 语言可以将源代码中的字符和字符串字面量视为 Unicode。这是一个全球标准，其目标是通过对每个字符分配一个数值（称为代码点）来对已知书写系统的符号进行编目。
- en: By default, Go inherently supports UTF-8 which is an efficient way of encoding
    and storing Unicode numerical values. That is all the background needed to continue
    with this subject. No further detail will be discussed as it is beyond the scope
    of this book.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Go 语言天生支持 UTF-8 编码，这是一种高效编码和存储 Unicode 数值的方式。这就是继续讨论这个主题所需的所有背景知识。本书的范围不涉及此细节，因此不会进行进一步讨论。
