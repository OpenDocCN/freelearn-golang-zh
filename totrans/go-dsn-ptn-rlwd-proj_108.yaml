- en: The pointer type
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Similar to C/C++, Go uses the `*` operator to designate a type as a pointer.
    The following snippet shows several pointers with different underlying types:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: golang.fyi/ch04/pointers.go
  prefs: []
  type: TYPE_NORMAL
- en: Given a variable of type `T`, Go uses expression `*T` as its pointer type. The
    type system considers `T` and `*T` as distinct and are not fungible. The zero
    value of a pointer, when it is not pointing to anything, is the address 0, represented
    by the literal *constant* nil.
  prefs: []
  type: TYPE_NORMAL
