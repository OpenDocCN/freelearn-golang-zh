- en: The new() function
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: new() 函数
- en: 'The built-in function *new(<type>)* can also be used to initialize a pointer
    value. It first allocates the appropriate memory for a zero-value of the specified
    type. The function then returns the address for the newly created value. The following
    program uses the `new()` function to initialize variables `intptr` and `p`:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 内置函数 *new(<类型>)* 也可以用来初始化指针值。它首先为指定类型的零值分配适当的内存。然后函数返回新创建值的地址。以下程序使用 `new()`
    函数初始化变量 `intptr` 和 `p`：
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: golang.fyi/ch04/newptr.go
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: golang.fyi/ch04/newptr.go
- en: Variable `intptr` is initialized as `*int` and `p` as `*struct{first, last string}`.
    Once initialized, both values are updated accordingly later in the code. You can
    use the `new()` function to initialize pointer variables with zero values when
    the actual values are not available at the time of initialization.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 变量 `intptr` 被初始化为 `*int`，而 `p` 被初始化为 `*struct{first, last string}`。一旦初始化，这两个值在代码的后续部分将相应更新。当实际值在初始化时不可用时，你可以使用
    `new()` 函数来初始化具有零值的指针变量。
