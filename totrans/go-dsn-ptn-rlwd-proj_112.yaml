- en: Type declaration
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 类型声明
- en: 'In Go, it is possible to bind a type to an identifier to create a new named
    type that can be referenced and used wherever the type is needed. Declaring a
    type takes the general format as follows:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Go 语言中，可以将一个类型绑定到一个标识符上，以创建一个新的命名类型，该类型可以在需要该类型的地方被引用和使用。声明一个类型的通用格式如下：
- en: '*type <name identifier> <underlying type name>*'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '*type <名称标识符> <基础类型名称>*'
- en: 'The type declaration starts with the keyword `type` followed by a *name identifier *and
    the name of an existing *underlying type*. The underlying type can be a built-in
    named type such as one of the numeric types, a Boolean, or a string type as shown
    in the following snippet of type declarations:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 类型声明以关键字 `type` 开头，后跟一个 *名称标识符* 和一个现有 *基础类型* 的名称。基础类型可以是如下的内置命名类型之一：数值类型、布尔值或字符串类型，如下面的类型声明片段所示：
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: A type declaration can also use a composite *type literal* as its underlying
    type. Composite types include array, slice, map, and struct. This section focuses
    on non-composite types. For further details on composite types, refer to [Chapter
    7](part0051_split_000.html#1GKCM2-9c484ed022e64a0fb0e1aebf8e05d4fd "Chapter 7. Composite
    Types"), *Composite Types*.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 类型声明还可以使用复合 *类型字面量* 作为其基础类型。复合类型包括数组、切片、映射和结构体。本节重点介绍非复合类型。有关复合类型的更多详细信息，请参阅[第7章](part0051_split_000.html#1GKCM2-9c484ed022e64a0fb0e1aebf8e05d4fd
    "第7章。复合类型")，*复合类型*。
- en: The following sample illustrates how named types work in their most basic forms.
    The code in the example converts temperature values. Each temperature unit is
    represented by a declared type including `fahrenheit`, `celsius`, and `kelvin`.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例说明了命名类型在其最基本形式下的工作方式。示例中的代码将温度值进行转换。每个温度单位都由一个声明的类型表示，包括 `fahrenheit`、`celsius`
    和 `kelvin`。
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
