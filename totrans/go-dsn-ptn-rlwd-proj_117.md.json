["```go\npackage main import (\n  \"fmt\"\n  \"math\"\n)func printPi() {\n  fmt.Printf(\"printPi()\n    %v\\n\", math.Pi)\n} func main() {\n  printPi() }               (\"fmt\" \"math\" ) func\nprintPi() {\n  fmt.Printf(\"printPi()\n    %v\\n\", math.Pi)\n}\nfunc main() { printPi() }\n```", "```go\npackage main   \nimport \"fmt\"   \n\nfunc avogadro() float64 {   \n   return 6.02214129e23   \n}   \n\nfunc main() {   \n   fmt.Printf(\"avogadro()\n   = %e 1/mol\\n\",   \n   avogadro())   \n}   \n\n```", "```go\npackage main   \nimport \"fmt\"    \nfunc fib(n int) {   \n  fmt.Printf(\"fib(%d):\n    [\", n)\n  var p0, p1 uint64 = 0,\n    1   \n  fmt.Printf(\"%d %d \",\n    p0, p1)   \n  for i := 2; i <= n; i++\n  {   \n    p0, p1 = p1, p0+p1\n    fmt.Printf(\"%d \",p1)\n  }   \n  fmt.Println(\"]\")   \n}   \nfunc main() {   \n  fib(41)   \n}\n```", "```go\npackage main   \nimport (   \n  \"fmt\"   \n  \"math\"   \n)    \nfunc isPrime(n int) bool {   \n  lim :=\n  int(math.Sqrt\n  (float64(n)))\n  for p := 2; p <= lim;\n  p++ {\n    if (n % p) == 0 {   \n      return false   \n    }  }   \n  return true   \n}   \nfunc main() {   \n  prime := 37\n  fmt.Printf\n  (\"isPrime(%d)  =\n  %v\\n\", prime,\n  isPrime(prime))\n}\n```"]