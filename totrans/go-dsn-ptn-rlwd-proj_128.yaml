- en: Signaling errors
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 信号错误
- en: To better understand what has been described in the previous paragraph, let
    us start with an example. The following source code implements an anagram program,
    as described in Column 2 from Jon Bentley's popular *Programming Pearls* book
    (second edition). The code reads a dictionary file (`dict.txt`) and groups all
    words with the same anagram. If the code does not quite make sense, please see
    [golang.fyi/ch05/anagram1.go](http://learning.golang.fyi/ch05/anagram1.go) for
    an annotated explanation of how each part of the program works.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解前一段所描述的内容，让我们从一个例子开始。以下源代码实现了一个字母组合程序，正如在 Jon Bentley 流行书籍 *编程珠玑*（第二版）的专栏
    2 中所描述。该代码读取字典文件（`dict.txt`）并将所有具有相同字母组合的单词分组。如果代码不太容易理解，请参阅[golang.fyi/ch05/anagram1.go](http://learning.golang.fyi/ch05/anagram1.go)以获取程序每个部分如何工作的注释说明。
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: when the expected filename (`fname`) is empty
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当预期的文件名（`fname`）为空时
- en: when the call to `os.Open()` fails (for example, permission error, or otherwise)
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当调用 `os.Open()` 失败时（例如，权限错误或其他情况）
- en: In the first case, when a filename is not provided, the code returns an error
    using `errors.New()` to create a value of type `error` to exit the function. In
    the second case, the `os.Open` function returns a pointer representing the file
    and an error assigned to the `file` and `err` variables respectively. If `err`
    is not `nil` (meaning an error was generated), the execution of the `load` function
    is halted prematurely and the value of `err` is returned to be handled by the
    calling function further up the call stack.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一种情况下，当没有提供文件名时，代码使用 `errors.New()` 返回一个错误值，以创建类型为 `error` 的值来退出函数。在第二种情况下，`os.Open`
    函数返回一个表示文件的指针和一个分配给 `file` 和 `err` 变量的错误。如果 `err` 不为 `nil`（表示生成了错误），则 `load` 函数的执行会提前终止，并将
    `err` 的值返回给调用栈中更高层的调用函数来处理。
- en: Note
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: When returning an error for a function with multiple result parameters, it is
    customary to return the zero-value for the other (non-error type) parameters.
    In the example, a value of `nil` is returned for the result of type `[]string`.
    While not necessary, it simplifies error handling and avoids any confusion for
    function callers.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个函数有多个结果参数时返回错误，通常会将其他（非错误类型）参数返回为零值。在示例中，对于类型为 `[]string` 的结果返回 `nil` 值。虽然这不是必需的，但它简化了错误处理，并避免了调用函数的任何混淆。
