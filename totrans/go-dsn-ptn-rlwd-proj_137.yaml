- en: Chapter 6. Go Packages and Programs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 5](part0035_split_000.html#11C3M2-9c484ed022e64a0fb0e1aebf8e05d4fd
    "Chapter 5. Functions in Go"), *Functions in Go* covered functions, the elementary
    level of abstraction for code organization that makes code addressable and reusable.
    This chapter continues up the ladder of abstraction with a discussion centered
    around Go packages. As will be covered in detail here, a package is a logical
    grouping of language elements stored in source code files that can be shared and
    reused, as covered in the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: The Go package
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating packages
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Building packages
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Package visibility
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Importing packages
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Package initialization
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating programs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remote packages
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
