- en: Creating a workspace
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建工作空间
- en: 'Creating a workspace is as simple as setting an operating system environment
    named `GOPATH` and assigning to it the root path of the location of the workspace
    directory. On a Linux machine, for instance, where the root directory for the
    workspace is `/home/username/Go`, the workspace would be set as:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 创建工作空间就像设置一个名为 `GOPATH` 的操作系统环境变量并将其分配给工作空间目录的根路径一样简单。例如，在一个Linux机器上，如果工作空间的根目录是
    `/home/username/Go`，那么工作空间将被设置为：
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When setting up the `GOPATH` environment variable, it is possible to specify
    multiple locations where packages are stored. Each directory is separated by an
    OS-dependent path delimiter character (in other words, colon for Linux/Unix, semi-colon
    for Windows) as shown below:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在设置 `GOPATH` 环境变量时，可以指定存储包的多个位置。每个目录由操作系统依赖的路径分隔符字符（换句话说，Linux/Unix为冒号，Windows为分号）分隔，如下所示：
- en: '[PRE1]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The Go tools will search all listed locations in the `GOPATH` when resolving
    package names. The Go compiler will, however, only store compiled artifacts, such
    as object and binary files, in the first directory location assigned to `GOPATH`.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 当解析包名称时，Go 工具将搜索 `GOPATH` 中列出的所有位置。然而，Go 编译器将仅在分配给 `GOPATH` 的第一个目录位置存储编译后的工件，例如对象和二进制文件。
- en: Note
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'The ability to configure your workspace by simply setting an OS environmental
    variable has tremendous advantages. It gives developers the ability to dynamically
    set the workspace at compile time to meet certain workflow requirements. For instance,
    a developer may want to test an unverified branch of code prior to merging it.
    He or she may want to set up a temporary workspace to build that code as follows
    (Linux): `$> GOPATH=/temporary/go/workspace/path go build`'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 通过简单地设置操作系统环境变量来配置工作空间具有巨大的优势。它为开发者提供了在编译时动态设置工作空间以满足特定工作流程要求的能力。例如，开发者可能希望在合并之前测试一个未经验证的代码分支。他或她可能需要设置一个临时工作空间来构建该代码，如下所示（Linux）：`$>
    GOPATH=/temporary/go/workspace/path go build`
