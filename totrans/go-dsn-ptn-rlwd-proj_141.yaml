- en: Creating a workspace
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Creating a workspace is as simple as setting an operating system environment
    named `GOPATH` and assigning to it the root path of the location of the workspace
    directory. On a Linux machine, for instance, where the root directory for the
    workspace is `/home/username/Go`, the workspace would be set as:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When setting up the `GOPATH` environment variable, it is possible to specify
    multiple locations where packages are stored. Each directory is separated by an
    OS-dependent path delimiter character (in other words, colon for Linux/Unix, semi-colon
    for Windows) as shown below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The Go tools will search all listed locations in the `GOPATH` when resolving
    package names. The Go compiler will, however, only store compiled artifacts, such
    as object and binary files, in the first directory location assigned to `GOPATH`.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The ability to configure your workspace by simply setting an OS environmental
    variable has tremendous advantages. It gives developers the ability to dynamically
    set the workspace at compile time to meet certain workflow requirements. For instance,
    a developer may want to test an unverified branch of code prior to merging it.
    He or she may want to set up a temporary workspace to build that code as follows
    (Linux): `$> GOPATH=/temporary/go/workspace/path go build`'
  prefs: []
  type: TYPE_NORMAL
