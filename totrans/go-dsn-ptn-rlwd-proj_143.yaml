- en: Creating packages
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建包
- en: Until now, the chapter has covered the rudimentary concepts of the Go package;
    now it is time to dive deeper and look at the creation of Go code contained in
    packages. One of the main purposes of a Go package is to abstract out and aggregate
    common logic into sharable code units. Earlier in the chapter, it was mentioned
    that a group of Go source files in a directory is considered to be a package.
    While this is technically true, there is more to the concept of a Go package than
    just shoving a bunch of files in a directory.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，本章已经介绍了Go包的基本概念；现在，是时候深入探讨Go包中包含的Go代码的创建。Go包的主要目的之一是将常见的逻辑抽象出来并聚合到可共享的代码单元中。在本章前面提到，一个目录中的一组Go源文件被视为一个包。虽然这在技术上是真的，但Go包的概念不仅仅是把一堆文件堆放在一个目录里。
- en: 'To help illustrate the creation of our first packages, we will enlist the use
    of example source code found in [github.com/vladimirvivien/learning-go/ch06](https://github.com/vladimirvivien/learning-go/ch06).
    The code in that directory defines a set of functions to help calculate electrical
    values using *Ohm''s Law*. The following shows the layout of the directories that
    make up the packages for the example (assuming they are saved in some workspace
    directory `$GOPATH/src`):'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助说明创建我们第一个包的过程，我们将使用在[github.com/vladimirvivien/learning-go/ch06](https://github.com/vladimirvivien/learning-go/ch06)中找到的示例源代码。该目录中的代码定义了一组函数，用于帮助使用*欧姆定律*计算电学值。以下显示了组成示例包的目录布局（假设它们保存在某个工作区目录`$GOPATH/src`中）：
- en: '|'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '|'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Package layout for Ohm's Law example
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 欧姆定律示例的包布局
- en: 'Each directory, in the previous tree, contains one or more Go source code files
    that define and implement the functions, and other source code elements, that
    will be arranged into packages and be made reusable. The following table summarizes
    the import paths and package information extracted from preceding workspace layout:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的树状结构中，每个目录包含一个或多个Go源代码文件，这些文件定义并实现了函数以及其他将被组织成包并使其可重用的源代码元素。以下表格总结了从先前的工作区布局中提取的导入路径和包信息：
- en: '| **Import Path** | **Package** |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| **导入路径** | **包** |'
- en: '| "github.com/vladimirvivien/learning-go/ch06/**current**" | `current` |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| "github.com/vladimirvivien/learning-go/ch06/**current**" | `current` |'
- en: '| "github.com/vladimirvivien/learning-go/ch06/**power**" | `power` |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| "github.com/vladimirvivien/learning-go/ch06/**power**" | `power` |'
- en: '| "github.com/vladimirvivien/learning-go/ch06/**power/ir**" | `ir` |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| "github.com/vladimirvivien/learning-go/ch06/**power/ir**" | `ir` |'
- en: '| "github.com/vladimirvivien/learning-go/ch06/**power/vr**" | `vr` |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| "github.com/vladimirvivien/learning-go/ch06/**power/vr**" | `vr` |'
- en: '| "github.com/vladimirvivien/learning-go/ch06/**resistor**" | `resistor` |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| "github.com/vladimirvivien/learning-go/ch06/**resistor**" | `resistor` |'
- en: '| "github.com/vladimirvivien/learning-go/ch06/**volt**" | `volt` |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| "github.com/vladimirvivien/learning-go/ch06/**volt**" | `volt` |'
- en: While there are no naming requirements, it is sensible to name package directories
    to reflect their respective purposes. From the previous table, each package in
    the example is named to represent an electrical concept, such as current, power,
    resistor, and volt. The *Naming packages* section will go into further detail
    about package naming conventions.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管没有命名要求，但给包目录命名以反映它们各自的目的还是很有道理的。从之前的表中可以看出，示例中的每个包都被命名为代表一个电学概念，例如电流、功率、电阻和电压。*包命名*部分将进一步详细介绍包命名的约定。
