- en: Importing package
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'At this point, you should have a good understanding of what a package is, what
    it does, and how to create one. Now, let us see how to use a package to import
    and reuse its members. As you will find in several other languages, the keyword
    `import` is used to import source code elements from an external package. It allows
    the importing source to access exported elements found in the imported package
    (see the *Package scope and visibility* section earlier in the chapter). The general
    format for the import clause is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '*import [package name identifier] "<import path>"*'
  prefs: []
  type: TYPE_NORMAL
- en: 'Notice that the import path must be enclosed within double quotes. The `import`
    statement also supports an optional package identifier that can be used to explicitly
    name the imported package (discussed later). The import statement can also be
    written as an import block, as shown in the following format. This is useful where
    there are two or more import packages listed:'
  prefs: []
  type: TYPE_NORMAL
- en: '*import (*'
  prefs: []
  type: TYPE_NORMAL
- en: '*[package name identifier] "<import path>"*'
  prefs: []
  type: TYPE_NORMAL
- en: '*)*'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following source code snippet shows the import declaration block in the
    Ohm''s Law examples introduced earlier:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: golang.fyi/ch06/main.go
  prefs: []
  type: TYPE_NORMAL
- en: 'Often the name identifiers of imported packages are omitted, as done above.
    Go then applies the name of the last directory of the import path as the name
    identifier for the imported package, as shown, for some packages, in the following
    table:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Import Path** | **Package name** |'
  prefs: []
  type: TYPE_TB
- en: '| `flag` | `flag` |'
  prefs: []
  type: TYPE_TB
- en: '| `github.com/vladimirvivien/learning-go/ch06/current` | `current` |'
  prefs: []
  type: TYPE_TB
- en: '| `github.com/vladimirvivien/learning-go/ch06/power/ir` | `ir` |'
  prefs: []
  type: TYPE_TB
- en: '| `github.com/vladimirvivien/learning-go/ch06/volt` | `volt` |'
  prefs: []
  type: TYPE_TB
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: golang.fyi/ch06/main.go
  prefs: []
  type: TYPE_NORMAL
