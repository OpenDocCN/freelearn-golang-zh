["```go\nimport res \"github.com/vladimirvivien/learning-go/ch06/resistor\"\nAssigning a name to a package is also a way to avoid package identifier collisions in a given source file. It is conceivable to import two or more packages, with different import paths, that resolve to the same package names. As an example, you may need to log information with two different logging systems from different libraries, as illustrated in the following code snippet:\n```", "```go\npackage foo \nimport ( \n   flog \"github.com/woom/bat/logger\" \n   hlog \"foo/bar/util/logger\" \n) \n\nfunc main() { \n   flog.Info(\"Programm started\") \n   err := doSomething() \n   if err != nil { \n     hlog.SubmitError(\"Error - unable to do something\") \n   } \n} \n\n\"logger\" by default. To resolve this, at least one of the imported packages must be assigned a name identifier to resolve the name clash. In the previous example, both import paths were named with a meaningful name to help with code comprehension.\n```"]