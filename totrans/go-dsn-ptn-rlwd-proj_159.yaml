- en: Remote packages
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 远程包
- en: 'One of the tools that is shipped with Go allows programmers to retrieve packages
    directly from remote source code repositories. Go, by default, readily supports
    integration with version control systems including the following:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Go 附带的一些工具允许程序员直接从远程源代码库检索包。默认情况下，Go 可以轻松地与以下版本控制系统集成：
- en: Git (`git`, [http://git-scm.com/](http://git-scm.com/))
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Git (`git`, [http://git-scm.com/](http://git-scm.com/))
- en: Mercurial (`hg`, [https://www.mercurial-scm.org/](https://www.mercurial-scm.org/))
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mercurial (`hg`, [https://www.mercurial-scm.org/](https://www.mercurial-scm.org/))
- en: Subversion (`svn`, [http://subversion.apache.org/](http://subversion.apache.org/))
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Subversion (`svn`, [http://subversion.apache.org/](http://subversion.apache.org/))
- en: Bazaar (`bzr`, [http://bazaar.canonical.com/](http://bazaar.canonical.com/))
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bazaar (`bzr`, [http://bazaar.canonical.com/](http://bazaar.canonical.com/))
- en: Note
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: In order for Go to pull package source code from a remote repository, you must
    have a client for that version control system installed as a command on your operating
    system's execution path. Under the cover, Go launches the client to interact with
    the source code repository server.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让 Go 从远程代码库中拉取包源代码，你必须在操作系统的执行路径上安装该版本控制系统的客户端作为命令。在幕后，Go 将启动客户端与源代码库服务器进行交互。
- en: 'The `get` command-line tool allows programmers to retrieve remote packages
    using a fully qualified project path as the import path for the package. Once
    the package is downloaded, it can be imported for use in local source files. For
    instance, if you wanted to include one of the packages from the Ohm''s Law example
    from preceding snippet, you would issue the following command from the command-line:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '`get` 命令行工具允许程序员使用完全限定的项目路径作为包的导入路径来检索远程包。一旦包下载完成，就可以导入到本地源文件中使用。例如，如果你想要包含前一个代码片段中
    Ohm 定律示例中的一个包，你将需要在命令行中输入以下命令：'
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The `go get` tool will download the specified import path along with all referenced
    dependencies. The tool will then build and install the package artifacts in `$GOPATH/pkg`.
    If the `import` path happens to be a program, go get will generate the binary
    in `$GOPATH/bin` as well as any referenced packages in `$GOPATH/pkg`.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '`go get` 工具将下载指定的导入路径以及所有引用的依赖项。然后，该工具将在 `$GOPATH/pkg` 中构建和安装包的工件。如果 `import`
    路径恰好是一个程序，`go get` 还会在 `$GOPATH/bin` 中生成二进制文件以及 `$GOPATH/pkg` 中引用的任何包。'
