- en: Array traversal
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: golang.fyi/ch07/arrmax_iter.go
  prefs: []
  type: TYPE_NORMAL
- en: In the traditional `for` statement, the loop's index variable `i` is used to
    access the value of the array using the index expression `num[i]`. In the `for…range`
    statement, in the `max` function, the iterated value is stored in the `val` variable
    with each pass of the loop and the index is ignored (assigned to the blank identifier).
    If you do not understand how *for* statements work, refer to [Chapter 3](part0022_split_000.html#KVCC1-9c484ed022e64a0fb0e1aebf8e05d4fd
    "Chapter 3. Go Control Flow"), *Go Control Flow*, for a thorough explanation of
    the mechanics of loops in Go.
  prefs: []
  type: TYPE_NORMAL
