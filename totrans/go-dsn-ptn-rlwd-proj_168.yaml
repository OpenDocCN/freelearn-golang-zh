- en: Array as parameters
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数组作为参数
- en: Arrays values are treated as a single unit. An array variable is not a pointer
    to a location in memory, but rather represents the entire block of memory containing
    the array elements. This has the implications of creating a new copy of an array
    value when the array variable is reassigned or passed in as a function parameter.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 数组值被视为一个单一单元。数组变量不是指向内存中某个位置的指针，而是代表包含数组元素的整个内存块。这导致在数组变量重新分配或作为函数参数传递时，会创建数组值的新副本。
- en: 'This could have unwanted side effects on memory consumption for a program.
    One fix for is to use pointer types to reference array values. In the following
    example, a named type, `numbers`, is declared to represent array type `[1024 *
    1024]]int`. Instead of taking the array value directly as parameters, functions
    `initialize()` and `max()` receive a pointer of type `*numbers`, as shown in the
    following source snippet:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能会对程序的内存消耗产生不希望的结果。一个解决方案是使用指针类型来引用数组值。在下面的示例中，声明了一个名为`numbers`的命名类型，用于表示数组类型`[1024
    * 1024]int`。与直接将数组值作为参数不同，函数`initialize()`和`max()`接收一个类型为`*numbers`的指针，如下面的源代码片段所示：
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: golang.fyi/ch07/arraddr.go
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: golang.fyi/ch07/arraddr.go
- en: The array type is a low-level storage construct in Go. Arrays, for instance,
    are usually used as the basis for storage primitives, where there are strict memory
    allocation requirements to minimize space consumption. In more common cases however,
    the slice, covered in the next section, is often used as the more idiomatic way
    of working with sequenced indexed collections.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在Go中，数组类型是一种低级存储构造。例如，数组通常用作存储原语的基础，其中对内存分配有严格的限制，以最小化空间消耗。然而，在更常见的案例中，下一节中将要介绍的切片，通常被用作处理有序索引集合的更习惯的方式。
