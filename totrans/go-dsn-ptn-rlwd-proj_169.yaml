- en: The slice type
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The slice type is commonly used as the idiomatic construct for indexed data
    in Go. The slice is more flexible and has many more interesting characteristics
    than arrays. The slice itself is a composite type with semantics similar to arrays.
    In fact, a slice uses an array as its underlying data storage mechanism. The general
    form of a slice type is given as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '*[ ]<element_type>*'
  prefs: []
  type: TYPE_NORMAL
- en: 'The one obvious difference between a slice and an array type is omission of
    the size in the type declaration, as shown in the following examples:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: golang.fyi/ch07/slicetypes.go
  prefs: []
  type: TYPE_NORMAL
- en: 'The missing size attribute in the slice type indicates the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Unlike arrays, the size of a slice is not fixed
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A slice type represents all sets of the specified element type
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This means a slice can theoretically grow unbounded (though in practice this
    is not true as the slice is backed by an underlying bounded array). A slice of
    a given element type is considered to be the same type regardless of its underlying
    size. This removes the restriction found in arrays where the size determines the
    type.
  prefs: []
  type: TYPE_NORMAL
- en: 'For instance, the following variables, `months` and `q1`, have the same type
    of `[]string` and will compile with no problem:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: golang.fyi/ch07/slicetypes.go
  prefs: []
  type: TYPE_NORMAL
- en: 'Similar to arrays, slice types may be nested to create multi-dimensional slices,
    as shown in the following code snippet. Each dimension can independently have
    its own size and must be initialized individually:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
