- en: Slice representation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Earlier it was mentioned that the slice value uses an underlying array to store
    data. The name *slice*, in fact, is a reference to a slice of data segment from
    the array. Internally, a slice is represented by a composite value with the followings
    three attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Attribute** | **Description** |'
  prefs: []
  type: TYPE_TB
- en: '| a *pointer* | The pointer is the address of the first element of the slice
    stored in an underlying array. When the slice value is uninitialized, its pointer
    value is nil, indicating that it is not pointing to an array yet.Go uses the pointer
    as the zero value of the slice itself. An uninitialized slice will return nil
    as its zero value. However, the slice value is not treated as a reference value
    by the type system. This means certain functions can be applied to a nil slice
    while others will cause a panic.Once a slice is created, the pointer does not
    change. To point to a different starting point, a new slice must be created. |'
  prefs: []
  type: TYPE_TB
- en: '| a *length* | The length indicates the number of contiguous elements that
    can be accessed starting with the first element. It is a dynamic value that can
    grow up to the capacity of the slice (see capacity next).The length of a slice
    is always less than or equal to its capacity. Attempts to access elements beyond
    the length of a slice, without resizing, will result in a panic. This is true
    even when the capacity is larger than the length. |'
  prefs: []
  type: TYPE_TB
- en: '| a *capacity* | The capacity of a slice is the maximum number of elements
    that may be stored in the slice, starting from its first element. The capacity
    of a slice is bounded by the length of the underlying array. |'
  prefs: []
  type: TYPE_TB
- en: 'So, when the following variable `halfyr` is initialized as shown:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'It will be stored in an array of type `[6]string` with a pointer to the first
    element, a length, and a capacity of `6`, as represented graphically in the following
    figure:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Slice representation](img/00016.jpeg)'
  prefs: []
  type: TYPE_IMG
