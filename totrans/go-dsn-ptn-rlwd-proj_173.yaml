- en: Slicing a slice
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Slicing an existing slice or array value does not create a new underlying array.
    The new slice creates new pointer location to the underlying array. For instance,
    the following code shows the slicing of the slice value `halfyr` into two additional
    slices:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: golang.fyi/ch07/slice_reslice.go
  prefs: []
  type: TYPE_NORMAL
- en: 'The backing array may have many slices projecting a particular view of its
    data. The following figure illustrates how slicing in the previous code may be
    represented visually:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Slicing a slice](img/00017.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Notice that both slices `q1` and `q2` are pointing to different elements in
    the same underlying array. Slice `q1` has an initial length of `3` with a capacity
    of `6`. This implies `q1` can be resized up to `6` elements in total. Slice `q2`,
    however, has a size of `3` and a capacity of `3` and cannot grow beyond its initial
    size (slice resizing is covered later).
  prefs: []
  type: TYPE_NORMAL
