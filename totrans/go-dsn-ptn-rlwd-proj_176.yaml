- en: Making a slice
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建切片
- en: '[PRE0]'
  id: totrans-1
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Creates an underlying array of type `[6]string`
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个类型为`[6]string`的底层数组
- en: Creates the slice value with length and capacity of `6`
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建长度和容量为`6`的切片值
- en: Returns a slice value (not a pointer)
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 返回一个切片值（不是指针）
- en: 'After initialization with the `make()` function, access to a legal index position
    will return the zero value for the slice element instead of causing a program
    panic. The `make()` function can take an optional third parameter that specifies
    the maximum capacity of the slice, as shown in the following example:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`make()`函数初始化后，访问合法的索引位置将返回切片元素的零值，而不是导致程序崩溃。`make()`函数可以接受一个可选的第三个参数，用于指定切片的最大容量，如下例所示：
- en: '[PRE2]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
