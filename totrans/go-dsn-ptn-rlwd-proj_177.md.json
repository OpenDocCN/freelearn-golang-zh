["```go\nfunc main () { \n   h := []float64{12.5, 18.4, 7.0} \n   h[0] = 15 \n   fmt.Println(h[0]) \n   ... \n} \n\n```", "```go\nfunc scale(factor float64, vector []float64) []float64 { \n   for i := range vector { \n         vector[i] *= factor \n   } \n   return vector \n} \n\nfunc contains(val float64, numbers []float64) bool { \n   for _, num := range numbers { \n         if num == val { \n               return true \n         } \n   } \n   return false \n} \n\nscale uses index variable i to update the values in slice factor directly, while function contains uses the iteration-emitted value stored in num to access the slice element. If you need further detail on the forâ€¦range statement, see Chapter 3, *Go Control Flow*.\n```"]