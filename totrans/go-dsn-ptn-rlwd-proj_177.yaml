- en: Using slices
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The simplest operation to do with a slice value is to access its elements.
    As was mentioned, slices use index notation to access its elements similar to
    arrays. The following example accesses element at index position 0 and updates
    to `15`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: golang.fyi/ch07/slice_use.go
  prefs: []
  type: TYPE_NORMAL
- en: When the program runs, it prints the updated value using index expression `h[0]`
    to retrieve the value of the item at position `0`. Note that the slice expression
    with only the index number, `h[0]` for instance, returns the value of the item
    at that position. When, however, the expression includes a colon, say `h[2:]`
    or `h[:6]`, that expression returns a new slice.
  prefs: []
  type: TYPE_NORMAL
- en: 'Slice traversal can be done using the traditional `for`statement or with the,
    more idiomatic, `forâ€¦range` statement as shown in the following code snippets:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
