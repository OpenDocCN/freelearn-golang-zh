- en: Strings as slices
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 字符串作为切片
- en: 'Internally, the string type is implemented as a slice using a composite value
    that points to an underlying array of rune. This affords the string type the same
    idiomatic treatment given to slices. For instance, the following code snippet
    uses index expressions to extract slices of strings from a given string value:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在内部，字符串类型是通过使用一个指向底层 runes 数组的复合值实现的切片。这使得字符串类型获得了与切片相同的惯用处理方式。例如，以下代码片段使用索引表达式从给定字符串值中提取字符串切片：
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: golang.fyi/ch07/slice_string.go
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: golang.fyi/ch07/slice_string.go
- en: 'The slice expression on a string will return a new string value pointing to
    its underlying array of runes. The string values can be converted to a slice of
    byte (or slice of rune) as shown in the following function snippet, which sorts
    the characters of a given string:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 字符串上的切片表达式将返回一个新的字符串值，该值指向其底层的 runes 数组。字符串值可以转换为字节数组切片（或 runes 切片），如下面的函数片段所示，该片段对给定字符串的字符进行排序：
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: golang.fyi/ch07/slice_string.go
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: golang.fyi/ch07/slice_string.go
- en: The previous code shows the explicit conversion of a slice of bytes to a string
    value. Note that each character may be accessed using the index expression.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码展示了将字节数组切片显式转换为字符串值。请注意，每个字符都可以使用索引表达式访问。
