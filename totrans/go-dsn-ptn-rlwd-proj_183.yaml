- en: The map type
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 映射类型
- en: 'The Go map is a composite type that is used as containers for storing unordered
    elements of the same type indexed by an arbitrary key value. The following code
    snippet shows a variety of map variables declarations with a variety of key types:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Go语言中的映射是一个复合类型，用作存储无序元素的容器，这些元素由任意键值索引。以下代码片段展示了具有各种键类型的多种映射变量声明：
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The *key* specifies the type of a value that will be used to index the stored
    elements of the map. Unlike arrays and slices, map keys can be of any type, not
    just `int`. Map keys, however, must be of types that are comparable including
    numeric, string, Boolean, pointers, arrays, struct, and interface types (see [Chapter
    4](part0027_split_000.html#PNV61-9c484ed022e64a0fb0e1aebf8e05d4fd "Chapter 4. Data
    Types")*, Data Types*, for discussion on comparable types).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '*关键字*指定了将要用于索引映射中存储元素的价值类型。与数组切片不同，映射键可以是任何类型，而不仅仅是`int`。然而，映射键必须是可比较的类型，包括数值、字符串、布尔值、指针、数组、结构体和接口类型（参见[第4章](part0027_split_000.html#PNV61-9c484ed022e64a0fb0e1aebf8e05d4fd
    "第4章。数据类型")*数据类型*，关于可比较类型的讨论）。'
