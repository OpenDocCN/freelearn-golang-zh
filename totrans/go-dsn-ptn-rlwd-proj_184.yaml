- en: Map initialization
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Similar to a slice, a map manages an underlying data structure, opaque to its
    user, to store its values. An uninitialized map has a nil zero-value as well.
    Attempts to insert into an uninitialized map will result in a program panic. Unlike
    a slice, however, it is possible to access elements from a nil map, which will
    return the zero value of the element.
  prefs: []
  type: TYPE_NORMAL
- en: 'Like other composite types, maps may be initialized using a composite literal
    value of the following form:'
  prefs: []
  type: TYPE_NORMAL
- en: '*<map_type>{<comma-separated list of key:value pairs>}*'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following snippet shows variable initialization with map composite literals:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: golang.fyi/ch07/mapinit.go
  prefs: []
  type: TYPE_NORMAL
- en: The literal mapped values are specified using a colon-separated pair of key
    and value as shown in the previous example. The type of each key and value pair
    must match that of the declared elements in the map.
  prefs: []
  type: TYPE_NORMAL
