- en: Making Maps
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建映射
- en: 'Similar to a slice, a map value can also be initialized using the *make* function.
    Using the make function initializes the underlying storage allowing data to be
    inserted in the map as shown in the following short snippet:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 与切片类似，映射值也可以使用 `make` 函数进行初始化。使用 `make` 函数初始化底层存储，允许数据按以下简短片段所示插入映射中：
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: golang.fyi/ch07/maptypes.go
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: golang.fyi/ch07/maptypes.go
- en: The `make` function takes as argument the type of the map and it returns an
    initialized map. In the previous example, the `make` function will initialize
    a map of type `map[int]string`. The `make` function can optionally take a second
    parameter to specify the capacity of the map. However, a map will continue to
    grow as needed ignoring the initial capacity specified.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '`make` 函数接受一个参数，即映射的类型，并返回一个初始化后的映射。在上一个示例中，`make` 函数将初始化一个类型为 `map[int]string`
    的映射。`make` 函数可以可选地接受第二个参数来指定映射的容量。然而，映射会根据需要继续增长，忽略指定的初始容量。'
