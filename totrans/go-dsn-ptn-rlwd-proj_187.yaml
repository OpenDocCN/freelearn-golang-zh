- en: Map traversal
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: golang.fyi/ch07/map_use.go
  prefs: []
  type: TYPE_NORMAL
- en: Each iteration returns a key and its associated element value. Iteration order,
    however, is not guaranteed. The internal map iterator may traverse the map in
    a different order with each run of the program. In order to maintain a predictable
    traversal order, keep (or generate) a copy of the keys in a separate structure,
    such as a slice for instance. During traversal, range over the slice of keys to
    traverse in a predictable manner.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You should be aware that update done to the emitted value during the iteration
    will be lost. Instead, use an index expression, such as `hist[key]` to update
    an element during iteration. For details on `for…range` loop, refer to [Chapter
    3](part0022_split_000.html#KVCC1-9c484ed022e64a0fb0e1aebf8e05d4fd "Chapter 3. Go
    Control Flow"), *Go Control Flow*, for a thorough explanation of Go `for` loops.
  prefs: []
  type: TYPE_NORMAL
