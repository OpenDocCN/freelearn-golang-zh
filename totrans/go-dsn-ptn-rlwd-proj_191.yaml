- en: Struct initialization
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结构体初始化
- en: Similar to arrays, structs are pure values with no additional underlying storage
    structure. The fields for an uninitialized struct are assigned their respective
    zero values. This means an uninitialized struct requires no further allocation
    and is ready to be used.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 与数组类似，结构体是纯值，没有额外的底层存储结构。未初始化的结构体的字段被分配其各自的零值。这意味着未初始化的结构体不需要进一步分配，即可使用。
- en: 'Nevertheless, a struct variable can be explicitly initialized using a composite
    literal of the following form:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如此，可以使用以下形式的复合字面量显式初始化结构体变量：
- en: '*<struct_type>{<positional or named field values>}*'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '*<struct_type>{<positional or named field values>}*'
- en: 'The composite literal value for a struct can be initialized by a set of field
    values specified by their respective positions. Using this approach, all field
    values must be provided, to match their respective declared types, as shown in
    the following snippet:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过指定一组字段值来初始化结构体的复合字面量值，这些值对应于它们各自的声明类型。使用这种方法，必须提供所有字段值，以匹配它们各自的声明类型，如下面的代码片段所示：
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: golang.fyi/ch07/structinit.go
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: golang.fyi/ch07/structinit.go
- en: 'In the previous struct literal, all field values of the `struct` are provided,
    matching their declared field types. Alternatively, the composite literal value
    of a `struct` can be specified using a field indices and their associated value.
    As before, the index (the field name) and its value is separated by a colon, as
    shown in the following snippet:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的结构字面量中，提供了`struct`的所有字段值，与它们声明的字段类型相匹配。或者，可以使用字段索引及其关联值来指定`struct`的复合字面量值。与之前一样，索引（字段名）及其值由冒号分隔，如下面的代码片段所示：
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: golang.fyi/ch07/structinit.go
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: golang.fyi/ch07/structinit.go
- en: As you can see, field values of the composite literal can be selectively specified
    when the index and its value are provided. For instance, in the initialization
    of the `node` variable, the `edge` field is initialized while `weight` is omitted.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，当提供了索引及其值时，复合字面量的字段值可以被选择性地指定。例如，在`node`变量的初始化中，`edge`字段被初始化，而`weight`被省略。
