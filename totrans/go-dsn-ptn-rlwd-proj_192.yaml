- en: Declaring named struct types
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Attempting to reuse struct types can get unwieldy fast. For instance, having
    to write `struct { name string; address struct { street string; city string; state
    string; postal string }}` to express a struct type, every time it is needed, would
    not scale, would be error prone, and would make for grumpy Go developers. Luckily,
    the proper idiom to fix this is to use named types, as illustrated in the following
    source code snippet:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: golang.fyi/ch07/structtype_dec.go
  prefs: []
  type: TYPE_NORMAL
- en: The previous example binds struct type definitions to the identifiers person
    and address. This allows the struct types to be reused in different contexts without
    the need to carry around the long form of the type definitions. You can refer
    to [Chapter 4](part0027_split_000.html#PNV61-9c484ed022e64a0fb0e1aebf8e05d4fd
    "Chapter 4. Data Types"), *Data Types*, to learn more about named types.
  prefs: []
  type: TYPE_NORMAL
