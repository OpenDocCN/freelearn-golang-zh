- en: The anonymous field
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'To simplify field name resolution, Go follows the following rules when using
    anonymous fields:'
  prefs: []
  type: TYPE_NORMAL
- en: The name of the type becomes the name of the field
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The name of an anonymous field may not clash with other field names
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use only the unqualified (omit package) type name of imported types
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'These rules also hold when accessing the fields of embedded structs directly
    using selector expressions, as is shown in the following code snippet. Notice
    the name of the embedded types are resolved as fields names:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: golang.fyi/ch07/struct_embed.go
  prefs: []
  type: TYPE_NORMAL
- en: Promoted fields
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Fields of an embedded struct can be *promoted*Â to its enclosing type. Promoted
    fields appear in selector expressions without the qualified name of their types,
    as shown in the following example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
