- en: Structs as parameters
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Recall that struct variables store actual values. This implies that a new copy
    of a struct value is created whenever a `struct` variable is reassigned or passed
    in as a function parameter. For instance, the following will not update the value
    of name after the call to `updateName()`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: golang.fyi/ch07/struct_ptr.go
  prefs: []
  type: TYPE_NORMAL
- en: 'This can be remedied by passing a pointer to the `struct` value of the person
    type, as shown in the following snippet:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: golang.fyi/ch07/struct_ptr2.go
  prefs: []
  type: TYPE_NORMAL
- en: In this version, the `p` variable is declared as `*person` and is initialized
    using the built-in `new()` function. After `updateName()` returns, its changes
    are seen by the calling function.
  prefs: []
  type: TYPE_NORMAL
