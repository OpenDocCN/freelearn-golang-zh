- en: Summary
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: This chapter covered a lot of ground as it walked through each of the composite
    types found in Go to provide insightful coverage of their characteristics. The
    chapter opened with a coverage of the array type, where readers learned how to
    declare, initialize, and use array values. Next, readers learned all about the
    slice type, specifically the declaration, initialization, and practical examples
    that uses slice index expressions to create new or re-slice existing slices. The
    chapter covered the map type, which included information on map initialization,
    access, update, and traversal. Lastly, the chapter provided information about
    the definition, initialization, and usage of the struct type.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章内容丰富，详细介绍了Go语言中每种复合类型的特点。章节从数组类型开始，读者学习了如何声明、初始化和使用数组值。接着，读者了解了切片类型，特别是切片的声明、初始化以及使用切片索引表达式创建新切片或重新切片现有切片的实例。本章还涵盖了map类型，包括map的初始化、访问、更新和遍历等信息。最后，本章提供了关于struct类型定义、初始化和使用的相关信息。
- en: Needless to say, this is probably one of the longest chapters of the book. However,
    the information covered here will prove to be invaluable as the book continues
    to explore new topics. The next chapter will introduce the idea of using Go to
    support object-like idioms using methods and interfaces.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 不言而喻，这可能是本书中最长的章节之一。然而，这里涵盖的信息将在本书继续探讨新主题时证明是无价的。下一章将介绍使用Go语言通过方法和接口支持类似对象的习惯用法。
