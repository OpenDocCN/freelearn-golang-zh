["```go\nt of type truck and p for plane. The former is initialized using a struct literal and the latter is updated using dot notation:\n```", "```go\nfunc main() { \n   t := &truck { \n         vehicle:vehicle{\"Ford\", \"F750\"}, \n         engine:engine{GASOLINE+BIO,700}, \n         axels:2, \n         wheels:6, \n         class:3,     \n   } \n   t.start() \n   t.drive() \n\n   p := &plane{} \n   p.make = \"HondaJet\" \n   p.model = \"HA-420\" \n   p.fuel = JET \n   p.thrust = 2050 \n   p.engineCount = 2 \n   p.fixedWings = true \n   p.maxAltitude = 43000 \n   p.start() \n   p.fly() \n\n} \n\nstruct type embedding mechanism promotes fields and methods when accessed using dot notation. For instance, the following fields (make, mode, fuel, and thrust), are all declared in types that are embedded inside of the plane type:\n```", "```go\np.make = \"HondaJet\" \np.model = \"HA-420\" \np.fuel = JET \np.thrust = 2050 \n\n```", "```go\np.vehicle.make = \"HondaJet\" \np.vehicle.model = \"HA-420\" \np.engine.fuel = JET \np.engine.thrust = 2050 \n\n```"]