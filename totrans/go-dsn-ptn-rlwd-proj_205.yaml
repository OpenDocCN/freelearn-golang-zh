- en: The interface type
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 接口类型
- en: 'When you talk to people who have been doing Go for a while, they almost always
    list the interface as one of their favorite features of the language. The concept
    of interfaces in Go, similar to other languages, such as Java, is a set of methods
    that serves as a template to describe behavior. A Go interface, however, is a
    type specified by the `interface{}` literal, which is used to list a set of methods
    that satisfies the interface. The following example shows the `shape` variable
    being declared as an interface:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 当你与已经使用 Go 语言一段时间的人交谈时，他们几乎总是将接口列为他们最喜欢的语言特性之一。Go 语言中接口的概念，与其他语言如 Java 类似，是一组作为行为模板的方法集合。然而，Go
    语言的接口是由 `interface{}` 文字类型指定的，它用于列出满足接口的一组方法。以下示例展示了如何将 `shape` 变量声明为接口：
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
