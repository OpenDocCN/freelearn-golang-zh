- en: Implementing an interface
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The interesting aspect of interfaces in Go is how they are implemented and ultimately
    used. Implementing a Go interface is done implicitly. There is no separate element
    or keyword required to indicate the intent of implementation. Any type that defines
    the method set of an `interface` type automatically satisfies its implementation.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following source code shows the `rect` type as an implementation of the
    `interface` type `shape`. The `rect` type is defined as a `struct` with receiver
    methods `area` and `perim`. This fact automatically qualifies `rect` as an implementation
    of `shape`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: golang.fyi/ch08/interface_impl.go
  prefs: []
  type: TYPE_NORMAL
