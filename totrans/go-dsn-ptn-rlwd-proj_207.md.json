["```go\nrect (defined previously) and triangle, are able to be passed to the shapeInfo(shape) function to return a string value containing shape calculations:\n```", "```go\ntype triangle struct { \n   name string \n   a, b, c float64 \n} \n\nfunc (t *triangle) area() float64 { \n   return 0.5*(t.a * t.b) \n} \n\nfunc (t *triangle) perim() float64 { \n   return t.a + t.b + math.Sqrt((t.a*t.a) + (t.b*t.b)) \n} \n\nfunc (t *triangle) String() string { \n   return fmt.Sprintf( \n         \"%s[sides: a=%.2f b=%.2f c=%.2f]\", \n         t.name, t.a, t.b, t.c, \n   ) \n} \nfunc shapeInfo(s shape) string { \n   return fmt.Sprintf( \n         \"Area = %.2f, Perim = %.2f\", \n         s.area(), s.perim(), \n   ) \n} \n\nfunc main() { \n   r := &      rect{\"Square\", 4.0, 4.0} \n   fmt.Println(r, \"=>\", shapeInfo(r)) \n\n   t := &      triangle{\"Right Triangle\", 1,2,3} \n   fmt.Println(t, \"=>\", shapeInfo(t)) \n} \n\n```"]