- en: Channels
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通道
- en: When talking about concurrency, one of the natural concerns that arises is that
    of data safety and synchronization among concurrently executing code. If you have
    done concurrent programming in languages such as Java or C/C++, you are likely
    familiar with the, sometimes brittle, choreography required to ensure running
    threads can safely access shared memory values to achieve communication and synchronization
    between threads.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 当谈论并发时，一个自然出现的担忧是并发执行代码中的数据安全和同步。如果你在Java或C/C++等语言中做过并发编程，你可能会熟悉确保运行中的线程可以安全访问共享内存值以实现线程间通信和同步的，有时是脆弱的编排。
- en: 'This is one area where Go diverges from its C lineage. Instead of having concurrent
    code communicate by using shared memory locations, Go uses channels as a conduit
    between running goroutines to communicate and share data. The blog post *Effective
    Go* ([https://golang.org/doc/effective_go.html](https://golang.org/doc/effective_go.html))
    has reduced this concept to the following slogan:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 这是在Go语言与其C语言血统有所不同的一个领域。Go语言不是通过共享内存位置来让并发代码进行通信，而是使用通道作为运行中的goroutines之间通信和数据共享的媒介。博客文章《Effective
    Go》([https://golang.org/doc/effective_go.html](https://golang.org/doc/effective_go.html))
    将这一概念简化为以下口号：
- en: '*Do not communicate by sharing memory; instead, share memory by communicating.*'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '*不要通过共享内存来通信；相反，通过通信来共享内存。*'
- en: Note
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The concept of channel has its roots in **communicating sequential processes**
    (**CSP**), work done by renowned computer scientist C. A. Hoare, to model concurrency
    using communication primitives. As will be discussed in this section, channels
    provide the means to synchronize and safely communicate data between running goroutines.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 通道的概念源于**通信顺序进程**（**CSP**），这是著名计算机科学家C. A. Hoare所做的工作，用于使用通信原语来模拟并发。正如本节将要讨论的，通道提供了在运行中的goroutines之间同步和安全通信数据的方法。
- en: This section discusses the Go channel type and provides insights into its characteristics.
    Later, you will learn how to use channels to craft concurrent programs.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本节讨论Go语言的通道类型，并提供了对其特性的见解。稍后，你将学习如何使用通道来构建并发程序。
