- en: The Channel type
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通道类型
- en: '[PRE0]'
  id: totrans-1
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Later in the chapter, we will learn how to use the channel to send data between
    concurrent portions of a running program.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的后面部分，我们将学习如何使用通道在程序运行的并发部分之间发送数据。
- en: The send and receive operations
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 发送和接收操作
- en: 'Go uses the `<-` (arrow) operator to indicate data movement within a channel.
    The following table summarizes how to send or receive data from a channel:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: Go 使用 `<-`（箭头）操作符来指示通道内的数据移动。以下表格总结了如何从通道发送或接收数据：
- en: '| **Example** | **Operation** | **Description** |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| **示例** | **操作** | **描述** |'
- en: '| `intCh <- 12` | Send | When the arrow is placed to the left of the value,
    variable or expression, it indicates a send operation to the channel it points
    to. In this example, `12` is sent into channel `intCh`. |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| `intCh <- 12` | 发送 | 当箭头放置在值、变量或表达式的左侧时，它表示向箭头指向的通道发送操作。在这个例子中，`12` 被发送到
    `intCh` 通道。|'
- en: '| `value := <- intCh` | Receive | When the `<-` operator is place to the left
    of a channel, it indicates a receive operation from the channel. The `value` variable
    is assigned the value received from the `intCh` channel. |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| `value := <- intCh` | 接收 | 当 `<-` 操作符放置在通道的左侧时，它表示从通道接收操作。`value` 变量被分配从
    `intCh` 通道接收到的值。|'
- en: An uninitialized channel has a *nil* zero value and must be initialized using
    the built-in *make* function. As will be discussed in the following sections,
    a channel can be initialized as either unbuffered or buffered, depending on its
    specified capacity. Each of type of channel has different characteristics that
    are leveraged in different concurrency constructs.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 未初始化的通道具有 *nil* 的零值，必须使用内置的 *make* 函数进行初始化。正如将在以下章节中讨论的那样，通道可以初始化为无缓冲或有缓冲，这取决于其指定的容量。每种类型的通道都有不同的特性，这些特性在不同的并发结构中被利用。
