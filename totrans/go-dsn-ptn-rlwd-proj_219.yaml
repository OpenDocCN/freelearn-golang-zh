- en: Unbuffered channel
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The characteristics of an unbuffered channel are illustrated in the following
    figure:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Unbuffered channel](img/00024.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'The sequence in the preceding figure (from left to right) shows how the unbuffered
    channel works:'
  prefs: []
  type: TYPE_NORMAL
- en: If the channel is empty, the receiver blocks until there is data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The sender can send only to an empty channel and blocks until the next receive
    operation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When the channel has data, the receiver can proceed to receive the data.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Sending to an unbuffered channel can easily cause a *deadlock* if the operation
    is not wrapped in a goroutine. The following code will block after sending `12`
    to the channel:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: golang.fyi/ch09/chan-unbuff0.go
  prefs: []
  type: TYPE_NORMAL
- en: 'When you run the previous program, you will get the following result:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Recall that the sender blocks immediately upon sending to an unbuffered channel.
    This means any subsequent statement, to receive from the channel for instance,
    becomes unreachable, causing a deadlock. The following code shows the proper way
    to send to an unbuffered channel:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: golang.fyi/ch09/chan-unbuff1.go
  prefs: []
  type: TYPE_NORMAL
- en: Notice that the send operation is wrapped in an anonymous function invoked as
    a separate goroutine. This allows the `main` function to reach the receive operation
    without blocking. As you will see later, this blocking property of unbuffered
    channels is used extensively as a synchronization and coordination idioms between
    goroutines.
  prefs: []
  type: TYPE_NORMAL
