["```go\nfunc main() { \n   ch := make(chan int, 4) \n   ch <- 2 \n   ch <- 4 \n   close(ch) \n   // ch <- 6 // panic, send on closed channel \n\n   fmt.Println(<-ch) \n   fmt.Println(<-ch) \n   fmt.Println(<-ch) // closed, returns zero value for element \n\n} \n\nch channel is closed after two send operations. As indicated in the comment, a third send operation would cause a panic because the channel is closed. On the receiving side, the code gets the two elements in the channel before it is closed. A third receive operation returns 0, the zero value for the channel's elements.\n```", "```go\nfunc main() { \n   ch := make(chan int, 4) \n   ch <- 2 \n   ch <- 4 \n   close(ch) \n\n   for i := 0; i < 4; i++ { \n         if val, opened := <-ch; opened { \n               fmt.Println(val) \n         } else { \n               fmt.Println(\"Channel closed!\") \n         } \n   } \n} \n\n```"]