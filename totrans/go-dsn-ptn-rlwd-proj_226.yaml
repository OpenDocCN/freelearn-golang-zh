- en: Streaming data
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 流式传输数据
- en: 'A natural use of channels is to stream data from one goroutine to another.
    This pattern is quite common in Go code and for it to work, the followings must
    be done:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 通道的自然用途是从一个goroutine流数据到另一个goroutine。这种模式在Go代码中相当常见，为了使其工作，必须执行以下操作：
- en: Continuously send data on a channel
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在通道上持续发送数据
- en: Continuously receive the incoming data from that channel
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 持续接收该通道的传入数据
- en: Signal the end of the stream so the receiver may stop
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通知接收者流结束，以便它停止
- en: 'As you will see, all of this can be done using a single channel. The following
    code snippet is a rewrite of the previous example. It shows how to use a single
    channel to stream data from one goroutine to another. The same channel is also
    used as a signaling device to indicate the end of the stream:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您将看到的，所有这些都可以使用单个通道完成。以下代码片段是先前示例的重写。它展示了如何使用单个通道从goroutine流数据到另一个goroutine。相同的通道也被用作信号设备，以指示流的结束：
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: golang.fyi/ch09/pattern2.go
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: golang.fyi/ch09/pattern2.go
- en: 'This version of the code produces the word histogram as before, but introduces
    a different approach. This is accomplished using the highlighted portion of the
    code shown in the following table:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 此版本的代码生成与之前相同的单词直方图，但采用不同的方法。这是通过以下表格中显示的代码高亮部分实现的：
- en: '| **Code** | **Description** |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| **代码** | **描述** |'
- en: '|'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE1]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '| The channel used to stream data. |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| 用于流数据的通道。|'
- en: '|'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE2]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '| The sender goroutine loops through the text line and sends a word at a time.
    It then blocks until the word is received by the receiving (main) goroutine. |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| 发送者goroutine遍历文本行，一次发送一个单词。然后它阻塞，直到接收（主）goroutine收到该单词。|'
- en: '|'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE3]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '| As the words are continuously received (see later), the sender goroutine
    closes the channel when it is done. This will be the signal to the receiver that
    it should also stop. |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| 随着单词的持续接收（见后文），发送者goroutine在完成时关闭通道。这将向接收者发出信号，表明它也应该停止。|'
- en: '|'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE4]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '| This is the receiver code. It is placed in a loop since it is does not know
    ahead of time how much data to expect. With each iteration of the loop, the code
    does the following:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '| 这是接收者代码。它被放置在一个循环中，因为它事先不知道期望多少数据。循环的每次迭代，代码都会执行以下操作：|'
- en: Pulls the data from the channel
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从通道中提取数据
- en: Checks the open status of the channel
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查通道的打开状态
- en: If closed, break out of the loop
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果已关闭，则退出循环
- en: Otherwise record histogram
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 否则记录直方图
- en: '|'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
