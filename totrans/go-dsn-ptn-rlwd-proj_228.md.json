["```go\nfunc main() { \n   data := []string{\"The yellow fish swims...\", ...} \n   histogram := make(map[string]int) \n\n   words := words(data) // returns handle to data channel \n   for word := range words { \n         histogram[word]++ \n   } \n... \n} \n\n// generator function that produces data \nfunc words(data []string) <-chan string { \n   out := make(chan string) \n   go func() { \n         defer close(out) // closes channel upon fn return \n         for _, line := range data { \n               words := strings.Split(line, \" \") \n               for _, word := range words { \n                     word = strings.ToLower(word) \n                     out <- word \n               } \n         } \n   }() \n   return out \n} \n\n```"]