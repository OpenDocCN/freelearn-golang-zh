- en: Generator functions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Channels and goroutines provide a natural substrate for implementing a form
    of producer/producer pattern using generator functions. In this approach, a goroutine
    is wrapped in a function which generates values that are sent via a channel returned
    by the function. The consumer goroutine receives these values as they are generated.
  prefs: []
  type: TYPE_NORMAL
- en: 'The word histogram has been updated to use this pattern, as shown in the following
    code snippet:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: golang.fyi/ch09/pattern4.go
  prefs: []
  type: TYPE_NORMAL
- en: In this example, the generator function, declared as `func words(data []string)
    <-chan string`, returns a receive-only channel of string elements. The consumer
    function, in this instance `main()`, receives the data emitted by the generator
    function, which is processed using a `forâ€¦range` loop.
  prefs: []
  type: TYPE_NORMAL
