- en: Summary
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Concurrency can be a complex topic in any language. This chapter covered the
    major topics to guide readers around the use of concurrency primitives in the
    Go language. The first section of the chapter outlined the crucial properties
    of goroutines, including the creation and usage of the *go* statement. Next, the
    chapter covered the mechanism of Go's runtime scheduler and the notion of channels
    used for communication between running goroutines. Lastly, users were introduced
    to several concurrency patterns used to create concurrent programs using goroutines,
    channels, and the synchronization primitives from the sync package.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 并发在任何语言中都是一个复杂的话题。本章涵盖了主要主题，以指导读者了解 Go 语言中并发原语的使用。本章的第一部分概述了 goroutines 的关键特性，包括
    *go* 语句的创建和使用。接下来，本章介绍了 Go 的运行时调度机制以及用于运行 goroutines 之间通信的通道概念。最后，用户被介绍了几种并发模式，这些模式用于使用
    goroutines、通道和来自 sync 包的同步原语创建并发程序。
- en: Next, you will be introduced to the standard APIs to do data input and output
    in Go.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您将了解在 Go 语言中进行数据输入和输出的标准 API。
