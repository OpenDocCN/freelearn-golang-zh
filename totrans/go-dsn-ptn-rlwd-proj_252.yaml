- en: Reading from io.Reader
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从 io.Reader 读取
- en: '[PRE0]'
  id: totrans-1
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: golang.fyi/ch10/fmtfscan0.go
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: golang.fyi/ch10/fmtfscan0.go
- en: The code reads from the `io.File` variable `data`, until it encounters an `io.EOF`
    error indicating the end of the file. Each line of text it reads is parsed using
    format specifiers `"%s %d %d %s\n"` which matches the space-delimited layout of
    the records stored in the file. Each parsed token is then assigned to its respective
    variable `name`, `diam`, `moons`, and `hasRing,` which are printed to the standard
    output using the `fm.Printf` function.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 代码从 `io.File` 变量 `data` 中读取，直到遇到表示文件结束的 `io.EOF` 错误。它读取的每一行文本都使用格式说明符 `"%s %d
    %d %s\n"` 进行解析，这与文件中存储的记录的空格分隔布局相匹配。然后，每个解析出的标记被分配给相应的变量 `name`、`diam`、`moons`
    和 `hasRing`，这些变量使用 `fm.Printf` 函数打印到标准输出。
