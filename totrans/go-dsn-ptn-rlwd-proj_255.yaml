- en: Buffered writers and readers
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 缓冲写入器和读取器
- en: 'The `bufio` package offers several functions to do buffered writing of IO streams
    using an `io.Writer` interface. The following snippet creates a text file and
    writes to it using buffered IO:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '`bufio` 包提供了几个函数，用于使用 `io.Writer` 接口进行缓冲的 IO 流写入。以下代码片段创建了一个文本文件，并使用缓冲 IO 向其写入：'
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: golang`.fyi/ch10/bufread0.go`
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: golang`.fyi/ch10/bufread0.go`
- en: The previous code uses the `reader.ReadString` method to read a text file using
    the `'\n'` character as the content delimiter. To influence the size of the internal
    buffer, use the constructor function `bufio.NewReaderSize(w io.Reader, n int)`
    to specify the internal buffer size. The `bufio.Reader` type also offers the *Read*,
    *ReadByte*, and *ReadBytes* methods for reading raw bytes from a stream and the
    *ReadRune* method for reading Unicode-encoded characters.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的代码使用了 `reader.ReadString` 方法，通过使用 `'\n'` 字符作为内容分隔符来读取文本文件。要影响内部缓冲区的大小，可以使用构造函数
    `bufio.NewReaderSize(w io.Reader, n int)` 来指定内部缓冲区的大小。`bufio.Reader` 类型还提供了 *Read*、*ReadByte*
    和 *ReadBytes* 方法，用于从流中读取原始字节，以及 *ReadRune* 方法用于读取 Unicode 编码的字符。
