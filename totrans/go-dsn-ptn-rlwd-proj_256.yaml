- en: Scanning the buffer
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: golang.fyi/ch10/bufscan0.go
  prefs: []
  type: TYPE_NORMAL
- en: 'Using `bufio.Scanner` is done in four steps as shown in the previous example:'
  prefs: []
  type: TYPE_NORMAL
- en: First, use `bufio.NewScanner(io.Reader)` to create a scanner
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Call the `scanner.Split` method to configure how the content is tokenized
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Traverse the generated tokens with the `scanner.Scan` method
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Read the tokenized data with the `scanner.Text` method
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code uses the pre-defined function `bufio.ScanLines` to parse the buffered
    content using a line-delimiter. The `bufio` package comes with several pre-defined
    splitter functions including *ScanBytes* to scan each byte as a token, *ScanRunes*
    to scan UTF-8 encoded tokens, and *ScanWords* which scan each space-separated
    words as tokens.
  prefs: []
  type: TYPE_NORMAL
