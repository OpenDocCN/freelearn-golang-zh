- en: Encoding and decoding data
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据编码和解码
- en: Another common aspect of IO in Go is the encoding of data, from one representation
    to another, as it is being streamed. The encoders and decoders of the standard
    library, found in the *encoding* package ([https://golang.org/pkg/encoding/](https://golang.org/pkg/encoding/)),
    use the `io.Reader` and `io.Writer` interfaces to leverage IO primitives as a
    way of streaming data during encoding and decoding.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Go中IO的另一个常见方面是在数据流过程中，将数据从一种表示形式转换为另一种表示形式。标准库中的编码器和解码器，位于*encoding*包中([https://golang.org/pkg/encoding/](https://golang.org/pkg/encoding/))，使用`io.Reader`和`io.Writer`接口来利用IO原语作为编码和解码过程中流式传输数据的一种方式。
- en: Go supports several encoding formats for a variety of purposes including data
    conversion, data compaction, and data encryption. This chapter will focus on encoding
    and decoding data using the *Gob* and *JSON* format for data conversion. In [Chapter
    11](part0078_split_000.html#2ACBS2-9c484ed022e64a0fb0e1aebf8e05d4fd "Chapter 11. Writing
    Networked Services"), *Writing Networked Programs*, we will explore using encoders
    to convert data for client and server communication using **remote procedure calls**
    (**RPC**).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Go支持多种编码格式，用于各种目的，包括数据转换、数据压缩和数据加密。本章将重点介绍使用*Gob*和*JSON*格式进行数据转换的编码和解码。在[第11章](part0078_split_000.html#2ACBS2-9c484ed022e64a0fb0e1aebf8e05d4fd
    "第11章。编写网络服务")《编写网络程序》中，我们将探讨使用编码器将数据转换为客户端和服务器通信所用的**远程过程调用**（**RPC**）。
