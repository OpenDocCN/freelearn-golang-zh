- en: Encoding and decoding data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Another common aspect of IO in Go is the encoding of data, from one representation
    to another, as it is being streamed. The encoders and decoders of the standard
    library, found in the *encoding* package ([https://golang.org/pkg/encoding/](https://golang.org/pkg/encoding/)),
    use the `io.Reader` and `io.Writer` interfaces to leverage IO primitives as a
    way of streaming data during encoding and decoding.
  prefs: []
  type: TYPE_NORMAL
- en: Go supports several encoding formats for a variety of purposes including data
    conversion, data compaction, and data encryption. This chapter will focus on encoding
    and decoding data using the *Gob* and *JSON* format for data conversion. In [Chapter
    11](part0078_split_000.html#2ACBS2-9c484ed022e64a0fb0e1aebf8e05d4fd "Chapter 11. Writing
    Networked Services"), *Writing Networked Programs*, we will explore using encoders
    to convert data for client and server communication using **remote procedure calls**
    (**RPC**).
  prefs: []
  type: TYPE_NORMAL
