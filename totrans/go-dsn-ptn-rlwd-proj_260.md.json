["```go\ntype Name struct { \n   First, Last string \n} \n\ntype Book struct { \n   Title       string \n   PageCount   int \n   ISBN        string \n   Authors     []Name \n   Publisher   string \n   PublishDate time.Time \n} \n\nfunc main() { \n   books := []Book{ \n         Book{ \n               Title:       \"Leaning Go\", \n               PageCount:   375, \n               ISBN:        \"9781784395438\", \n               Authors:     []Name{{\"Vladimir\", \"Vivien\"}}, \n               Publisher:   \"Packt\", \n               PublishDate: time.Date( \n                     2016, time.July, \n                     0, 0, 0, 0, 0, time.UTC), \n         }, \n         ... \n   } \n\n   file, err := os.Create(\"book.dat\") \n   if err != nil { \n         fmt.Println(err) \n         return \n   } \n   enc := json.NewEncoder(file) \n   if err := enc.Encode(books); err != nil { \n         fmt.Println(err) \n   } \n} \n\n```", "```go\n[ \n {\n \"Title\":\"Leaning Go\",\n \"PageCount\":375,\n \"ISBN\":\"9781784395438\",\n \"Authors\":[{\"First\":\"Vladimir\",\"Last\":\"Vivien\"}],\n \"Publisher\":\"Packt\",\n \"PublishDate\":\"2016-06-30T00:00:00Z\"\n },\n {\n \"Title\":\"The Go Programming Language\",\n \"PageCount\":380,\n \"ISBN\":\"9780134190440\",\n \"Authors\":[\n {\"First\":\"Alan\",\"Last\":\"Donavan\"},\n                      {\"First\":\"Brian\",\"Last\":\"Kernighan\"}\n ],\n \"Publisher\":\"Addison-Wesley\",\n \"PublishDate\":\"2015-10-26T00:00:00Z\"\n },\n ...\n]\n\nbook.dat. Note that the data structure (not shown in the following code) is the same as before:\n```", "```go\nfunc main() { \n   file, err := os.Open(\"book.dat\") \n   if err != nil { \n         fmt.Println(err) \n         return \n   } \n\n   var books []Book \n   dec := json.NewDecoder(file) \n   if err := dec.Decode(&books); err != nil { \n         fmt.Println(err) \n         return \n   } \n} \n\n```"]