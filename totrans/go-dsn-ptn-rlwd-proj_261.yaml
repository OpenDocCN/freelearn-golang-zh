- en: Controlling JSON mapping with struct tags
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: golang.fyi/ch10/json2.go
  prefs: []
  type: TYPE_NORMAL
- en: 'The tags and their meaning are summarized in the following table:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Tags** | **Description** |'
  prefs: []
  type: TYPE_TB
- en: '| `` Title string `json:"book_title"` `` | Maps the `Title` struct field to
    the JSON object key, `"book_title"`. |'
  prefs: []
  type: TYPE_TB
- en: '| `` PageCount int `json:"pages,string"` `` | Maps the `PageCount` struct field
    to the JSON object key, `"pages",` and outputs the value as a string instead of
    a number. |'
  prefs: []
  type: TYPE_TB
- en: '| `` ISBN string `json:"-"` `` | The dash causes the `ISBN` field to be skipped
    during encoding and decoding. |'
  prefs: []
  type: TYPE_TB
- en: '| `` Authors []Name `json:"auths,omniempty"` `` | Maps the `Authors` field
    to the JSON object key, `"auths"`. The annotation, `omniempty,` causes the field
    to be omitted if its value is nil. |'
  prefs: []
  type: TYPE_TB
- en: '| `` Publisher string `json:",omniempty"` `` | Maps the struct field name,
    `Publisher,` as the JSON object key name. The annotation, `omniempty,` causes
    the field to be omitted when empty. |'
  prefs: []
  type: TYPE_TB
- en: '| `` PublishDate time.Time `json:"pub_date"` `` | Maps the field name, `PublishDate,`
    to the JSON object key, `"pub_date"`. |'
  prefs: []
  type: TYPE_TB
- en: 'When the previous struct is encoded, it produces the following JSON output
    in the `books.dat` file (formatted for readability):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Notice the JSON object keys are titled as specified in the `struct` tags. The
    object key `"pages"` (mapped to the struct field, `PageCount`) is encoded as a
    string. Finally, the struct field, `ISBN,` is omitted, as annotated in the `struct`
    tag.
  prefs: []
  type: TYPE_NORMAL
