- en: Summary
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: This chapter provides a high-level view of Go's data input and output idioms
    and the packages involved in implementing IO primitives. The chapter starts by
    covering the fundamentals of a stream-based IO in Go with the `io.Reader` and
    `io.Writer` interfaces. Readers are walked through the implementation strategies
    and examples for both an `io.Reader` and an `io.Writer`.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章提供了Go语言数据输入输出惯用语的概览以及实现IO原语所涉及的包。本章首先介绍了Go语言中基于流的IO的基础，包括`io.Reader`和`io.Writer`接口。读者将了解`io.Reader`和`io.Writer`的实现策略和示例。
- en: The chapter goes on to cover packages, types, and functions that that support
    the streaming IO mechanism including working with files, formatted IO, buffered,
    and in-memory IO. The last portion of the chapter covers encoders and decoders
    that convert data as it is being streamed. In the next chapter, the IO theme is
    carried further when the discussion turns to creating programs that use IO to
    communicate via networking.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章接着介绍了支持流式IO机制的包、类型和函数，包括文件操作、格式化IO、缓冲IO和内存IO。本章的最后部分涵盖了编码器和解码器，它们在数据流传输过程中转换数据。在下一章中，当讨论转向创建使用网络进行通信的程序时，IO主题将进一步展开。
