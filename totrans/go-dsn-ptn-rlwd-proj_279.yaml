- en: Routing requests with http.ServeMux
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: golang.fyi/ch11/httpserv3.go
  prefs: []
  type: TYPE_NORMAL
- en: The code declares two functions assigned to variables `hello` and `goodbye`.
    Each function is mapped to a path `"/hello"` and `"/goodbye"` respectively using
    the `mux.HandleFunc("/hello", hello)` and `mux.HandleFunc("/goodbye", goodbye)`
    method calls. When the server is launched, with `http.ListenAndServe(":4040",
    mux)`, its handler will route the request `"http://localhost:4040/hello"` to the
    `hello` function and requests with the path `"http://localhost:4040/goodbye"`
    to the `goodbye` function.
  prefs: []
  type: TYPE_NORMAL
- en: The default ServeMux
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'It is worth pointing out that the HTTP package makes available a default ServeMux
    internally. When used, it is not necessary to explicitly declare a ServeMux variable.
    Instead the code uses the package function, `http.HandleFunc,` to map a path to
    a handler function as illustrated in the following code snippet:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: golang.fyi/ch11/httpserv4.go
  prefs: []
  type: TYPE_NORMAL
- en: To launch the server, the code calls `http.ListenAndServe(":4040", nil)` where
    the ServerMux parameter is set to `nil`. This implies that the server will default
    to the per-declared package instance of http.ServeMux to handle incoming requests.
  prefs: []
  type: TYPE_NORMAL
