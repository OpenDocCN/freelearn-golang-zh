["```go\n// serves HTML gui \nfunc gui(resp http.ResponseWriter, req *http.Request) { \n   file, err := os.Open(\"./currency.html\") \n   if err != nil { \n         resp.WriteHeader(http.StatusInternalServerError) \n         fmt.Println(err) \n         return \n   } \n   io.Copy(resp, file) \n} \n\nfunc main() { \n   mux := http.NewServeMux() \n   mux.HandleFunc(\"/\", gui) \n   mux.HandleFunc(\"/currency\", currs) \n\n   if err := http.ListenAndServe(\":4040\", mux); err != nil { \n         fmt.Println(err) \n   } \n} \n\ngui handler function responsible for serving a static HTML file that renders the GUI for the client. The root URL path is then mapped to the function with mux.HandleFunc(\"/\", gui). So, in addition to the \"/currency\" path, which hosts the API end-point the \"/\" path will return the web page shown in the following screenshot:\n```", "```go\n<body> \n<div class=\"container\"> \n  <h2>Global Currency Service</h2> \n  <p>Enter currency search string: <input id=\"in\"> \n     <button type=\"button\" class=\"btn btn-primary\" onclick=\"doRequest()\">Search</button> \n  </p>             \n  <table id=\"tbl\" class=\"table table-striped\"> \n    <thead> \n      <tr> \n           <th>Code</th> \n           <th>Name</th> \n           <th>Number</th> \n           <th>Country</th> \n      </tr> \n    </thead> \n    <tbody/> \n  </table> \n</div> \n\n<script> \n var tbl = document.getElementById(\"tbl\"); \n   function addRow(code, name, number, country) { \n         var rowCount = tbl.rows.length; \n         var row = tbl.insertRow(rowCount); \n         row.insertCell(0).innerHTML = code; \n         row.insertCell(1).innerHTML = name; \n         row.insertCell(2).innerHTML = number; \n         row.insertCell(3).innerHTML = country; \n   } \n\n    function doRequest() { \n   param = document.getElementById(\"in\").value \n        $.ajax('/currency', { \n            method: 'PUT', \n               contentType: 'application/json', \n               processData: false, \n               data: JSON.stringify({get:param}) \n         }).then( \n         function success(currencies) { \n               currs = JSON.parse(currencies) \n               for (i=0; i < currs.length; i++) { \n                     addRow( \n                           currs[i].currency_code, \n                           currs[i].currency_name, \n                           currs[i].currency_number, \n                           currs[i].currency_country \n                     ); \n               } \n\n         }); \n   } \n</script> \n\n```"]