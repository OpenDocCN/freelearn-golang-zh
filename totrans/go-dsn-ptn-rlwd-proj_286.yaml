- en: The Go test tool
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Go 测试工具
- en: 'Prior to writing any test code, let''s take a detour to discuss the tooling
    for automated testing in Go. Similar to the `go build` command, the `go test`
    command is designed to compile and exercise test source files in specified packages,
    as illustrated in the following command:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在编写任何测试代码之前，让我们先绕道讨论 Go 中自动化测试的工具。与 `go build` 命令类似，`go test` 命令旨在编译并执行指定包中的测试源文件，如下所示命令所示：
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The previous command will exercise all test functions in the current package.
    Although it appears to be simple, the previous command accomplishes several complex
    steps, including:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的命令将执行当前包中的所有测试函数。尽管看起来很简单，但之前的命令实际上完成了几个复杂的步骤，包括：
- en: The compilation of all test files found in the current package
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编译当前包中找到的所有测试文件
- en: Generating an instrumented binary from the test file
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从测试文件生成一个带有调试信息的二进制文件
- en: Executing the test functions in the code
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行代码中的测试函数
- en: 'When the `go test` command targets multiple packages, the test tool generates
    multiple test binaries that are executed and tested independently, as shown in
    the following:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 当 `go test` 命令针对多个包时，测试工具会生成多个独立的测试二进制文件，这些文件会被执行和测试，如下所示：
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
