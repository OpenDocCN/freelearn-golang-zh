["```go\nAdd, Sub, and Scale methods (see the full source code listed at https://github.com/vladimirvivien/learning-go/ch12/vector/vec.go). Notice that each method implements a specific behavior as a unit of functionality, which will make it easy to test:\n```", "```go\ntype Vector interface { \n    Add(other Vector) Vector \n    Sub(other Vector) Vector \n    Scale(factor float64) \n    ... \n} \n\nfunc New(elems ...float64) SimpleVector { \n    return SimpleVector(elems) \n} \n\ntype SimpleVector []float64 \n\nfunc (v SimpleVector) Add(other Vector) Vector { \n   v.assertLenMatch(other) \n   otherVec := other.(SimpleVector) \n   result := make([]float64, len(v)) \n   for i, val := range v { \n         result[i] = val + otherVec[i] \n   } \n   return SimpleVector(result) \n} \n\nfunc (v SimpleVector) Sub(other Vector) Vector { \n   v.assertLenMatch(other) \n   otherVec := other.(SimpleVector) \n   result := make([]float64, len(v)) \n   for i, val := range v { \n         result[i] = val - otherVec[i] \n   } \n   return SimpleVector(result) \n} \n\nfunc (v SimpleVector) Scale(scale float64) { \n   for i := range v { \n         v[i] = v[i] * scale \n   } \n} \n... \n\n```"]