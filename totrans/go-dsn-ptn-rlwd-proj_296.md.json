["```go\nhttps://github.com/vladimirvivien/learning-go/ch12/service/serv.go):\n```", "```go\npackage main \n\nimport ( \n   \"encoding/json\" \n   \"fmt\" \n   \"net/http\" \n\n   \"github.com/vladimirvivien/learning-go/ch12/vector\" \n) \nfunc add(resp http.ResponseWriter, req *http.Request) { \n   var params []vector.SimpleVector \n   if err := json.NewDecoder(req.Body).Decode(&params);  \n       err != nil { \n         resp.WriteHeader(http.StatusBadRequest) \n         fmt.Fprintf(resp, \"Unable to parse request: %s\\n\", err) \n         return \n   } \n   if len(params) != 2 { \n         resp.WriteHeader(http.StatusBadRequest) \n         fmt.Fprintf(resp, \"Expected 2 or more vectors\") \n         return \n   } \n   result := params[0].Add(params[1]) \n   if err := json.NewEncoder(resp).Encode(&result); err != nil { \n         resp.WriteHeader(http.StatusInternalServerError) \n         fmt.Fprintf(resp, err.Error()) \n         return \n   } \n} \n... \nfunc main() { \n   mux := http.NewServeMux() \n   mux.HandleFunc(\"/vec/add\", add) \n   mux.HandleFunc(\"/vec/sub\", sub) \n   mux.HandleFunc(\"/vec/dotprod\", dotProd) \n   mux.HandleFunc(\"/vec/mag\", mag) \n   mux.HandleFunc(\"/vec/unit\", unit) \n\n   if err := http.ListenAndServe(\":4040\", mux); err != nil { \n         fmt.Println(err) \n   } \n} \n\n```"]