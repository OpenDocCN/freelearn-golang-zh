- en: Test coverage
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When writing tests, it is often important to know how much of the actual code
    is getting exercised (or covered) by the tests. That number is an indication of
    the penetration of the test logic against the source code. Whether you agree or
    not, in many software development practices, test coverage is a critical metric
    as it is a measure of how well the code is tested.
  prefs: []
  type: TYPE_NORMAL
- en: 'Fortunately, the Go test tool comes with a built-in coverage tool. Running
    the Go test command with the `-cover` flag instruments the original source code
    with coverage logic. It then runs the generated test binary, providing a summary
    of the overall coverage profile of the package, as shown in the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The result shows a well-tested code with a coverage number of `87.8%`. We can
    use the test tool to extract more details about the section of the code that is
    tested. To do this, we use the `-coverprofile` flag to record coverage metrics
    to a file, as shown:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
