- en: Setting the workspace - Linux and Apple OS X
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置工作空间 - Linux 和 Apple OS X
- en: Go will always work under the same workspace. This helps the compiler to find
    packages and libraries that you could be using. This workspace is commonly called
    **GOPATH**.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Go 总是在相同的工作空间下工作。这有助于编译器找到你可能正在使用的包和库。这个工作空间通常被称为 **GOPATH**。
- en: GOPATH has a very important role in your working environment while developing
    Go software. When you import a library in your code it will search for this library
    in your `$GOPATH/src`. The same when you install some Go apps, binaries will be
    stored in `$GOPATH/bin`.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: GOPATH 在开发 Go 软件的工作环境中扮演着非常重要的角色。当你代码中导入一个库时，它将在你的 `$GOPATH/src` 中搜索这个库。同样，当你安装一些
    Go 应用程序时，二进制文件将被存储在 `$GOPATH/bin` 中。
- en: 'At the same, all your source code must be stored in a valid route within `$GOPATH/src`
    folder. For example, I store my projects in GitHub and my username is *Sayden*
    so, for a project called **minimal-mesos-go-framework** I will have this folder
    structure like `$GOPATH/src/github.com/sayden/minimal-mesos-go-framework` which
    reflects the URI where this repo is stored at GitHub:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，所有你的源代码都必须存储在 `$GOPATH/src` 文件夹内的有效路径中。例如，我将我的项目存储在 GitHub 上，我的用户名是 *Sayden*，因此，对于一个名为
    **minimal-mesos-go-framework** 的项目，我将拥有如下文件夹结构 ` $GOPATH/src/github.com/sayden/minimal-mesos-go-framework`，这反映了在
    GitHub 上存储此仓库的 URI：
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The `$HOME/go` path is going to be the destination of our `$GOPATH`. We have
    to set an environment variable with our `$GOPATH` pointing to this folder. To
    set the environment variable, open again the file `$HOME/.bashrc` with your favorite
    text editor and add the following line at the end of it:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '`$HOME/go` 路径将成为我们的 `$GOPATH` 的目的地。我们必须设置一个环境变量，将我们的 `$GOPATH` 指向这个文件夹。要设置环境变量，请再次使用你喜欢的文本编辑器打开文件
    `$HOME/.bashrc`，并在其末尾添加以下行：'
- en: '[PRE1]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Save the file and open a new terminal. To check that everything is working,
    just write an echo to the `$GOPATH` variable like this:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 保存文件并打开一个新的终端。为了检查一切是否正常工作，只需将一个 echo 写入 `$GOPATH` 变量，如下所示：
- en: '[PRE2]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: If the output of the preceding command points to your chosen Go path, everything
    is correct and you can continue to write your first program.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果前一个命令的输出指向你选择的 Go 路径，那么一切正常，你可以继续编写你的第一个程序。
