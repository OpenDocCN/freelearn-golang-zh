- en: Types
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 类型
- en: 'Types give the user the ability to store values in mnemonic names. All programming
    languages have types related with numbers (to store integers, negative numbers,
    or floating point for example) with characters (to store a single character) with
    strings (to store complete words) and so on. Go language has the common types
    found in most programming languages:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类型给用户提供了使用助记名称存储值的能力。所有编程语言都有与数字相关的类型（例如存储整数、负数或浮点数），与字符（例如存储单个字符）相关的类型，与字符串（例如存储完整的单词）相关的类型等等。Go
    语言具有大多数编程语言中常见的类型：
- en: The `bool` keyword is for Boolean type which represents a `True` or `False`
    state.
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`bool` 关键字用于布尔类型，它表示 `True` 或 `False` 状态。'
- en: 'Many numeric types being the most common:'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许多数值类型是最常见的：
- en: The `int` is a signed integer type, so int type represents a number from -2147483648
    to 2147483647 in 32 bits machines
  id: totrans-4
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`int` 是有符号整数类型，因此 `int` 类型在 32 位机器上表示从 -2147483648 到 2147483647 的数字。'
- en: The `byte` type represents a number from 0 to 255.
  id: totrans-5
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`byte` 类型表示从 0 到 255 的数字。'
- en: The `float32` and `float64` types are the set of all IEEE-754 64/-bit floating-point
    numbers respectively.
  id: totrans-6
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`float32` 和 `float64` 类型分别是所有 IEEE-754 64 位/64 位浮点数的集合。'
- en: You also have `signed int` type like `rune` which is an alias of `int32` type,
    a number that goes from -2147483648 to 2147483647 and `complex64` and `complex128`
    which are the set of all complex numbers with `float32`/ `float64` real and imaginary
    parts like *2.0i*.
  id: totrans-7
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你还有像 `rune` 这样的 `signed int` 类型，它是 `int32` 类型的别名，一个从 -2147483648 到 2147483647
    的数字，以及 `complex64` 和 `complex128`，它们是所有具有 `float32`/`float64` 实部和虚部的复数集合，如 *2.0i*。
- en: The `string` keyword for string type represents an array of characters enclosed
    in quotes like `"golang"` or `"computer"`.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`string` 关键字用于字符串类型，表示用引号括起来的字符数组，如 `"golang"` 或 `"computer"`。'
- en: An `array` that is a numbered sequence of elements of a single type and a fixed
    size (more about arrays later in this chapter). A list of numbers or lists of
    words with a fixed size is considered arrays.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`array` 是一个由单个类型和固定大小的元素组成的编号序列（关于数组，本章后面会详细说明）。固定大小的数字列表或单词列表被认为是数组。'
- en: The `slice` type is a segment of an underlying array (more about this later
    in this chapter). This type is a bit confusing at the beginning because it seems
    like an array but we will see that actually, they are more powerful.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`slice` 类型是底层数组的片段（关于切片，本章后面会详细说明）。这种类型在开始时可能有点令人困惑，因为它看起来像数组，但我们会看到实际上它们更强大。'
- en: The structures that are the objects that are composed of another objects or
    types.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 结构体是由其他对象或类型组成的对象。
- en: The pointers (more about this later in this chapter)are like directions in the
    memory of our program (yes, like mailboxes that you don't know what's inside).
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 指针（关于这一点，本章后面会详细说明）就像我们程序内存中的方向（是的，就像你不知道里面是什么的邮箱）。
- en: The functions are interesting (more about this later in this chapter). You can
    also define functions as variables and pass them to other functions (yes, a function
    that uses a function, did you like Inception movie?).
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 函数很有趣（关于这一点，本章后面会详细说明）。你还可以将函数定义为变量并将它们传递给其他函数（是的，一个使用函数的函数，你喜欢《Inception》这部电影吗？）。
- en: The `interface` is incredibly important for the language as they provide many
    encapsulation and abstraction functionalities that we'll need often. We'll use
    interfaces extensively during the book and they are presented in greater detail
    later.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`interface` 对于语言来说非常重要，因为它们提供了我们经常需要的许多封装和抽象功能。在本书中，我们将广泛使用接口，它们将在后面的章节中更详细地介绍。'
- en: The `map` types are unordered key-value structures. So for a given key, you
    have an associated value.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`map` 类型是无序键值结构。因此，对于给定的键，你有一个关联的值。'
- en: The channels are the communication primitive in Go for concurrency programs.
    We'll look on channels with more detail on Chapter 8, *Dealing with Go's CSP concurrency*.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通道是 Go 语言中并发程序中的通信原语。我们将在第 8 章“处理 Go 的 CSP 并发”中更详细地介绍通道。
