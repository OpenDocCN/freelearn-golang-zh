- en: The for…range statement
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: for…range 语句
- en: The `_for_` loop is also similar than in common programming languages but you
    don't use parentheses either
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '`_for_` 循环与常见编程语言中的循环类似，但你也不需要使用括号。'
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'As you have probably imagined if you have computer science background, we infer
    an `int` variable defined as `0` and execute the code between the brackets while
    the condition (`i<=10`) is satisfied. Finally, for each execution, we added `1`
    to the value of `i`. This code will print the numbers from 0 to 10\. You also
    have a special syntax to iterate over arrays or slices which is `range`:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你具有计算机科学背景，你可能已经想象到了，我们推断出一个定义为 `0` 的 `int` 变量，并在条件 (`i<=10`) 满足时执行括号内的代码。最后，对于每次执行，我们都会将
    `i` 的值增加 `1`。这段代码将打印从 `0` 到 `10` 的数字。你还有一个特殊的语法来迭代数组或切片，那就是 `range`：
- en: '[PRE1]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: First, the `fmt` (format) is a very common Go package that we will use extensively
    to give shape to the message that we will print in the console.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，`fmt`（格式化）是一个非常常用的 Go 包，我们将广泛使用它来给我们在控制台打印的消息赋予形状。
- en: 'Regarding for, you can use the `range` keyword to retrieve every item in a
    collection like `my_array` and assign them to the value temporal variable. It
    will also give you an `index` variable to know the position of the value you''re
    retrieving. It''s equivalent to write the following:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 for 循环，你可以使用 `range` 关键字来检索集合 `my_array` 中的每个项目，并将它们分配给临时变量。它还会给你一个 `index`
    变量，让你知道你正在检索的值的位臵。这相当于编写以下代码：
- en: '[PRE2]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Tip
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: The `len` method is used to know the length of a collection.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '`len` 方法用于知道集合的长度。'
- en: If you execute this code, you'll see that the result is the same.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你执行这段代码，你会看到结果是一样的。
