- en: Closures
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Closures are something very similar to anonymous functions but even more powerful.
    The key difference between them is that an anonymous function has no context within
    itself and a closure has. Let''s rewrite the previous example to add an arbitrary
    number instead of one:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The `addN` variable points to a function that returns another function. But
    the returned function has the context of the `m` parameter within it. Every call
    to `addN` will create a new function with a fixed `m` value, so we can have main `addN`
    functions, each adding a different value.
  prefs: []
  type: TYPE_NORMAL
- en: This ability of closures is very useful to create libraries or deal with functions
    with unsupported types.
  prefs: []
  type: TYPE_NORMAL
