- en: Closures
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 闭包
- en: 'Closures are something very similar to anonymous functions but even more powerful.
    The key difference between them is that an anonymous function has no context within
    itself and a closure has. Let''s rewrite the previous example to add an arbitrary
    number instead of one:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 闭包与匿名函数非常相似，但功能更强大。它们之间的关键区别在于匿名函数自身没有上下文，而闭包有。让我们重写之前的例子，以添加一个任意数字而不是一个数字：
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The `addN` variable points to a function that returns another function. But
    the returned function has the context of the `m` parameter within it. Every call
    to `addN` will create a new function with a fixed `m` value, so we can have main `addN`
    functions, each adding a different value.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '`addN` 变量指向一个返回另一个函数的函数。但返回的函数在其内部具有 `m` 参数的上下文。每次调用 `addN` 都会创建一个新的具有固定 `m`
    值的函数，因此我们可以有主要的 `addN` 函数，每个函数添加不同的值。'
- en: This ability of closures is very useful to create libraries or deal with functions
    with unsupported types.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 闭包的这种能力对于创建库或处理不支持类型的函数非常有用。
