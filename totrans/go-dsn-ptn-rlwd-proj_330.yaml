- en: Function with undetermined number of parameters
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 具有不确定数量参数的函数
- en: 'Functions can be declared as *variadic*. This means that its number of arguments
    can vary. What this does is to provide an array to the scope of the function that
    contains the arguments that the function was called with. This is convenient if
    you don''t want to force the user to provide an array when using this function.
    For example:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 函数可以被声明为*可变参数*。这意味着它的参数数量可以变化。这样做的作用是为函数的作用域提供一个数组，该数组包含函数被调用时所使用的参数。如果你不希望在使用此函数时强制用户提供一个数组，这将非常方便。例如：
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In this example, we have a `sum` function that will return the sum of all its
    arguments but take a closer look at the `main` function where we call `sum`. As
    you can see now, first we call `sum` with three arguments and then with five arguments.
    For `sum` functions, it doesn't matter how many arguments you pass as it treats
    its arguments as an array all in all. So on our `sum` definition, we simply iterate
    over the array to add each number to the `result` integer.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们有一个`sum`函数，它将返回所有参数的总和。但请更仔细地看看我们调用`sum`的`main`函数。正如你现在所看到的，我们首先用三个参数调用`sum`，然后又用五个参数调用。对于`sum`函数来说，你传递多少个参数并不重要，因为它将其参数视为一个整体数组。因此，在我们的`sum`定义中，我们只需遍历数组，将每个数字加到`result`整数上。
- en: Naming returned types
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 命名返回类型
- en: Have you realized that we have given a name to the returned type? Usually, our
    declaration would be written as `func sum(args int) int` but you can also name
    the variable that you'll use within the function as a return value. Naming the
    variable in the return type would also zero-value it (in this case, an `int` will
    be initialized as zero). At the end, you just need to return the function (without
    value) and it will take the respective variable from the scope as returned value.
    This also makes easier to follow the mutation that the returning variable is suffering
    as well as to ensure that you aren't returning a mutated argument.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 你是否意识到我们已经给返回类型命名了？通常，我们的声明会被写成`func sum(args int) int`，但你也可以给函数内部使用的变量命名，作为返回值。在返回类型中命名变量也会将其初始化为零值（在这种情况下，`int`将被初始化为零）。最后，你只需要返回函数（不提供值），它将从作用域中获取相应的变量作为返回值。这也使得跟踪返回变量的变化更加容易，以及确保你没有返回一个被修改的参数。
