- en: Arrays
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数组
- en: An array is a numbered sequence of elements of a single type. You can store
    100 different unsigned integers in a unique variable, three strings or 400 `bool`
    values. Their size cannot be changed.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 数组是同一类型元素的一个编号序列。你可以在一个唯一的变量中存储 100 个不同的无符号整数，三个字符串或 400 个 `bool` 值。它们的大小不能改变。
- en: 'You must declare the length of the array on its creation as well as the type.
    You can also assign some value on creation. For example here you have 100 `int`
    values all with `0` as value:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 你必须在创建数组时声明其长度以及类型。你还可以在创建时赋值。例如，这里你有 100 个 `int` 值，它们的值都是 `0`：
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Or an array of size 3 with `strings` already assigned:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 或者一个大小为 3 且已分配 `strings` 的数组：
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Here you have an array of 2 `bool` values that we initialize later:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个包含 2 个 `bool` 值的数组，我们稍后会对其进行初始化：
- en: '[PRE2]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Zero-initialization
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 零初始化
- en: In our previous example, we have initialized an `array` of `bool` values of
    size `2`. We wouldn't need to assign `arr[1]` to `false` because of the nature
    of zero-initialization in the language. Go will initialize every value in a `bool`
    array to `false`. We will look deeper to zero-initialization later in this chapter.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们之前的例子中，我们已经初始化了一个大小为 `2` 的 `bool` 值数组。由于语言中零初始化的特性，我们不需要将 `arr[1]` 赋值为 `false`。Go
    语言会自动将 `bool` 数组中的每个值初始化为 `false`。我们将在本章后面更深入地探讨零初始化。
