- en: Interfaces
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 接口
- en: Interfaces are essential in object-oriented programming, in functional programming
    (`traits`) and, especially, in design patterns. Go's source code is full of interfaces
    everywhere because they provide the abstraction needed to deliver uncoupled code
    with the help of functions. As a programmer, you also need this type of abstraction
    when you write libraries but also when you write code that is going to be maintained
    in the future with new functionality.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在面向对象编程、函数式编程（`特性`）以及，尤其是，在设计模式中，接口是必不可少的。Go 的源代码到处都是接口，因为它们提供了通过函数帮助实现解耦代码所需的抽象。作为一名程序员，当你编写库或编写将来需要添加新功能的代码时，你也需要这种类型的抽象。
- en: Interfaces are something difficult to grasp at the beginning but very easy once
    you have understood their behavior and provide very elegant solutions for common
    problems. We will use them extensively during this book so put special focus on
    this section.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 接口在开始时很难理解，但一旦你了解了它们的行为，就能提供非常优雅的解决方案来解决常见问题。在这本书中，我们将广泛使用它们，所以请特别关注这一部分。
