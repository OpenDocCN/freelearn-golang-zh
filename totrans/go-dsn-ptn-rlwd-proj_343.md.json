["```go\nfunc main() { \n    //Atoi converts a string to an int \n    a, _ := strconv.Atoi(os.Args[1]) \n    b, _ := strconv.Atoi(os.Args[2]) \n\n    result := sum(a,b) \n    fmt.Printf(\"The sum of %d and %d is %d\\n\", a, b, result) \n} \n\nfunc sum(a, b int) int { \n    return a + b \n} \n\n```", "```go\n$ go run main.go 3 4\nThe sum of 3 and 4 is 7\n\n```", "```go\nfunc TestSum(t *testing.T) { \n    a := 5 \n    b := 6 \n    expected := 11 \n\n    res := sum(a, b) \n    if res != expected { \n        t.Errorf(\"Our sum function doens't work, %d+%d isn't %d\\n\", a, b, res) \n    } \n} \n\n```", "```go\n$ go test -v\n=== RUN   TestSum\n--- PASS: TestSum (0.00s)\nPASS\nok   github.com/go-design-patterns/introduction/ex_xx_testing 0.001s\n\n```", "```go\n$ go test\n--- FAIL: TestSum (0.00s)\n main_test.go:12: Our sum function doens't work, 5+6 isn't 10\nFAIL\nexit status 1\nFAIL  github.com/sayden/go-design-patterns/introduction/ex_xx_testing 0.002s\n\n```", "```go\n$ go test -cover\nPASS\ncoverage: 20.0% of statements\nok  github.com/sayden/go-design-patterns/introduction/ex_xx_testing 0.001s\n\n```"]