["```go\nfunc multiply(a, b int) int { \n    return 0 \n} \n\n```", "```go\nimport \"testing\" \n\nfunc TestMultiply(t *testing.T) { \n    a := 5 \n    b := 6 \n    expected := 30 \n\n    res := multiply(a, b) \n    if res != expected { \n        t.Errorf(\"Our multiply function doens't work, %d*%d isn't %d\\n\", a, b, res) \n    } \n} \n\n```", "```go\n$ go test\n--- FAIL: TestMultiply (0.00s)\nmain_test.go:12: Our multiply function doens't work, 5+6 isn't 0\nFAIL\nexit status 1\nFAIL    github.com/sayden/go-designpatterns/introduction/ex_xx_testing/multiply \n0.002s\n\n```", "```go\nfunc multiply(a, b int) int { \n return a*b \n} \n\n```", "```go\n$ go test\nPASS\nok      github.com/sayden/go-design-patterns/introduction/ex_xx_testing/multiply    \n0.001s\n\n```"]