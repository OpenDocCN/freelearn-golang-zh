["```go\npackage arithmetic \n\nfunc Sum(args ...int) (res int) { \n    for _, v := range args { \n        res += v \n    } \n    return \n} \n\n```", "```go\nfunc Subtract(args ...int) int { \n    if len(args) < 2 { \n        return 0 \n    } \n\n    res := args[0] \n    for i := 1; i < len(args); i++ { \n        res -= args[i] \n    } \n    return res \n} \n\n```", "```go\nfunc Multiply(args ...int) int { \n    if len(args) < 2 { \n        return 0 \n    } \n\n    res := 1 \n    for i := 0; i < len(args); i++ { \n        res *= args[i] \n    } \n    return res \n} \n\n```", "```go\nfunc Divide(a, b int) (float64, error) { \n    if b == 0 { \n        return 0, errors.New(\"You cannot divide by zero\") \n    }  \n    return float64(a) / float64(b), nil \n} \n\n```", "```go\npackage main \n\nimport ( \n\"fmt\" \n\n\"bitbucket.org/mariocastro/go-design-patterns/introduction/libraries/arithmetic\" \n) \n\nfunc main() { \n    sumRes := arithmetic.Sum(5, 6) \n    subRes := arithmetic.Subtract(10, 5) \n    multiplyRes := arithmetic.Multiply(8, 7) \n    divideRes, _ := arithmetic.Divide(10, 2) \n\n    fmt.Printf(\"5+6 is %d. 10-5 is %d, 8*7 is %d and 10/2 is %f\\n\", sumRes, subRes, multiplyRes, divideRes) \n} \n\n```"]