- en: The godoc tool
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Go documentation is pretty extended and verbose. You can find detailed information
    about any topic you want to achieve. The `godoc` tool also helps you access this
    documentation directly from the command line. For example, we can query the package
    `encoding/json`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'You can also use **grep**, a bash utility for Linux and Mac, to find specific
    information about some functionality. For example, we''ll use grep to look for
    text that mentions anything about parsing JSON files:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The `Unmarshal` command parses the JSON encoded data and stores the result in
    the object being parsed.
  prefs: []
  type: TYPE_NORMAL
- en: One of the things that theÂ `golint` command warns about is to use the beginning
    of a comment with the same name of the function it describes. This way, if you
    don't remember the name of the function that parses JSON, you can use `godoc`
    with `grep` and search for `parse` so the beginning of the line will always be
    the function name like in the example preceding the `Unmarshal` command.
  prefs: []
  type: TYPE_NORMAL
