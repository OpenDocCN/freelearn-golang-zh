- en: Description
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Instance creation can be as simple as providing the opening and closing braces
    `{}` and leaving the instance with zero values, or as complex as an object that
    needs to make some API calls, check states, and create objects for its fields.
    You could also have an object that is composed of many objects, something that's
    really idiomatic in Go, as it doesn't support inheritance.
  prefs: []
  type: TYPE_NORMAL
- en: At the same time, you could be using the same technique to create many types
    of objects. For example, you'll use almost the same technique to build a car as
    you would build a bus, except that they'll be of different sizes and number of
    seats, so why don't we reuse the construction process? This is where the Builder
    pattern comes to the rescue.
  prefs: []
  type: TYPE_NORMAL
