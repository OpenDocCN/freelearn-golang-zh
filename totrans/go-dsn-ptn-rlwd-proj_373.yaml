- en: Factory method - delegating the creation of different types of payments
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工厂方法 - 委派不同类型支付的创建
- en: The Factory method pattern (or simply, Factory) is probably the second-best
    known and used design pattern in the industry. Its purpose is to abstract the
    user from the knowledge of the struct he needs to achieve for a specific purpose,
    such as retrieving some value, maybe from a web service or a database. The user
    only needs an interface that provides him this value. By delegating this decision
    to a Factory, this Factory can provide an interface that fits the user needs.
    It also eases the process of downgrading or upgrading of the implementation of
    the underlying type if needed.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 工厂方法模式（或简称，工厂）可能是行业内第二广为人知和使用的设计模式。其目的是将用户从需要为特定目的（如从网络服务或数据库中检索某些值）实现的结构知识中抽象出来。用户只需要一个提供这种值的接口。通过将这个决策委托给工厂，这个工厂可以提供一个符合用户需求的接口。同时，如果需要，这也简化了底层类型实现的下调或升级过程。
