- en: Description
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 描述
- en: When using the Factory method design pattern, we gain an extra layer of encapsulation
    so that our program can grow in a controlled environment. With the Factory method,
    we delegate the creation of families of objects to a different package or object
    to abstract us from the knowledge of the pool of possible objects we could use.
    Imagine that you want to organize your holidays using a trip agency. You don't
    deal with hotels and traveling and you just tell the agency the destination you
    are interested in so that they provide you with everything you need. The trip
    agency represents a Factory of trips.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用工厂方法设计模式时，我们获得了一个额外的封装层，这样我们的程序就可以在一个受控的环境中增长。通过工厂方法，我们将创建对象族的任务委托给不同的包或对象，从而抽象出我们可能使用的对象池的知识。想象一下，你想要通过旅行社来安排你的假期。你不需要处理酒店和旅行事宜，你只需告诉旅行社你感兴趣的目的地，这样他们就会提供你所需的一切。旅行社代表了一个旅行工厂。
