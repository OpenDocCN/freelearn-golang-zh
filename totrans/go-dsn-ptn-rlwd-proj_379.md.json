["```go\npackage creational \n\nimport ( \n    \"errors\" \n    \"fmt\" \n) \n\ntype PaymentMethod interface { \n    Pay(amount float32) string \n} \n\nconst ( \n    Cash      = 1 \n    DebitCard = 2 \n) \n\ntype CashPM struct{} \ntype DebitCardPM struct{} \n\nfunc GetPaymentMethod(m int) (PaymentMethod, error) { \n    switch m { \n        case Cash: \n        return new(CashPM), nil \n        case DebitCard: \n        return new(DebitCardPM), nil \n        default: \n        return nil, errors.New(fmt.Sprintf(\"Payment method %d not recognized\\n\", m)) \n    } \n} \n\n```", "```go\n$go test -v -run=GetPaymentMethod .\n=== RUN   TestGetPaymentMethodCash\n--- FAIL: TestGetPaymentMethodCash (0.00s)\n factory_test.go:16: The cash payment method message wasn't correct\n factory_test.go:18: LOG:\n=== RUN   TestGetPaymentMethodDebitCard\n--- FAIL: TestGetPaymentMethodDebitCard (0.00s)\n factory_test.go:28: The debit card payment method message wasn't correct\n factory_test.go:30: LOG:\n=== RUN   TestGetPaymentMethodNonExistent\n--- PASS: TestGetPaymentMethodNonExistent (0.00s)\n factory_test.go:38: LOG: Payment method 20 not recognized\nFAIL\nexit status 1\nFAIL\n\n```", "```go\ntype CashPM struct{} \ntype DebitCardPM struct{} \n\nfunc (c *CashPM) Pay(amount float32) string { \n     return fmt.Sprintf(\"%0.2f paid using cash\\n\", amount) \n} \n\nfunc (c *DebitCardPM) Pay(amount float32) string { \n     return fmt.Sprintf(\"%#0.2f paid using debit card\\n\", amount) \n} \n\n```", "```go\n$ go test -v -run=GetPaymentMethod .\n=== RUN   TestGetPaymentMethodCash\n--- PASS: TestGetPaymentMethodCash (0.00s)\n factory_test.go:18: LOG: 10.30 paid using cash\n=== RUN   TestGetPaymentMethodDebitCard\n--- PASS: TestGetPaymentMethodDebitCard (0.00s)\n factory_test.go:30: LOG: 22.30 paid using debit card\n=== RUN   TestGetPaymentMethodNonExistent\n--- PASS: TestGetPaymentMethodNonExistent (0.00s)\n factory_test.go:38: LOG: Payment method 20 not recognized\nPASS\nok\n\n```", "```go\n$ go test -run=GetPaymentMethod .\nok\n\n```"]