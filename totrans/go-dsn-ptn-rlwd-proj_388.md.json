["```go\nfunc BuildFactory(f int) (VehicleFactory, error) { \n    switch f { \n        case CarFactoryType: \n        return new(CarFactory), nil \n        case MotorbikeFactoryType: \n        return new(MotorbikeFactory), nil \n        default: \n        return nil, errors.New(fmt.Sprintf(\"Factory with id %d not recognized\\n\", f)) \n    } \n} \n\n```", "```go\ngo test -v -run=Factory -cover .\n=== RUN   TestMotorbikeFactory\n--- PASS: TestMotorbikeFactory (0.00s)\n vehicle_factory_test.go:16: Motorbike vehicle has 2 wheels\n vehicle_factory_test.go:22: Sport motorbike has type 1\n=== RUN   TestCarFactory\n--- PASS: TestCarFactory (0.00s)\n vehicle_factory_test.go:36: Car vehicle has 4 seats\n vehicle_factory_test.go:42: Luxury car has 4 doors.\nPASS\ncoverage: 45.8% of statements\nok\n\n```"]