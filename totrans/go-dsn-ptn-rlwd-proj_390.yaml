- en: Prototype design pattern
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 原型设计模式
- en: The last pattern we will see in this chapter is the **Prototype** pattern. Like
    all creational patterns, this too comes in handy when creating objects, and it
    is very common to see the Prototype pattern surrounded by more patterns.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们将看到的最后一个模式是**原型模式**。像所有创建型模式一样，在创建对象时，这个模式也很有用，而且常常可以看到原型模式被更多的模式所围绕。
- en: While with the Builder pattern, we are dealing with repetitive building algorithms
    and with the factories we are simplifying the creation of many types of objects;
    with the Prototype pattern, we will use an already created instance of some type
    to clone it and complete it with the particular needs of each context. Let's see
    it in detail.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用Builder模式时，我们处理的是重复的构建算法，而使用工厂我们简化了多种类型对象的创建；在使用原型模式时，我们将使用某个类型已经创建的实例来克隆它，并按照每个上下文的特定需求来完成它。让我们详细看看。
