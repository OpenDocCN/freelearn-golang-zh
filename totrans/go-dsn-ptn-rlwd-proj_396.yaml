- en: Implementation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We will start with the `GetClone` method. This method should return an item
    of the specified type and we have three type: white, black and blue:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'So now that we have the three prototypes to work over we can implement `GetClone(s
    int)` method:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The `Shirt` structure also needs a `GetInfo` implementation to print the contents
    of the instances.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Finally, let''s run the tests to see that everything is now working:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: In the log, (remember to set the `-v` flag when running the tests) you can check
    that `shirt1` and `shirt2` have different SKUs. Also, we can see the memory positions
    of both objects. Take into account that the positions shown on your computer will
    probably be different.
  prefs: []
  type: TYPE_NORMAL
