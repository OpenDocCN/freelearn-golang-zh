- en: Implementation
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实现
- en: 'We will start with the `GetClone` method. This method should return an item
    of the specified type and we have three type: white, black and blue:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从 `GetClone` 方法开始。此方法应返回指定类型的项，我们有三种类型：白色、黑色和蓝色：
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'So now that we have the three prototypes to work over we can implement `GetClone(s
    int)` method:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了三个原型可以工作，我们可以实现 `GetClone(s int)` 方法：
- en: '[PRE1]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The `Shirt` structure also needs a `GetInfo` implementation to print the contents
    of the instances.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '`Shirt` 结构也需要一个 `GetInfo` 实现来打印实例的内容。'
- en: '[PRE2]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Finally, let''s run the tests to see that everything is now working:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们运行测试以查看现在一切是否正常工作：
- en: '[PRE3]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In the log, (remember to set the `-v` flag when running the tests) you can check
    that `shirt1` and `shirt2` have different SKUs. Also, we can see the memory positions
    of both objects. Take into account that the positions shown on your computer will
    probably be different.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在日志中，(记得在运行测试时设置 `-v` 标志) 你可以检查 `shirt1` 和 `shirt2` 有不同的 SKU。同时，我们还可以看到两个对象的内存位置。请注意，你电脑上显示的位置可能不同。
