- en: Summary
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We have seen the five main creational design patterns commonly used in the software
    industry. Their purpose is to abstract the user from the creation of objects for
    complexity or maintainability purposes. They have been the foundation of thousands
    of applications and libraries since the 1990s, and most of the software we use
    today has many of these creational patterns under the hood.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到了在软件行业中广泛使用的五种主要创建型设计模式。它们的目的在于从复杂性或可维护性角度抽象用户对对象的创建。自1990年代以来，它们一直是数千个应用程序和库的基础，而我们今天使用的多数软件都包含许多这些创建型模式在内。
- en: It's worth mentioning that these patterns are not thread-free. In a more advanced
    chapter, we will see concurrent programming in Go, and how to create some of the
    more critical design patterns using a concurrent approach.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，这些模式并非线程无锁。在更高级的章节中，我们将看到 Go 语言中的并发编程，以及如何使用并发方法创建一些更关键的设计模式。
