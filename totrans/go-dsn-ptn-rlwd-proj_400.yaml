- en: Composite design pattern
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 组合设计模式
- en: The Composite design pattern favors composition (commonly defined as a *has
    a* relationship) over inheritance (an *is a* relationship). The c*omposition over
    inheritance* approach has been a source of discussions among engineers since the
    nineties. We will learn how to create object structures by using a *has a* approach.
    All in all, Go doesn't have inheritance because it doesn't need it!
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 组合设计模式更倾向于组合（通常定义为“有一个”关系）而不是继承（“是一个”关系）。自九十年代以来，“组合优于继承”的方法一直是工程师们讨论的焦点。我们将学习如何通过使用“有一个”的方法来创建对象结构。总的来说，Go
    语言没有继承，因为它不需要它！
