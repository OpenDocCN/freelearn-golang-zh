- en: Final words on the Composite pattern
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于组合模式的最后话
- en: At this point, you should be really comfortable using the Composite design pattern.
    It's a very idiomatic Go feature, and the switch from a pure object-oriented language
    is not very painful. The Composite design pattern makes our structures predictable
    but also allows us to create most of the design patterns as we will see in later
    chapters.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你应该已经非常熟悉使用组合设计模式了。这是Go语言的一个非常地道的特性，从纯面向对象的语言转换过来并不痛苦。组合设计模式使得我们的结构可预测，同时也允许我们创建大多数设计模式，正如我们将在后面的章节中看到的。
