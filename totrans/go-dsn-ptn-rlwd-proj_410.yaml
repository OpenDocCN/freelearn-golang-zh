- en: Description
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Adapter pattern is very useful when, for example, an interface gets outdated
    and it's not possible to replace it easily or fast. Instead, you create a new
    interface to deal with the current needs of your application, which, under the
    hood, uses implementations of the old interface.
  prefs: []
  type: TYPE_NORMAL
- en: Adapter also helps us to maintain the *open/closed principle* in our apps, making
    them more predictable too. They also allow us to write code which uses some base
    that we can't modify.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The open/closed principle was first stated by Bertrand Meyer in his book *Object-Oriented
    Software Construction*. He stated that code should be open to new functionality,
    but closed to modifications. What does it mean? Well, it implies a few things.
    On one hand, we should try to write code that is extensible and not only one that
    works. At the same time, we should try not to modify the source code (yours or
    other people's) as much as we can, because we aren't always aware of the implications
    of this modification. Just keep in mind that extensibility in code is only possible
    through the use of design patterns and interface-oriented programming.
  prefs: []
  type: TYPE_NORMAL
