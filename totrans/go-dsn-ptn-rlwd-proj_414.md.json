["```go\ntype LegacyPrinter interface { \n  Print(s string) string \n} \ntype MyLegacyPrinter struct {} \n\nfunc (l *MyLegacyPrinter) Print(s string) (newMsg string) { \n  newMsg = fmt.Sprintf(\"Legacy Printer: %s\\n\", s) \n  println(newMsg) \n  return \n} \n\n```", "```go\ntype ModernPrinter interface { \n  PrintStored() string \n} \n\n```", "```go\ntype PrinterAdapter struct{ \n  OldPrinter LegacyPrinter \n  Msg        string \n} \nfunc(p *PrinterAdapter) PrintStored() (newMsg string) { \n  return \n} \n\n```", "```go\nfunc TestAdapter(t *testing.T){ \n  msg := \"Hello World!\" \n\n```", "```go\nadapter := PrinterAdapter{OldPrinter: &MyLegacyPrinter{}, Msg: msg} \n\n```", "```go\nreturnedMsg := adapter.PrintStored() \n\nif returnedMsg != \"Legacy Printer: Adapter: Hello World!\\n\" { \n  t.Errorf(\"Message didn't match: %s\\n\", returnedMsg) \n} \n\n```", "```go\nadapter = PrinterAdapter{OldPrinter: nil, Msg: msg} \nreturnedMsg = adapter.PrintStored() \n\nif returnedMsg != \"Hello World!\" { \n  t.Errorf(\"Message didn't match: %s\\n\", returnedMsg) \n} \n\n```", "```go\n$ go test -v .\n=== RUN   TestAdapter\n--- FAIL: TestAdapter (0.00s)\n adapter_test.go:11: Message didn't match: \n adapter_test.go:17: Message didn't match: \nFAIL\nexit status 1\nFAIL\n\n```"]