- en: Requirements and acceptance criteria
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'As we mentioned previously, we will have two objects (`Packt` and `Normal`
    printer) and two implementations (`PrinterImpl1` and `PrinterImpl2`) that we will
    join by using the Bridge design pattern. More or less, we will have the following
    requirements and acceptance criteria:'
  prefs: []
  type: TYPE_NORMAL
- en: A `PrinterAPI` that accepts a message to print
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An implementation of the API that simply prints the message to the console
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An implementation of the API that prints to an `io.Writer` interface
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A `Printer` abstraction with a `Print` method to implement in printing types
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A `normal` printer object, which will implement the `Printer` and the `PrinterAPI`
    interface
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `normal` printer will forward the message directly to the implementation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A `Packt` printer, which will implement the `Printer`Â abstraction and the `PrinterAPI`
    interface
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `Packt` printer will append the message `Message from Packt:` to all prints
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
