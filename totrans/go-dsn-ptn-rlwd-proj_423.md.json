["```go\ntype PrinterAPI interface { \n  PrintMessage(string) error \n} \n\n```", "```go\ntype PrinterImpl1 struct{} \n\nfunc (p *PrinterImpl1) PrintMessage(msg string) error { \n  return errors.New(\"Not implemented yet\") \n} \n\n```", "```go\nfunc TestPrintAPI1(t *testing.T){ \n  api1 := PrinterImpl1{} \n\n  err := api1.PrintMessage(\"Hello\") \n  if err != nil { \n    t.Errorf(\"Error trying to use the API1 implementation: Message: %s\\n\", err.Error()) \n  } \n} \n\n```", "```go\n$ go test -v -run=TestPrintAPI1 . \n=== RUN   TestPrintAPI1 \n--- FAIL: TestPrintAPI1 (0.00s) \n        bridge_test.go:14: Error trying to use the API1 implementation: Message: Not implemented yet \nFAIL \nexit status 1 \nFAIL    _/C_/Users/mario/Desktop/go-design-patterns/structural/bridge/traditional\n\n```", "```go\ntype PrinterImpl2 struct{ \n  Writer io.Writer \n} \n\nfunc (d *PrinterImpl2) PrintMessage(msg string) error { \n  return errors.New(\"Not implemented yet\") \n} \n\n```", "```go\ntype TestWriter struct { \n  Msg string \n} \n\nfunc (t *TestWriter) Write(p []byte) (n int, err error) { \n  n = len(p) \n  if n > 0 { \n    t.Msg = string(p) \n    return n, nil \n  } \n  err = errors.New(\"Content received on Writer was empty\") \n  return \n} \n\n```", "```go\nfunc TestPrintAPI2(t *testing.T){ \n  api2 := PrinterImpl2{} \n\n  err := api2.PrintMessage(\"Hello\") \n  if err != nil { \n    expectedErrorMessage := \"You need to pass an io.Writer to PrinterImpl2\" \n    if !strings.Contains(err.Error(), expectedErrorMessage) { \n      t.Errorf(\"Error message was not correct.\\n \n      Actual: %s\\nExpected: %s\\n\", err.Error(), expectedErrorMessage) \n    } \n  } \n\n```", "```go\n  testWriter := TestWriter{} \n  api2 = PrinterImpl2{ \n    Writer: &testWriter, \n  } \n\n  expectedMessage := \"Hello\" \n  err = api2.PrintMessage(expectedMessage) \n  if err != nil { \n    t.Errorf(\"Error trying to use the API2 implementation: %s\\n\", err.Error()) \n  } \n\n  if testWriter.Msg !=  expectedMessage { \n    t.Fatalf(\"API2 did not write correctly on the io.Writer. \\n  Actual: %s\\nExpected: %s\\n\", testWriter.Msg, expectedMessage) \n  } \n} \n\n```", "```go\n$ go test -v -run=TestPrintAPI2 .\n=== RUN   TestPrintAPI2\n--- FAIL: TestPrintAPI2 (0.00s)\nbridge_test.go:39: Error message was not correct.\nActual: Not implemented yet\nExpected: You need to pass an io.Writer to PrinterImpl2\nbridge_test.go:52: Error trying to use the API2 implementation: Not \nimplemented yet\nbridge_test.go:57: API2 did not write correctly on the io.Writer.\nActual:\nExpected: Hello\nFAIL\nexit status 1\nFAIL\n\n```", "```go\ntype PrinterAbstraction interface { \n  Print() error \n} \n\n```", "```go\ntype NormalPrinter struct { \n  Msg     string \n  Printer PrinterAPI \n} \n\nfunc (c *NormalPrinter) Print() error { \n  return errors.New(\"Not implemented yet\") \n} \n\n```", "```go\nfunc TestNormalPrinter_Print(t *testing.T) { \n  expectedMessage := \"Hello io.Writer\" \n\n  normal := NormalPrinter{ \n    Msg:expectedMessage, \n    Printer: &PrinterImpl1{}, \n  } \n\n  err := normal.Print() \n  if err != nil { \n    t.Errorf(err.Error()) \n  } \n} \n\n```", "```go\n  testWriter := TestWriter{} \n  normal = NormalPrinter{ \n    Msg: expectedMessage, \n    Printer: &PrinterImpl2{ \n      Writer:&testWriter, \n    }, \n  } \n\n  err = normal.Print() \n  if err != nil { \n    t.Error(err.Error()) \n  } \n\n  if testWriter.Msg != expectedMessage { \n    t.Errorf(\"The expected message on the io.Writer doesn't match actual.\\n  Actual: %s\\nExpected: %s\\n\", testWriter.Msg, expectedMessage) \n  } \n} \n\n```", "```go\n$ go test -v -run=TestNormalPrinter_Print .\n=== RUN   TestNormalPrinter_Print\n--- FAIL: TestNormalPrinter_Print (0.00s)\n bridge_test.go:72: Not implemented yet\n bridge_test.go:85: Not implemented yet\n bridge_test.go:89: The expected message on the io.Writer doesn't match actual.\n Actual:\n Expected: Hello io.Writer\nFAIL\nexit status 1\nFAIL\n\n```", "```go\ntype PacktPrinter struct { \n  Msg     string \n  Printer PrinterAPI \n} \n\nfunc (c *PacktPrinter) Print() error { \n  return errors.New(\"Not implemented yet\") \n} \n\n```", "```go\nfunc TestPacktPrinter_Print(t *testing.T) { \n  passedMessage := \"Hello io.Writer\" \n  expectedMessage := \"Message from Packt: Hello io.Writer\" \n\n  packt := PacktPrinter{ \n    Msg:passedMessage, \n    Printer: &PrinterImpl1{}, \n  } \n\n  err := packt.Print() \n  if err != nil { \n    t.Errorf(err.Error()) \n  } \n\n  testWriter := TestWriter{} \n  packt = PacktPrinter{ \n    Msg: passedMessage, \n    Printer:&PrinterImpl2{ \n      Writer:&testWriter, \n    }, \n  } \n\n  err = packt.Print() \n  if err != nil { \n    t.Error(err.Error()) \n  } \n\n  if testWriter.Msg != expectedMessage { \n    t.Errorf(\"The expected message on the io.Writer doesn't match actual.\\n  Actual: %s\\nExpected: %s\\n\", testWriter.Msg,expectedMessage) \n  } \n} \n\n```", "```go\n$ go test -v -run=TestPacktPrinter_Print .\n=== RUN   TestPacktPrinter_Print\n--- FAIL: TestPacktPrinter_Print (0.00s)\n bridge_test.go:104: Not implemented yet\n bridge_test.go:117: Not implemented yet\n bridge_test.go:121: The expected message on the io.Writer d\noesn't match actual.\n Actual:\n Expected: Message from Packt: Hello io.Writer\nFAIL\nexit status 1\nFAIL\n\n```"]