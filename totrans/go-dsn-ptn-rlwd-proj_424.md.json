["```go\ntype PrinterImpl1 struct{} \nfunc (d *PrinterImpl1) PrintMessage(msg string) error { \n  fmt.Printf(\"%s\\n\", msg) \n  return nil \n} \n\n```", "```go\n$ go test -v -run=TestPrintAPI1 .\n=== RUN   TestPrintAPI1\nHello\n--- PASS: TestPrintAPI1 (0.00s)\nPASS\nok\n\n```", "```go\ntype PrinterImpl2 struct { \n  Writer io.Writer \n} \n\nfunc (d *PrinterImpl2) PrintMessage(msg string) error { \n  if d.Writer == nil { \n    return errors.New(\"You need to pass an io.Writer to PrinterImpl2\") \n  } \n\n  fmt.Fprintf(d.Writer, \"%s\", msg) \n  return nil \n} \n\n```", "```go\n$ go test -v -run=TestPrintAPI2 .\n=== RUN   TestPrintAPI2\n--- PASS: TestPrintAPI2 (0.00s)\nPASS\nok\n\n```", "```go\ntype NormalPrinter struct { \n  Msg     string \n  Printer PrinterAPI \n} \n\nfunc (c *NormalPrinter) Print() error { \n  c.Printer.PrintMessage(c.Msg) \n  return nil \n}\n```", "```go\n$ go test -v -run=TestNormalPrinter_Print . \n=== RUN   TestNormalPrinter_Print \nHello io.Writer \n--- PASS: TestNormalPrinter_Print (0.00s) \nPASS \nok\n\n```", "```go\ntype PacktPrinter struct { \n  Msg     string \n  Printer PrinterAPI \n} \n\nfunc (c *PacktPrinter) Print() error { \n  c.Printer.PrintMessage(fmt.Sprintf(\"Message from Packt: %s\", c.Msg)) \n  return nil \n} \n\n```", "```go\n$ go test -v -run=TestPacktPrinter_Print .\n=== RUN   TestPacktPrinter_Print\nMessage from Packt: Hello io.Writer\n--- PASS: TestPacktPrinter_Print (0.00s)\nPASS\nok\n\n```", "```go\n$ go test -cover .\nok      \n2.622s  coverage: 100.0% of statements\n\n```"]