- en: Description
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 描述
- en: The Decorator design pattern allows you to decorate an already existing type
    with more functional features without actually touching it. How is it possible?
    Well, it uses an approach similar to *matryoshka dolls*, where you have a small
    doll that you can put inside a doll of the same shape but bigger, and so on and
    so forth.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 装饰器设计模式允许你在不实际接触的情况下，给已经存在的类型添加更多功能特性。这是如何实现的呢？嗯，它使用了一种类似于*套娃*的方法，其中你有一个小玩偶，可以放入一个形状相同但更大的玩偶中，以此类推。
- en: The Decorator type implements the same interface of the type it decorates, and
    stores an instance of that type in its members. This way, you can stack as many
    decorators (dolls) as you want by simply storing the old decorator in a field
    of the new one.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 装饰器类型实现了被装饰类型的相同接口，并在其成员中存储该类型的实例。这样，你可以通过简单地将旧装饰器存储在新装饰器的字段中来堆叠任意数量的装饰器（玩偶）。
