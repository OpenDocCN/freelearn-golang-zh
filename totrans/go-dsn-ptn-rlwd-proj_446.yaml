- en: Facade design pattern
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 外观设计模式
- en: The next pattern we'll see in this chapter is the Facade pattern. When we discussed
    the Proxy pattern, you got to know that it was a way to wrap an type to hide some
    of its features of complexity from the user. Imagine that we group many proxies
    in a single point such as a file or a library. This could be a Facade pattern.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们将看到的下一个模式是外观模式。当我们讨论代理模式时，你了解到它是一种封装类型以隐藏其部分复杂特性的方法。想象一下，我们将许多代理组合在一个单独的点，比如一个文件或一个库。这可以是一个外观模式。
