- en: Description
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 描述
- en: Flyweight is a pattern which allows sharing the state of a heavy object between
    many instances of some type. Imagine that you have to create and store too many
    objects of some heavy type that are fundamentally equal. You'll run out of memory
    pretty quickly. This problem can be easily solved with the Flyweight pattern,
    with additional help of the Factory pattern. The factory is usually in charge
    of encapsulating object creation, as we saw previously.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 享元模式是一种允许在许多实例之间共享重对象状态的模式。想象一下，你必须创建和存储大量本质上相同的重类型对象。你很快就会耗尽内存。这个问题可以通过享元模式轻松解决，再加上工厂模式的额外帮助。工厂通常负责封装对象创建，正如我们之前所看到的。
