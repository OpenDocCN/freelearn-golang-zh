["```go\nfunc (t *teamFlyweightFactory) GetTeam(teamID int) *Team { \n  if t.createdTeams[teamID] != nil { \n    return t.createdTeams[teamID] \n  } \n\n  team := getTeamFactory(teamID) \n  t.createdTeams[teamID] = &team \n\n  return t.createdTeams[teamID] \n} \n\n```", "```go\nfunc getTeamFactory(team int) Team { \n  switch team { \n    case TEAM_B: \n    return Team{ \n      ID:   2, \n      Name: TEAM_B, \n    } \n    default: \n    return Team{ \n      ID:   1, \n      Name: TEAM_A, \n    } \n  } \n} \n\n```", "```go\nfunc (t *teamFlyweightFactory) GetNumberOfObjects() int { \n  return len(t.createdTeams) \n} \n\n```", "```go\n$ go test -v -run=GetTeam . \n=== RUN   TestTeamFlyweightFactory_GetTeam \n--- FAIL: TestTeamFlyweightFactory_GetTeam (0.00s) \npanic: assignment to entry in nil map [recovered] \n        panic: assignment to entry in nil map \n\ngoroutine 5 [running]: \npanic(0x530900, 0xc0820025c0) \n        /home/mcastro/Go/src/runtime/panic.go:481 +0x3f4 \ntesting.tRunner.func1(0xc082068120) \n        /home/mcastro/Go/src/testing/testing.go:467 +0x199 \npanic(0x530900, 0xc0820025c0) \n        /home/mcastro/Go/src/runtime/panic.go:443 +0x4f7 \n/home/mcastro/go-design-patterns/structural/flyweight.(*teamFlyweightFactory).GetTeam(0xc08202fec0, 0x0, 0x0) \n        /home/mcastro/Desktop/go-design-patterns/structural/flyweight/flyweight.go:71 +0x159 \n/home/mcastro/go-design-patterns/structural/flyweight.TestTeamFlyweightFactory_GetTeam(0xc082068120) \n        /home/mcastro/Desktop/go-design-patterns/structural/flyweight/flyweight_test.go:9 +0x61 \ntesting.tRunner(0xc082068120, 0x666580) \n        /home/mcastro/Go/src/testing/testing.go:473 +0x9f \ncreated by testing.RunTests \n        /home/mcastro/Go/src/testing/testing.go:582 +0x899 \nexit status 2 \nFAIL\n\n```", "```go\nt.createdTeams[teamName] = &team \n\n```", "```go\nfactory := teamFlyweightFactory{ \n  createdTeams: make(map[int]*Team,0), \n} \n\n```", "```go\nfunc NewTeamFactory() teamFlyweightFactory { \n  return teamFlyweightFactory{ \n    createdTeams: make(map[int]*Team), \n  } \n} \n\n```", "```go\nfunc TestTeamFlyweightFactory_GetTeam(t *testing.T) { \n  factory := NewTeamFactory() \n  ... \n} \n\n```", "```go\n$ go test -v -run=GetTeam .\n=== RUN   TestTeamFlyweightFactory_GetTeam\n--- PASS: TestTeamFlyweightFactory_GetTeam (0.00s)\nPASS\nok \n\n```", "```go\nfunc Test_HighVolume(t *testing.T) { \n  factory := NewTeamFactory() \n\n  teams := make([]*Team, 500000*2) \n  for i := 0; i < 500000; i++ { \n  teams[i] = factory.GetTeam(TEAM_A) \n} \n\nfor i := 500000; i < 2*500000; i++ { \n  teams[i] = factory.GetTeam(TEAM_B) \n} \n\nif factory.GetNumberOfObjects() != 2 { \n  t.Errorf(\"The number of objects created was not 2: %d\\n\",factory.GetNumberOfObjects()) \n  } \n} \n\n```", "```go\n$ go test -v -run=Volume . \n=== RUN   Test_HighVolume \n--- PASS: Test_HighVolume (0.04s) \nPASS \nok\n\n```", "```go\nfor i:=0; i<3; i++ { \n  fmt.Printf(\"Pointer %d points to %p and is located in %p\\n\", i, teams[i], &teams[i]) \n} \n\n```", "```go\nPointer 0 points to 0xc082846000 and is located in 0xc082076000\nPointer 1 points to 0xc082846000 and is located in 0xc082076008\nPointer 2 points to 0xc082846000 and is located in 0xc082076010\n\n```"]