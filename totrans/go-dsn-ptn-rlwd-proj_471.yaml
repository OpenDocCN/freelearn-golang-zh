- en: Final words on the Strategy pattern
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于策略模式的最后几句话
- en: We have learned a powerful way to encapsulate algorithms in different structs.
    We have also used embedding instead of inheritance to provide cross-functionality
    between types, which will come in handy very often in our apps. You'll find yourself
    combining strategies here and there as we have seen in the second example, where
    we have strategies for logging and writing by using the `io.Writer` interface,
    a strategy for byte-streaming operations.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经学会了一种强大的方法来封装不同的结构体中的算法。我们还使用了嵌入（embedding）而不是继承（inheritance）来在类型之间提供跨功能性，这在我们的应用中会非常实用。你会发现自己在各个地方结合策略，就像我们在第二个例子中看到的那样，在那里我们使用了`io.Writer`接口的策略来进行日志记录和写入，以及用于字节流操作的策略。
