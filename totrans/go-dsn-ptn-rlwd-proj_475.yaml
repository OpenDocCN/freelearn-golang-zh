- en: A multi-logger chain
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 多记录器链
- en: 'We are going to develop a multi-logger solution that we can chain in the way
    we want. We will use two different console loggers and one general-purpose logger:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将开发一个多记录器解决方案，我们可以按需进行链式连接。我们将使用两个不同的控制台记录器和一个是通用记录器：
- en: We need a simple logger that logs the text of a request with a prefix *First
    logger* and passes it to the next link in the chain.
  id: totrans-2
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要一个简单的记录器，它以 *First logger* 为前缀记录请求的文本，并将其传递给链中的下一个链接。
- en: A second logger will write on the console if the incoming text has the word
    `hello` and pass the request to a third logger. But, if not, the chain will be
    broken and it will return immediately.
  id: totrans-3
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第二个记录器将在传入的文本包含单词 `hello` 时写入控制台，并将请求传递给第三个记录器。但是，如果没有，链将被断开，它将立即返回。
- en: A third logger type is a general purpose logger called `WriterLogger` that uses
    an `io.Writer` interface to log.
  id: totrans-4
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第三种记录器类型是一个名为 `WriterLogger` 的通用记录器，它使用 `io.Writer` 接口进行记录。
- en: A concrete implementation of the `WriterLogger` writes to a file and represents
    the third link in the chain.
  id: totrans-5
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`WriterLogger` 的具体实现将写入文件，并代表链中的第三个链接。'
- en: 'The implementation of these steps is described in the following figure:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这些步骤的实现描述如下图所示：
- en: '![A multi-logger chain](img/00033.jpeg)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![多记录器链](img/00033.jpeg)'
