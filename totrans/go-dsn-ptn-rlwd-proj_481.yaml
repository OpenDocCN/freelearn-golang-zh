- en: Description
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 描述
- en: The Command design pattern is quite similar to the Strategy design pattern but
    with key differences. While in the strategy pattern we focus on changing algorithms,
    in the Command pattern, we focus on the invocation of something or on the abstraction
    of some type.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 命令设计模式与策略设计模式非常相似，但有一些关键的区别。在策略模式中，我们关注算法的改变，而在命令模式中，我们关注对某物的调用或对某些类型的抽象。
- en: A Command pattern is commonly seen as a container. You put something like the
    info for user interaction on a UI that could be `click on login` and pass it as
    a command. You don't need to have the complexity related to the `click on login`
    action in the command but simply the action itself.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 命令模式通常被视为一个容器。你可以在UI上放置一些用户交互的信息，比如“点击登录”，并将其作为命令传递。你不需要在命令中包含与“点击登录”动作相关的复杂性，只需包含动作本身即可。
- en: An example for the organic world would be a box for a delivery company. We can
    put anything on it but, as a delivery company, we are interested in managing the
    box instead of its contents directly.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 对于有机世界的一个例子是快递公司的箱子。我们可以在上面放置任何东西，但作为一个快递公司，我们更感兴趣的是管理箱子而不是直接管理其内容。
- en: The command pattern will be used heavily when dealing with channels. With channels
    you can send any message through it but, if we need a response from the receiving
    side of the channel, a common approach is to create a command that has a second,
    response channel attached where we are listening.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 当处理通道时，命令模式会被大量使用。通过通道，你可以发送任何消息，但如果我们需要从通道的接收端获得响应，一个常见的做法是创建一个带有第二个、响应通道的命令，我们在那里监听。
- en: Similarly, a good example would be a multi-player video game, where every stroke
    of each user can be sent as commands to the rest of the users through the network.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，一个很好的例子是多玩家视频游戏，其中每个用户的每一个操作都可以通过网络作为命令发送给其他用户。
