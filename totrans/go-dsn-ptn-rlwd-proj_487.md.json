["```go\ntype Command interface { \n  Info() string \n} \n\n```", "```go\ntype TimePassed struct { \n  start time.Time \n} \n\nfunc (t *TimePassed) Info() string { \n  return time.Since(t.start).String() \n} \n\n```", "```go\ntype ChainLogger interface { \n  Next(Command) \n} \n\n```", "```go\ntype Logger struct { \n  NextChain ChainLogger \n} \n\nfunc (f *Logger) Next(c Command) { \n  time.Sleep(time.Second) \n\n  fmt.Printf(\"Elapsed time from creation: %s\\n\", c.Info()) \n\n  if f.NextChain != nil { \n    f.NextChain.Next(c) \n  } \n} \n\n```", "```go\nfunc main() { \n  second := new(Logger) \n  first := Logger{NextChain: second} \n\n  command := &TimePassed{start: time.Now()} \n\n  first.Next(command) \n} \n\n```", "```go\ngo run chain_command.go\nElapsed time from creation: 1.0003419s\nElapsed time from creation: 2.000682s\n\n```"]