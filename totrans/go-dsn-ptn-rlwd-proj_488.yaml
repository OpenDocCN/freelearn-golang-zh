- en: Rounding-up the Command pattern up
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 简要总结命令模式
- en: Command is a very tiny design pattern; its functionality is quite easy to understand
    but it's widely used for its simplicity. It looks very similar to the Strategy
    pattern but remember that Strategy is about having many algorithms to achieve
    some specific task, but all of them achieve the same task. In the Command pattern,
    you have many tasks to execute, and not all of them need to be equal.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 命令模式是一个非常微小的设计模式；它的功能非常容易理解，但由于其简单性而被广泛使用。它看起来与策略模式非常相似，但请记住，策略模式是关于拥有许多算法来完成某些特定任务，但所有这些算法都完成相同的任务。在命令模式中，你有许多任务需要执行，并不是所有任务都需要相等。
- en: So, in short, the Command pattern is about execution encapsulation and delegation
    so that just the receiver or receivers trigger that execution.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，简而言之，命令模式是关于执行封装和委派，以便只有接收者或接收者触发执行。
