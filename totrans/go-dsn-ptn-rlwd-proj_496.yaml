- en: Unit tests for the simple algorithm
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 简单算法的单元测试
- en: 'We will focus on testing the public methods only. This is a very common approach.
    All in all, if your private methods aren''t called from some level of the public
    ones, they aren''t called at all. We need two interfaces here, one for the Template
    implementors and one for the abstract step of the algorithm:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将只关注测试公共方法。这是一个非常常见的做法。总的来说，如果你的私有方法没有被公共方法中的某个级别调用，那么它们根本就不会被调用。这里我们需要两个接口，一个用于模板实现者，一个用于算法的抽象步骤：
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'A Template implementor will accept a `MessageRetriever` interface to execute
    as part of its execution algorithm. We need a type that implements this interface
    called `Template`, we will call it `TemplateImpl`:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 一个模板实现者将接受一个`MessageRetriever`接口作为其执行算法的一部分。我们需要一个实现此接口的类型，我们将其称为`Template`，我们将称之为`TemplateImpl`：
- en: '[PRE1]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'So our first test checks the fourth and fifth acceptance criteria. We will
    create the `TestStruct` type that implements the `MessageRetriever` interface
    returning the string `world` and has embedded the Template so that it can call
    the `ExecuteAlgorithm` method. It will act as the Template and the abstraction:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们的第一个测试检查的是第四和第五个验收标准。我们将创建一个实现`MessageRetriever`接口并返回字符串`world`的`TestStruct`类型，并且它已经嵌入模板，以便可以调用`ExecuteAlgorithm`方法。它将充当模板和抽象：
- en: '[PRE2]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: First, we will define the `TestStruct` type. In this case, the part of the algorithm
    deferred to us is going to return the `world` text. This is the string we will
    look for later in the test doing a check of type "is the word `world` present
    on this string?".
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将定义`TestStruct`类型。在这种情况下，算法中推迟给我们执行的部分将返回`world`文本。这是我们将在测试中稍后查找的字符串，进行类型检查“这个字符串中是否包含单词`world`？”。
- en: Take a close look, the `TestStruct` embeds a type called `Template` which represents
    the Template pattern of our algorithm.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 仔细观察，`TestStruct`嵌入了一个名为`Template`的类型，它代表了我们的算法的模板模式。
- en: 'When we implement the `Message()` method, we are implicitly implementing the
    `MessageRetriever` interface. So now we can use `TestStruct` type as a pointer
    to a `MessageRetriever` interface:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们实现`Message()`方法时，我们实际上是在隐式实现`MessageRetriever`接口。因此，现在我们可以使用`TestStruct`类型作为指向`MessageRetriever`接口的指针：
- en: '[PRE3]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In the test, we will use the type we have just created. When we call the `ExecuteAlgorithm`
    method, we need to pass the `MessageRetriever` interface. As the `TestStruct`
    type also implements the `MessageRetriever` interface, we can pass it as an argument,
    but this is not mandatory, of course.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在测试中，我们将使用我们刚刚创建的类型。当我们调用`ExecuteAlgorithm`方法时，我们需要传递`MessageRetriever`接口。由于`TestStruct`类型也实现了`MessageRetriever`接口，我们可以将其作为参数传递，但这不是强制性的。
- en: The result of the `ExecuteAlgorithm` method, as defined in the fifth acceptance
    criterion, must return a string that contains the returned value of the `first()` method,
    the returned value of `TestStruct` (the `world` string) and the returned value
    of the `third()` method separated by a space. Our implementation is on the second
    place; that's why we checked that a space is prefixed and suffixed on the string
    `world`.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 根据第五个验收标准定义的`ExecuteAlgorithm`方法的结果必须返回一个包含`first()`方法的返回值、`TestStruct`（即`world`字符串）的返回值和`third()`方法的返回值，并用空格分隔的字符串。我们的实现位于第二个位置；这就是为什么我们检查了字符串`world`前后的空格。
- en: So, if the returned string, when calling the `ExecuteAlgorithm` method, doesn't
    contain the string `world`, the test fails.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，当调用`ExecuteAlgorithm`方法返回的字符串不包含字符串`world`时，测试将失败。
- en: 'This is enough to make the project compile and run the tests that should fail:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这就足够让项目编译并运行应该失败的测试：
- en: '[PRE4]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Time to pass to the implementation of this pattern.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候将这个模式的具体实现付诸实践了。
