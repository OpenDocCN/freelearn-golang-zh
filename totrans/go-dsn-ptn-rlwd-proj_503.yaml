- en: Description
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The meaning of memento is very similar to the functionality it provides in design
    patterns. Basically, we'll have a type with some state and we want to be able
    to save milestones of its state. Having a finite amount of states saved, we can
    recover them if necessary for a variety of tasks-undo operations, historic, and
    so on.
  prefs: []
  type: TYPE_NORMAL
- en: 'The Memento design pattern usually has three players (usually called **actors**):'
  prefs: []
  type: TYPE_NORMAL
- en: '**Memento**: A type that stores the type we want to save. Usually, we won''t
    store the business type directly and we provide an extra layer of abstraction
    through this type.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Originator**: A type that is in charge of creating mementos and storing the
    current active state. We said that the Memento type wraps states of the business
    type and we use originator as the creator of mementos.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Care Taker**: A type that stores the list of mementos that can have the logic
    to store them in a database or to not store more than a specified number of them.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
