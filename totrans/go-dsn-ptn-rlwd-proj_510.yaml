- en: Last words on the Memento pattern
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于备忘录模式的最后几句话
- en: 'With the Memento pattern, we have learned a powerful way to create undoable
    operations that are very useful when writing UI applications but also when you
    have to develop transactional operations. In any case, the situation is the same:
    you need a `Memento`, an `Originator`, and a `caretaker` actor.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 通过备忘录模式，我们学会了一种创建可撤销操作的有效方法，这在编写UI应用程序时非常有用，而且在开发事务操作时也同样如此。无论如何，情况都是一样的：你需要一个`备忘录`，一个`发起者`和一个`保管者`演员。
- en: Tip
  id: totrans-2
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: A **transaction operation** is a set of atomic operations that must all be done
    or fail. In other words, if you have a transaction composed of five operations
    and just one of them fails, the transaction cannot be completed and every modification
    done by the other four must be undone.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**事务操作**是一组原子操作，必须全部完成或失败。换句话说，如果你有一个由五个操作组成的事务，只要其中一个操作失败，事务就无法完成，其他四个操作所做的所有修改都必须撤销。'
