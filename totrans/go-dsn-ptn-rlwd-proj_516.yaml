- en: Unit test of some operations
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一些操作的单元测试
- en: 'In this case, we will only have a public method called `Calculate` that takes
    an operation with its values defined as a string and will return a value or an
    error:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们只会有一个公开的方法 `Calculate`，它接受一个定义为字符串的操作及其值，并将返回一个值或一个错误：
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'So, we will send a string like `"3 4 +"` to the `Calculate` method and it should
    return *7, nil*. Two tests more will check the correct implementation:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们将发送一个类似 `"3 4 +"` 的字符串到 `Calculate` 方法，它应该返回 *7, nil*。另外两个测试将检查正确的实现：
- en: '[PRE1]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'First, we are going to make the operation we have used as an example. The `3
    4 sum 2 sub` notation is part of our language and we use it in the `Calculate`
    function. If an error is returned, the test fails. Finally, the result must be
    equal to `5` and we check it on the last lines. The next test checks the rest
    of the operators on slightly more complex operations:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将使用作为例子的操作。`3 4 sum 2 sub` 符号是我们语言的一部分，我们在 `Calculate` 函数中使用它。如果返回错误，测试将失败。最后，结果必须等于
    `5`，我们将在最后一行进行检查。下一个测试将检查其他操作符在稍微复杂一些的操作上的表现：
- en: '[PRE2]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Here, we repeated the preceding process with a longer operation, the *(((5
    - 3) * 8) + 4) / 5* notation which is equal to *4*. From left to right, it would
    be as follows:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们重复了前面的过程，使用了一个更长的操作，即 *(((5 - 3) * 8) + 4) / 5* 符号，它等于 *4*。从左到右，它将是以下这样：
- en: '[PRE3]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The test must fail, of course!
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，测试必须失败！
- en: '[PRE4]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
