- en: Description
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 描述
- en: The idea behind the Observer pattern is simple--to subscribe to some event that
    will trigger some behavior on many subscribed types. Why is this so interesting?
    Because we uncouple an event from its possible handlers.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 观察者模式背后的理念很简单——订阅某些事件，这些事件将在许多已订阅的类型上触发某些行为。为什么这如此有趣？因为我们解耦了事件与其可能的处理器。
- en: For example, imagine a login button. We could code that when the user clicks
    the button, the button color changes, an action is executed, and a form check
    is performed in the background. But with the Observer pattern, the type that changes
    the color will subscribe to the event of the clicking of the button. The type
    that checks the form and the type that performs an action will subscribe to this
    event too.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，想象一个登录按钮。我们可以编写代码，当用户点击按钮时，按钮颜色改变，执行一个动作，并在后台执行表单检查。但是，使用观察者模式，改变颜色的类型将订阅按钮点击的事件。检查表单的类型和执行动作的类型也将订阅这个事件。
