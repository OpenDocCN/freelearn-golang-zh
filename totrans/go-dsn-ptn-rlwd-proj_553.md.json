["```go\nfunc (s *Publisher) AddObserver(o Observer) { \n  s.ObserversList = append(s.ObserversList, o) \n} \n\n```", "```go\ngo test -v\n=== RUN   TestSubject\n=== RUN   TestSubject/AddObserver\n=== RUN   TestSubject/RemoveObserver\n=== RUN   TestSubject/Notify\n--- FAIL: TestSubject (0.00s)\n --- PASS: TestSubject/AddObserver (0.00s)\n --- FAIL: TestSubject/RemoveObserver (0.00s)\n observer_test.go:40: The size of the observer list is not the expected. 3 != 3\n --- FAIL: TestSubject/Notify (0.00s)\n observer_test.go:87: Expected message on observer 1 was not expected: 'default' != 'Hello World!'\n observer_test.go:87: Expected message on observer 2 was not expected: 'default' != 'Hello World!'\n observer_test.go:87: Expected message on observer 3 was not expected: 'default' != 'Hello World!'\nFAIL\nexit status 1\nFAIL\n\n```", "```go\nfunc (s *Publisher) RemoveObserver(o Observer) { \n  var indexToRemove int \n\n  for i, observer := range s.ObserversList { \n    if observer == o { \n      indexToRemove = i \n      break \n    } \n  } \n\n  s.ObserversList = append(s.ObserversList[:indexToRemove], s.ObserversList[indexToRemove+1:]...) \n} \n\n```", "```go\ngo test -v           \n=== RUN   TestSubject \n=== RUN   TestSubject/AddObserver \n=== RUN   TestSubject/RemoveObserver \n=== RUN   TestSubject/Notify \n--- FAIL: TestSubject (0.00s) \n    --- PASS: TestSubject/AddObserver (0.00s) \n    --- PASS: TestSubject/RemoveObserver (0.00s) \n    --- FAIL: TestSubject/Notify (0.00s) \n        observer_test.go:87: Expected message on observer 1 was not expected: 'default' != 'Hello World!' \n        observer_test.go:87: Expected message on observer 3 was not expected: 'default' != 'Hello World!' \nFAIL \nexit status 1 \nFAIL \n\n```", "```go\nfunc (s *Publisher) NotifyObservers(m string) { \n  fmt.Printf(\"Publisher received message '%s' to notify observers\\n\", m) \n  for _, observer := range s.ObserversList { \n    observer.Notify(m) \n  } \n} \n\n```", "```go\ngo test -v \n=== RUN   TestSubject \n=== RUN   TestSubject/AddObserver \n=== RUN   TestSubject/RemoveObserver \n=== RUN   TestSubject/Notify \nPublisher received message 'Hello World!' to notify observers \nObserver 1: message 'Hello World!' received  \nObserver 3: message 'Hello World!' received  \n--- PASS: TestSubject (0.00s) \n    --- PASS: TestSubject/AddObserver (0.00s) \n    --- PASS: TestSubject/RemoveObserver (0.00s) \n    --- PASS: TestSubject/Notify (0.00s) \nPASS \nok\n\n```", "```go\nhey! I have received the message  'Hello World!' and I'm going to pass the same message to the observers \n```", "```go\nhey, I'm observer 1 and I have received the message 'Hello World!'\n```"]