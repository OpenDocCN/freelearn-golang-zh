- en: CSP versus actor-based concurrency
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The most common and, perhaps, intuitive way to think about concurrency is close
    to the way the actor model works.
  prefs: []
  type: TYPE_NORMAL
- en: '![CSP versus actor-based concurrency](img/00036.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: In the actor model, if **Actor 1** wants to communicate with **Actor 2**, then
    **Actor 1** must know **Actor 2** first; for example, it must have its process
    ID, maybe from the creation step, and put a message on its inbox queue. After
    placing the message, **Actor 1** can continue its tasks without getting blocked
    if **Actor 2** cannot process the message immediately.
  prefs: []
  type: TYPE_NORMAL
- en: 'CSP, on the other side, introduces a new entity into the equation-channels.
    Channels are the way to communicate between processes because they are completely
    anonymous (unlike actors, where we need to know their process IDs). In the case
    of CSP, we don''t have a process ID to use to communicate. Instead, we have to
    create a channel to the processes to allow incoming and outgoing communication.
    In this case, what we know that the receiver is the channel it uses to receive
    data:'
  prefs: []
  type: TYPE_NORMAL
- en: '![CSP versus actor-based concurrency](img/00037.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: In this diagram, we can see that the processes are anonymous, but we have a
    channel with ID 1, that is, **Channel 1**, which connects them together. This
    abstraction does not tell us how many processes are on each side of the channel;
    it simply connects them and allows communication between processes by using the
    channel.
  prefs: []
  type: TYPE_NORMAL
- en: The key here is that channels isolate both extremes so that process A can send
    data through a channel that will be handled by potentially one or more processes
    that' are transparent to A. It also works the same in reverse; process B can receive
    data from many channels one at a time.
  prefs: []
  type: TYPE_NORMAL
