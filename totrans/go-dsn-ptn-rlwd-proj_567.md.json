["```go\n$ go run -race main.go \n10\n\n```", "```go\nfor i := 0; i < 10; i++ { \n  go func(i int) { \n    //counter.Lock() \n    counter.value++ \n    //counter.Unlock() \n  }(i) \n} \n\n```", "```go\n$ go run -race main.go \n==================\nWARNING: DATA RACE\nRead at 0x00c42007a068 by goroutine 6:\n main.main.func1()\n [some_path]/concurrency/locks/main.go:19 +0x44\nPrevious write at 0x00c42007a068 by goroutine 5:\n main.main.func1()\n [some_path]/concurrency/locks/main.go:19 +0x60\nGoroutine 6 (running) created at:\n main.main()\n [some_path]/concurrency/locks/main.go:21 +0xb6\nGoroutine 5 (finished) created at:\n main.main()\n [some_path]/concurrency/locks/main.go:21 +0xb6\n==================\n10\nFound 1 data race(s)\nexit status 66\n\n```", "```go\npackage main \n\nimport \"sync\" \n\ntype Counter struct { \n  sync.Mutex \n  value int \n} \n\nfunc main() { \n  counter := Counter{} \n\n  for i := 0; i < 1; i++ { \n    go func(i int) { \n      counter.value++ \n    }(i) \n  } \n} \n\n```", "```go\n$ go run -race main.go\n$\n\n```", "```go\nfor i := 0; i < 2; i++ { \n  go func(i int) { \n    counter.value++ \n  }(i) \n} \n\n```", "```go\n$ go run -race main.go\nWARNING: DATA RACE\nRead at 0x00c42007a008 by goroutine 6:\n main.main.func1()\n [some_path]concurrency/race_detector/main.go:15 +0x44\nPrevious write at 0x00c42007a008 by goroutine 5:\n main.main.func1()\n [some_path]/concurrency/race_detector/main.go:15 +0x60\nGoroutine 6 (running) created at:\n main.main()\n [some_path]/concurrency/race_detector/main.go:16 +0xad\nGoroutine 5 (finished) created at:\n main.main()\n [some_path]/concurrency/race_detector/main.go:16 +0xad\n==================\nFound 1 data race(s)\nexit status 66\n\n```", "```go\n$ GOMAXPROCS=1 go run -race main.go\n$\n\n```"]