["```go\nfunc sendString(ch chan<- string, s string) { \n  ch <- s \n} \n\n```", "```go\nfunc receiver(helloCh, goodbyeCh <-chan string, quitCh chan<- bool) { \n  for { \n    select { \n    case msg := <-helloCh: \n      println(msg) \n    case msg := <-goodbyeCh: \n      println(msg) \n    case <-time.After(time.Second * 2): \n      println(\"Nothing received in 2 seconds. Exiting\") \n      quitCh <- true \n      break \n    } \n  } \n} \n\n```", "```go\npackage main \nimport \"time\" \n\nfunc main() { \n  helloCh := make(chan string, 1) \n  goodbyeCh := make(chan string, 1) \n  quitCh := make(chan bool) \n  go receiver(helloCh, goodbyeCh, quitCh) \n\n  go sendString(helloCh, \"hello!\") \n\n  time.Sleep(time.Second) \n\n  go sendString(goodbyeCh, \"goodbye!\") \n  <-quitCh \n} \n\n```", "```go\n$ go run main.go\n\nhello!\ngoodbye!\nNothing received in 2 seconds. Exiting\n\n```"]