- en: Ranging over channels too!
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 也可以在通道上进行范围遍历！
- en: 'The last feature about channels that we will see is ranging over channels.
    We are talking about the range keyword. We have used it extensively to range over
    lists, and we can use it to range over a channel too:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要看到的通道的最后一个特性是遍历通道。我们正在讨论范围关键字。我们已经广泛地使用它来遍历列表，我们也可以用它来遍历通道：
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In this case, we have created an unbuffered channel, but it would work with
    a buffered one too. We launched a function in a new Goroutine that sends the number
    "1" over a channel, waits a second, sends the number "2", and closes the channel.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们创建了一个无缓冲通道，但它也可以与缓冲通道一起工作。我们在新的 Goroutine 中启动了一个函数，该函数通过通道发送数字 "1"，等待一秒钟，然后发送数字
    "2"，并关闭通道。
- en: The last step is to range over the channel. The syntax is quite similar to a
    list range. We store the incoming data from the channel in the variable `v` and
    we print this variable to the console. The range keeps iterating until the channel
    is closed, taking data from the channel.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步是遍历通道。语法与列表范围非常相似。我们将从通道接收到的数据存储在变量 `v` 中，并将此变量打印到控制台。范围会一直迭代，直到通道关闭，从通道中获取数据。
- en: Can you guess the output of this little program?
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 你能猜出这个小程序的输出吗？
- en: '[PRE1]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Again, not very impressive. It prints the number "1", then waits a second, prints
    the number "2", and exits the application.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，并不非常令人印象深刻。它打印数字 "1"，然后等待一秒钟，打印数字 "2"，然后退出应用程序。
- en: According to the design of this concurrent app, the range was iterates over
    possible incoming data from the
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 根据这个并发应用的设计，范围遍历了可能的传入数据
- en: channel
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: channel
- en: until the concurrent Goroutine closes this channel. At that moment, the range
    finishes and the app can exit.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 直到并发 Goroutine 关闭此通道。在那个时刻，范围结束，应用可以退出。
- en: Range is very useful in taking data from a channel, and it's commonly used in
    fan-in patterns where many different Goroutines send data to the same channel.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 范围在从通道获取数据时非常有用，并且它通常用于扇入模式，其中许多不同的 Goroutine 将数据发送到同一个通道。
