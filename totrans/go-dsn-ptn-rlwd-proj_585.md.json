["```go\npackage barrier \n\nimport ( \n    \"fmt\" \n    \"io/ioutil\" \n    \"net/http\" \n    \"time\" \n) \n\nvar timeoutMilliseconds int = 5000 \n\n```", "```go\ntype barrierResp struct { \n    Err  error \n    Resp string \n} \n\n```", "```go\nfunc barrier(endpoints ...string) { \n    requestNumber := len(endpoints) \n\n    in := make(chan barrierResp, requestNumber) \n    defer close(in) \n\n    responses := make([]barrierResp, requestNumber) \n\n    for _, endpoint := range endpoints { \n        go makeRequest(in, endpoint) \n    } \n\n    var hasError bool \n    for i := 0; i < requestNumber; i++ { \n        resp := <-in \n        if resp.Err != nil { \n            fmt.Println(\"ERROR: \", resp.Err) \n            hasError = true \n        } \n        responses[i] = resp \n    } \n\n    if !hasError { \n        for _, resp := range responses { \n            fmt.Println(resp.Resp) \n        } \n    } \n} \n\n```", "```go\nfunc makeRequest(out chan<- barrierResp, url string) { \n    res := barrierResp{} \n    client := http.Client{ \n        Timeout: time.Duration(time.Duration(timeoutMilliseconds) * time.Millisecond), \n    } \n\n    resp, err := client.Get(url) \n    if err != nil { \n        res.Err = err \n        out <- res \n        return \n    } \n\n    byt, err := ioutil.ReadAll(resp.Body) \n    if err != nil { \n        res.Err = err \n        out <- res \n        return \n    } \n\n    res.Resp = string(byt) \n    out <- res \n} \n\n```", "```go\ngo test -run=TestBarrier/Correct_endpoints -v .\n=== RUN   TestBarrier\n=== RUN   TestBarrier/Correct_endpoints\n--- PASS: TestBarrier (0.54s)\n --- PASS: TestBarrier/Correct_endpoints (0.54s)\n barrier_test.go:20: {\n \"headers\": {\n \"Accept-Encoding\": \"gzip\", \n\"Host\": \"httpbin.org\",\n\"User-Agent\": \"Go-http-client/1.1\"\n }\n }\n {\n \"User-Agent\": \"Go-http-client/1.1\"\n } \n ok\n\n```", "```go\ngo test -run=TestBarrier/One_endpoint_incorrect -v .\n=== RUN   TestBarrier\n=== RUN   TestBarrier/One_endpoint_incorrect\n--- PASS: TestBarrier (0.27s)\n --- PASS: TestBarrier/One_endpoint_incorrect (0.27s)\n barrier_test.go:31: ERROR:  Get http://malformed-url: dial tcp: lookup malformed-url: no such host\nok\n\n```", "```go\ngo test -run=TestBarrier/Very_short_timeout -v .     \n=== RUN   TestBarrier \n=== RUN   TestBarrier/Very_short_timeout \n--- PASS: TestBarrier (0.00s) \n    --- PASS: TestBarrier/Very_short_timeout (0.00s) \n        barrier_test.go:43: ERROR:  Get http://httpbin.org/User-Agent: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers) \n        ERROR:  Get http://httpbin.org/headers: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers) \n\nok\n\n```"]