- en: Waiting for responses with the Barrier design pattern
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用屏障设计模式等待响应
- en: The Barrier pattern opens the door of microservices programming with its composable
    nature. It could be considered a Structural pattern, as you can imagine.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 屏障模式凭借其可组合的特性，打开了微服务编程的大门。它可以被看作是一种结构型模式，正如你可以想象的那样。
- en: The Barrier pattern is not only useful to make network requests; we could also
    use it to split some task into multiple Goroutines. For example, an expensive
    operation could be split into a few smaller operations distributed in different
    Goroutines to maximize parallelism and achieve better performance.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 屏障模式不仅对发起网络请求很有用；我们还可以用它将某些任务拆分成多个 Goroutines。例如，可以将耗时的操作拆分成几个较小的操作，分布在不同的 Goroutines
    中，以最大化并行性并实现更好的性能。
