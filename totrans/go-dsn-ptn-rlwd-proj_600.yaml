- en: Beginning with tests
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从测试开始
- en: 'We will create only one function that will manage everything. We will call
    this function `LaunchPipeline` to simplify things. It will take an integer as
    an argument, which will be our N number, the number of items in our list. The
    declaration in the implementation file looks like this:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将只创建一个函数来管理所有事情。我们将把这个函数命名为`LaunchPipeline`以简化问题。它将接受一个整数作为参数，这将是我们的N数字，即列表中的项目数量。在实现文件中的声明看起来是这样的：
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'In our test file, we will create a table of tests by using a slice of slices:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的测试文件中，我们将通过使用切片的切片来创建一个测试表：
- en: '[PRE1]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Our table is a slice of slices of integer types. On each slice, the first integer
    represents the list size and the second position represents the item within the
    list. It is, effectively, a matrix. When passing 3, it must return 14\. When passing
    5, it must return 55\. Then we have to iterate over the table and pass the first
    index of each array to the `LaunchPipeline` function:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的这个表是整数类型的切片的切片。在每一片上，第一个整数代表列表的大小，第二个位置代表列表中的项目。实际上，它是一个矩阵。当传入3时，它必须返回14。当传入5时，它必须返回55。然后我们必须遍历这个表，并将每个数组的第一个索引传递给`LaunchPipeline`函数：
- en: '[PRE2]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Using `range`, we get every row in the matrix . Each row is contained in a
    temporary variable called `test`. `test[0]` represents `N` and `test[1]` the expected
    result. We compare the expected result with the returning value of the `LaunchPipeline`
    function. If they aren''t the same, the test fails:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`range`，我们得到矩阵中的每一行。每一行都包含在一个名为`test`的临时变量中。`test[0]`代表`N`，`test[1]`代表预期的结果。我们比较预期的结果与`LaunchPipeline`函数返回的值。如果它们不相同，测试就会失败：
- en: '[PRE3]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
