["```go\n   // workers_pipeline.go \n    func main() { \n        bufferSize := 100 \n        var dispatcher Dispatcher = NewDispatcher(bufferSize) \n\n```", "```go\n    workers := 3 \n    for i := 0; i < workers; i++ { \n        var w WorkerLauncher = &PreffixSuffixWorker{ \n            prefixS: fmt.Sprintf(\"WorkerID: %d -> \", i), \n            suffixS: \" World\", \n            id:i, \n        } \n        dispatcher.LaunchWorker(w) \n    } \n\n```", "```go\n    requests := 10 \n\n    var wg sync.WaitGroup \n    wg.Add(requests) \n\n```", "```go\n    for i := 0; i < requests; i++ { \n        req := NewStringRequest(\"(Msg_id: %d) -> Hello\", i, &wg) \n        dispatcher.MakeRequest(req) \n    } \n\n    dispatcher.Stop() \n\n    wg.Wait() \n}\n```", "```go\n go run *\n WorkerID: 1 -> (MSG_ID: 0) -> HELLO World\n WorkerID: 0 -> (MSG_ID: 3) -> HELLO World\n WorkerID: 0 -> (MSG_ID: 4) -> HELLO World\n WorkerID: 0 -> (MSG_ID: 5) -> HELLO World\n WorkerID: 2 -> (MSG_ID: 2) -> HELLO World\n WorkerID: 1 -> (MSG_ID: 1) -> HELLO World\n WorkerID: 0 -> (MSG_ID: 6) -> HELLO World\n WorkerID: 2 -> (MSG_ID: 9) -> HELLO World\n WorkerID: 0 -> (MSG_ID: 7) -> HELLO World\n WorkerID: 0 -> (MSG_ID: 8) -> HELLO World\n\n```"]