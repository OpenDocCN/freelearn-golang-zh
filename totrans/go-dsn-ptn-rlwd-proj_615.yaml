- en: Description
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If you remember from the previous explanation, the Observer pattern maintains
    a list of observers or subscribers that want to be notified of a particular event.
    In this case, each subscriber is going to run in a different Goroutine as well
    as the publisher. We will have new problems with building this structure:'
  prefs: []
  type: TYPE_NORMAL
- en: Now, the access to the list of subscribers must be serialized. If we are reading
    the list with one Goroutine, we cannot be removing a subscriber from it or we
    will have a race.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When a subscriber is removed, the subscriber's Goroutine must be closed too,
    or it will keep iterating forever and we will run into Goroutine leaks.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When stopping the publisher, all subscribers must stop their Goroutines, too.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
