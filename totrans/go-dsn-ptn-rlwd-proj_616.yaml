- en: Objectives
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The objectives of this publish/subscriber are the same as the ones we wrote
    on the Observer pattern. The difference here is the way we will develop it. The
    idea is to make a concurrent structure to achieve the same functionality, which
    isÂ as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Providing an event-driven architecture where one event can trigger one or more
    actions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Uncoupling the actions that are performed from the event that triggers them
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Providing more than one source event that triggers the same action
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The idea is to uncouple senders from receivers, hiding from the sender the identity
    of the receivers that will process its event, and hiding the receivers from the
    number of senders that can communicate with them.
  prefs: []
  type: TYPE_NORMAL
- en: In particular, if I develop a click in a button in some application, it could
    do something (such as log us in somewhere). Weeks later, we might decide to make
    it show a popup, too. If, every time we want to add some functionality to this
    button, we have to change the code where it handles the click action, that function
    will become huge and not very portable to other projects. If we use a publisher
    and one observer for every action, the click function only needs to publish one
    single event using a publisher, and we will just write subscribers to this event
    every time we want to improve the functionality. This is especially important
    in applications with user interfaces where many things to do in a single UI action
    can slow the responsiveness of an interface, completely destroying the user experience.
  prefs: []
  type: TYPE_NORMAL
- en: By using a concurrent structure to develop the Observer pattern, a UI cannot
    feel all the tasks that are being executed in the background if a concurrent structure
    is defined and the device allows us to execute parallel tasks.
  prefs: []
  type: TYPE_NORMAL
