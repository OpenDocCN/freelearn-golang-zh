- en: Summary
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We have seen few approaches to develop concurrent structures that can be run
    in parallel. We have tried to show a few ways to solve the same problem, one without
    concurrency primitives and one with them. We have seen how different the publish/subscriber
    example written with a concurrent structure can be compared to the classic one.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到很少有关开发可以并行运行的并发结构的方案。我们尝试展示了解决同一问题的几种方法，一种没有并发原语，另一种有。我们看到了使用并发结构编写的发布/订阅示例与经典示例相比有多么不同。
- en: We have also seen how to build a concurrent operation using a pipeline and we
    have parallelize it by using a worker pool, a very common Go pattern to maximize
    parallelism.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还看到了如何使用管道构建并发操作，并通过使用工作池来并行化它，这是Go语言中非常常见的一种模式，用于最大化并行性。
- en: Both examples were simple enough to grasp, while digging as much as possible
    in to the nature of the Go language instead of in the problem itself.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个示例都足够简单，易于理解，同时尽可能深入挖掘Go语言的本质，而不是问题本身。
