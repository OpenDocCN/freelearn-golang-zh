- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We have seen few approaches to develop concurrent structures that can be run
    in parallel. We have tried to show a few ways to solve the same problem, one without
    concurrency primitives and one with them. We have seen how different the publish/subscriber
    example written with a concurrent structure can be compared toÂ the classic one.
  prefs: []
  type: TYPE_NORMAL
- en: We have also seen how to build a concurrent operation using a pipeline and we
    have parallelize it by using a worker pool, a very common Go pattern to maximize
    parallelism.
  prefs: []
  type: TYPE_NORMAL
- en: Both examples were simple enough to grasp, while digging as much as possible
    in to the nature of the Go language instead of in the problem itself.
  prefs: []
  type: TYPE_NORMAL
