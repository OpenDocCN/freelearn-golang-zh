["```go\nHello {{name}}, how are you? \n\n```", "```go\nHello Bruce, how are you? \n\n```", "```go\n<html> \n  <head> \n    <title>Chat</title> \n  </head> \n  <body> \n    Let's chat (from template) \n  </body> \n</html> \n\n```", "```go\n// templ represents a single template \ntype templateHandler struct { \n  once     sync.Once \n  filename string \n  templ    *template.Template \n} \n// ServeHTTP handles the HTTP request. \nfunc (t *templateHandler) ServeHTTP(w http.ResponseWriter, r  *http.Request) { \n  t.once.Do(func() { \n    t.templ =  template.Must(template.ParseFiles(filepath.Join(\"templates\",\n      t.filename))) \n  }) \n  t.templ.Execute(w, nil) \n} \n\n```", "```go\nfunc main() { \n  // root \n  http.Handle(\"/\", &templateHandler{filename: \"chat.html\"}) \n  // start the web server \n  if err := http.ListenAndServe(\":8080\", nil); err != nil { \n    log.Fatal(\"ListenAndServe:\", err) \n  } \n} \n\n```"]