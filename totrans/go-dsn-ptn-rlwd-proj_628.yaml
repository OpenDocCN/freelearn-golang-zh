- en: Modeling a chat room and clients on the server
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在服务器上模拟聊天室和客户端
- en: All users (clients) of our chat application will automatically be placed in
    one big public room where everyone can chat with everyone else. The `room` type
    will be responsible for managing client connections and routing messages in and
    out, while the `client` type represents the connection to a single client.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们聊天应用的所有用户（客户端）将自动被放置在一个大型的公共聊天室中，每个人都可以与其他人聊天。`room`类型将负责管理客户端连接和消息的进出路由，而`client`类型代表与单个客户端的连接。
- en: Tip
  id: totrans-2
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Go refers to classes as types and instances of those classes as objects.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Go将类称为类型，将那些类的实例称为对象。
- en: To manage our web sockets, we are going to use one of the most powerful aspects
    of the Go community open source third-party packages. Every day, new packages
    solving real-world problems are released, ready for you to use in your own projects,
    and they even allow you to add features, report and fix bugs, and get support.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 为了管理我们的Web sockets，我们将使用Go社区开源第三方包中最强大的功能之一。每天都有新的包解决现实世界的问题，供你用于自己的项目，它们甚至允许你添加功能、报告和修复错误，以及获得支持。
- en: Tip
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: It is often unwise to reinvent the wheel unless you have a very good reason.
    So before embarking on building a new package, it is worth searching for any existing
    projects that might have already solved your very problem. If you find one similar
    project that doesn't quite satisfy your needs, consider contributing to the project
    and adding features. Go has a particularly active open source community (remember
    that Go itself is open source) that is always ready to welcome new faces or avatars.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 除非你有非常充分的理由，否则重造轮子通常是不明智的。所以在开始构建新的包之前，值得搜索一下可能已经解决了你问题的现有项目。如果你找到一个类似的项目，但它并不完全满足你的需求，考虑为该项目做出贡献并添加新功能。Go有一个特别活跃的开源社区（记住Go本身也是开源的），它总是准备好欢迎新成员或头像。
- en: We are going to use Gorilla Project's `websocket` package to handle our server-side
    sockets rather than write our own. If you're curious about how it works, head
    over to the project home page on GitHub, [https://github.com/gorilla/websocket](https://github.com/gorilla/websocket),
    and browse the open source code.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用Gorilla Project的`websocket`包来处理我们的服务器端套接字，而不是自己编写。如果你对它是如何工作的感兴趣，请前往GitHub上的项目主页[https://github.com/gorilla/websocket](https://github.com/gorilla/websocket)，浏览开源代码。
