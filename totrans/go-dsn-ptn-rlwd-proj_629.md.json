["```go\npackage main  \nimport ( \n  \"github.com/gorilla/websocket\" \n) \n// client represents a single chatting user. \ntype client struct { \n  // socket is the web socket for this client. \n  socket *websocket.Conn \n  // send is a channel on which messages are sent. \n  send chan []byte \n  // room is the room this client is chatting in. \n  room *room \n} \n\n```", "```go\ngo get github.com/gorilla/websocket\n\n```", "```go\n./client.go:17 undefined: room\n\n```", "```go\npackage main \ntype room struct { \n  // forward is a channel that holds incoming messages \n  // that should be forwarded to the other clients. \n  forward chan []byte \n} \n\n```", "```go\nfunc (c *client) read() { \n  defer c.socket.Close() \n  for { \n    _, msg, err := c.socket.ReadMessage() \n    if err != nil { \n      return \n    } \n    c.room.forward <- msg \n  } \n} \nfunc (c *client) write() { \n  defer c.socket.Close() \n  for msg := range c.send { \n    err := c.socket.WriteMessage(websocket.TextMessage, msg) \n    if err != nil { \n      return \n    } \n  } \n} \n\n```"]