- en: Modeling a room
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We need a way for clients to join and leave rooms in order to ensure that the `c.room.forward
    <- msg` code in the preceding section actually forwards the message to all the
    clients. To ensure that we are not trying to access the same data at the same
    time, a sensible approach is to use two channels: one that will add a client to
    the room and another that will remove it. Let''s update our `room.go` code to
    look like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'We have added three fields: two channels and a map. The `join` and `leave`
    channels exist simply to allow us to safely add and remove clients from the `clients`
    map. If we were to access the map directly, it is possible that two goroutines
    running concurrently might try to modify the map at the same time, resulting in
    corrupt memory or unpredictable state.'
  prefs: []
  type: TYPE_NORMAL
