- en: Using helper functions to remove complexity
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用辅助函数来简化复杂性
- en: 'Our room is almost ready to go, although in order for it to be of any use,
    the channels and map need to be created. As it is, this could be achieved by asking
    the developer to use the following code to be sure to do this:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的房间几乎准备好了，尽管为了使其变得有用，需要创建通道和映射。目前，这可以通过要求开发者使用以下代码来实现，以确保完成这项工作：
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Another, slightly more elegant, solution is to instead provide a `newRoom`
    function that does this for us. This removes the need for others to know about
    exactly what needs to be done in order for our room to be useful. Underneath the `type
    room struct` definition, add this function:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种，稍微更优雅的解决方案是提供一个`newRoom`函数来为我们完成这项工作。这样，其他人就不需要知道为了使我们的房间变得有用，具体需要做什么。在`type
    room struct`定义下面，添加这个函数：
- en: '[PRE1]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Now the users of our code need only call the `newRoom` function instead of the
    more verbose six lines of code.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们的代码使用者只需要调用`newRoom`函数，而不是更冗长的六行代码。
