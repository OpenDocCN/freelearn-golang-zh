- en: Building an HTML and JavaScript chat client
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In order for the users of our chat application to interact with the server and
    therefore other users, we need to write some client-side code that makes use of
    the web sockets found in modern browsers. We are already delivering HTML content
    via the template when users hit the root of our application, so we can enhance
    that.
  prefs: []
  type: TYPE_NORMAL
- en: 'Update the `chat.html` file in the `templates` folder with the following markup:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The preceding HTML will render a simple web form on the page containing a text
    area and a **Send** button this is how our users will submit messages to the server.
    The `messages` element in the preceding code will contain the text of the chat
    messages so that all the users can see what is being said. Next, we need to add
    some JavaScript to add some functionality to our page. Underneath the `form` tag,
    above the closing `</body>` tag, insert the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The `socket = new WebSocket("ws://localhost:8080/room")` line is where we open
    the socket and add event handlers for two key events: `onclose` and `onmessage`.
    When the socket receives a message, we use jQuery to append the message to the
    list element and thus present it to the user.
  prefs: []
  type: TYPE_NORMAL
- en: Submitting the HTML form triggers a call to `socket.send`, which is how we send
    messages to the server.
  prefs: []
  type: TYPE_NORMAL
- en: Build and run the program again to ensure the templates recompile so these changes
    are represented.
  prefs: []
  type: TYPE_NORMAL
- en: 'Navigate to `http://localhost:8080/` in two separate browsers (or two tabs
    of the same browser) and play with the application. You will notice that messages
    sent from one client appear instantly in the other clients:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Building an HTML and JavaScript chat client](img/00044.jpeg)'
  prefs: []
  type: TYPE_IMG
