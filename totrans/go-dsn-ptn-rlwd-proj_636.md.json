["```go\nif err := http.ListenAndServe(\":8080\", nil); err != nil { \n  log.Fatal(\"ListenAndServe:\", err) \n} \n\n```", "```go\nsocket = new WebSocket(\"ws://localhost:8080/room\"); \n\n```", "```go\nfunc main() {   \n  var addr = flag.String(\"addr\", \":8080\", \"The addr of the  application.\") \n  flag.Parse() // parse the flags \n  r := newRoom() \n  http.Handle(\"/\", &templateHandler{filename: \"chat.html\"}) \n  http.Handle(\"/room\", r) \n  // get the room going \n  go r.run() \n  // start the web server \n  log.Println(\"Starting web server on\", *addr) \n  if err := http.ListenAndServe(*addr, nil); err != nil { \n    log.Fatal(\"ListenAndServe:\", err) \n  } \n} \n\n```", "```go\nfunc (t *templateHandler) ServeHTTP(w http.ResponseWriter, r  *http.Request) { \n  t.once.Do(func() { \n    t.templ =  template.Must(template.ParseFiles(filepath.Join(\"templates\",\n      t.filename))) \n  }) \n  t.templ.Execute(w, r) \n} \n\n```", "```go\nsocket = new WebSocket(\"ws://{{.Host}}/room\"); \n\n```", "```go\ngo build -o chat \n./chat -addr=\":3000\" \n\n```"]