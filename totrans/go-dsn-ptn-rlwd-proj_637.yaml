- en: Tracing code to get a look under the hood
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The only way we will know that our application is working is by opening two
    or more browsers and using our UI to send messages. In other words, we are manually
    testing our code. This is fine for experimental projects such as our chat application
    or small projects that aren't expected to grow, but if our code is to have a longer
    life or be worked on by more than one person, manual testing of this kind becomes
    a liability. We are not going to tackle **Test-driven Development** (**TDD**)
    for our chat program, but we should explore another useful debugging technique
    called **tracing**.
  prefs: []
  type: TYPE_NORMAL
- en: Tracing is a practice by which we log or print key steps in the flow of a program
    to make what is going on under the covers visible. In the previous section, we
    added aÂ `log.Println` call to output the address that the chat program was binding
    to. In this section, we are going to formalize this and write our own complete
    tracing package.
  prefs: []
  type: TYPE_NORMAL
- en: We are going to explore TDD practices when writing our tracing code because
    TDD is a perfect example of a package that we are likely to reuse, add to, share,
    and hopefully, even open source.
  prefs: []
  type: TYPE_NORMAL
