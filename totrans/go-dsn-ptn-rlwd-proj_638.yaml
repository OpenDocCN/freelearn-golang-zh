- en: Writing a package using TDD
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 TDD 编写包
- en: Packages in Go are organized into folders, with one package per folder. It is
    a build error to have differing package declarations within the same folder because
    all sibling files are expected to contribute to a single package. Go has no concept
    of subpackages, which means nested packages (in nested folders) exist only for
    aesthetic or informational reasons but do not inherit any functionality or visibility
    from super packages. In our chat application, all of our files contributed to
    the `main` package because we wanted to build an executable tool. Our tracing
    package will never be run directly, so it can and should use a different package
    name. We will also need to think about the **Application Programming Interface**
    (**API**) of our package, considering how to model a package so that it remains
    as extensible and flexible as possible for users. This includes the fields, functions,
    methods, and types that should be exported (visible to the user) and remain hidden
    for simplicity's sake.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Go 中的包组织到文件夹中，每个文件夹一个包。在同一个文件夹内有不同的包声明会导致构建错误，因为所有兄弟文件都预期为单个包做出贡献。Go 没有子包的概念，这意味着嵌套包（在嵌套文件夹中）仅存在于美学或信息目的，但不会从父包继承任何功能或可见性。在我们的聊天应用中，所有文件都贡献给了`main`包，因为我们想构建一个可执行的工具。我们的跟踪包永远不会直接运行，因此它可以，并且应该使用不同的包名。我们还需要考虑我们包的**应用程序编程接口**（**API**），考虑如何构建一个包，使其尽可能地对用户具有可扩展性和灵活性。这包括应该导出（对用户可见）并为了简单起见保持隐藏的字段、函数、方法和类型。
- en: Note
  id: totrans-2
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Go uses capitalization of names to denote which items are exported such that
    names that begin with a capital letter (for example, `Tracer`) are visible to
    users of a package, and names that begin with a lowercase letter (for example, `templateHandler`)
    are hidden or private.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Go 使用名称的字母大小写来表示哪些项是导出的，这意味着以大写字母开头的名称（例如，`Tracer`）对包的用户可见，而以小写字母开头的名称（例如，`templateHandler`）则是隐藏的或私有的。
- en: 'Create a new folder called `trace`, which will be the name of our tracing package,
    alongside the `chat` folder so that the folder structure now looks like this:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个名为`trace`的新文件夹，这将是我们跟踪包的名称，与`chat`文件夹并列，这样文件夹结构现在看起来像这样：
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Before we jump into code, let''s agree on some design goals for our package
    by which we can measure success:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始编写代码之前，让我们就我们的包的一些设计目标达成一致，通过这些目标我们可以衡量成功：
- en: The package should be easy to use
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该包应该易于使用
- en: Unit tests should cover the functionality
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单元测试应该覆盖功能
- en: Users should have the flexibility to replace the tracer with their own implementation
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户应该有灵活性，可以用自己的实现替换跟踪器
