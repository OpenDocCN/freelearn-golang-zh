- en: Interfaces
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Interfaces in Go are an extremely powerful language feature that allows us to
    define an API without being strict or specific on the implementation details.
    Wherever possible, describing the basic building blocks of your packages using
    interfaces usually ends up paying dividends down the road, and this is where we
    will start for our tracing package.
  prefs: []
  type: TYPE_NORMAL
- en: 'Create a new file called `tracer.go` inside the `trace` folder and write the
    following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The first thing to notice is that we have defined our package as `trace`.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: While it is a good practice to have the folder name match the package name,
    Go tools do not enforce it, which means you are free to name them differently
    if it makes sense. Remember, when people import your package, they will type the
    name of the folder, and if suddenly a package with a different name is imported,
    it could get confusing.
  prefs: []
  type: TYPE_NORMAL
- en: Our `Tracer` type (the capital `T` means we intend this to be a publicly visible
    type) is an interface that describes a single method called `Trace`. The `...interface{}`
    argument type states that our `Trace` method will accept zero or more arguments
    of any type. You might think that this is a redundant provision as the method
    should just take a single string (we want to just trace out some string of characters,
    don't we?). However, consider functions such as `fmt.Sprint` and `log.Fatal`,
    both of which follow a pattern littered throughout Go's standard library that
    provides a helpful shortcut when trying to communicate multiple things in one
    go. Wherever possible, we should follow such patterns and practices because we
    want our own APIs to be familiar and clear to the Go community.
  prefs: []
  type: TYPE_NORMAL
