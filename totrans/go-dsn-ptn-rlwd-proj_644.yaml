- en: Clean package APIs
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 清洁的包 API
- en: 'A quick glance at the API (in this context, the exposed variables, methods,
    and types) for our `trace` package highlights that a simple and obvious design
    has emerged:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 快速浏览我们的 `trace` 包的 API（在这个上下文中，指的是暴露的变量、方法和类型），可以突出一个简单且明显的设计已经出现：
- en: The `New()` - method-creates a new instance of a Tracer
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: The `New()` - 方法创建一个 Tracer 的新实例
- en: The `Off()` - method-gets a Tracer that does nothing
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: The `Off()` - 方法获取一个不执行任何操作的 Tracer
- en: The `Tracer` interface - describes the methods Tracer objects will implement
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: The `Tracer` 接口 - 描述 Tracer 对象将实现的方法
- en: I would be very confident to give this package to a Go programmer without any
    documentation or guidelines, and I'm pretty sure they would know what do to with
    it.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我非常自信地将这个包提供给一个没有文档或指南的 Go 程序员，而且我相当确信他们会知道如何使用它。
- en: Note
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: In Go, adding documentation is as simple as adding comments to the line before
    each item. The blog post on the subject is a worthwhile read ([http://blog.golang.org/godoc-documenting-go-code](http://blog.golang.org/godoc-documenting-go-code)),
    where you can see a copy of the hosted source code for `tracer.go` that is an
    example of how you might annotate the `trace` package. For more information, refer
    to [https://github.com/matryer/goblueprints/blob/master/chapter1/trace/tracer.go](https://github.com/matryer/goblueprints/blob/master/chapter1/trace/tracer.go).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Go 语言中，添加文档就像在每一项之前添加注释一样简单。关于这个主题的博客文章值得一读（[http://blog.golang.org/godoc-documenting-go-code](http://blog.golang.org/godoc-documenting-go-code)），在那里你可以看到托管源代码的副本，例如
    `tracer.go`，它展示了如何注释 `trace` 包。更多信息，请参阅 [https://github.com/matryer/goblueprints/blob/master/chapter1/trace/tracer.go](https://github.com/matryer/goblueprints/blob/master/chapter1/trace/tracer.go)。
