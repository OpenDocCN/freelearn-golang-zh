- en: Making a pretty social sign-in page
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 制作一个美观的社交登录页面
- en: So far, we haven't paid much attention to making our application look nice;
    after all, this book is about Go and not user interface development. However,
    there is no excuse for building ugly apps, and so we will build a social sign-in
    page that is as pretty as it is functional.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们并没有太多关注使我们的应用程序看起来更美观；毕竟，这本书是关于 Go 语言，而不是用户界面开发。然而，没有理由去构建丑陋的应用程序，因此我们将构建一个既美观又实用的社交登录页面。
- en: Bootstrap is a frontend framework for developing responsive projects on the
    Web. It provides CSS and JavaScript code that solve many user interface problems
    in a consistent and good-looking way. While sites built using Bootstrap tend to
    look the same (although there are a plenty of ways in which the UI can be customized),
    it is a great choice for early versions of apps or for developers who don't have
    access to designers.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 是一个用于在 Web 上开发响应式项目的前端框架。它提供了一致的、看起来很好的 CSS 和 JavaScript 代码，以解决许多用户界面问题。虽然使用
    Bootstrap 构建网站往往看起来很相似（尽管有大量方法可以自定义 UI），但它对于应用程序的早期版本或没有设计师的开发商来说是一个很好的选择。
- en: Tip
  id: totrans-3
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: If you build your application using the semantic standards set forth by Bootstrap,
    it will become easy for you to make a Bootstrap theme for your site or application,
    and you know it will slot right into your code.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用 Bootstrap 提出的语义标准构建你的应用程序，那么为你的网站或应用程序制作 Bootstrap 主题将变得容易，而且你知道它将完美地嵌入到你的代码中。
- en: We will use the version of Bootstrap hosted on a CDN so we don't have to worry
    about downloading and serving our own version through our chat application. This
    means that in order to render our pages properly, we will need an active Internet
    connection even during development.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用托管在 CDN 上的 Bootstrap 版本，这样我们就不必担心在我们的聊天应用程序中下载和提供自己的版本。这意味着为了正确渲染我们的页面，即使在开发过程中，我们也需要一个活跃的互联网连接。
- en: 'If you prefer to download and host your own copy of Bootstrap, you can do so.
    Keep the files in an `assets` folder and add the following call to your `main`
    function (it uses `http.Handle` to serve the assets via your application):'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你更喜欢下载并托管你自己的 Bootstrap 版本，你可以这样做。将文件保存在一个 `assets` 文件夹中，并在你的 `main` 函数中添加以下调用（它使用
    `http.Handle` 通过你的应用程序提供资源）：
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Notice how the `http.StripPrefix` and `http.FileServer` functions return objects
    that satisfy the `http.Handler` interface as per the decorator pattern that we
    implement with our `MustAuth` helper function.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 注意 `http.StripPrefix` 和 `http.FileServer` 函数返回的对象如何满足我们通过 `MustAuth` 辅助函数实现的装饰器模式下的
    `http.Handler` 接口。
- en: 'In `main.go`, let''s add an endpoint for the login page:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `main.go` 文件中，让我们为登录页面添加一个端点：
- en: '[PRE1]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Obviously, we do not want to use the `MustAuth` method for our login page because
    it will cause an infinite redirection loop.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，我们不想在我们的登录页面使用 `MustAuth` 方法，因为它会导致无限重定向循环。
- en: 'Create a new file called `login.html` inside our `templates` folder and insert
    the following HTML code:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的 `templates` 文件夹内创建一个名为 `login.html` 的新文件，并插入以下 HTML 代码：
- en: '[PRE2]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Restart the web server and navigate to `http://localhost:8080/login`. You will
    notice that it now displays our **Sign in** page:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 重新启动网络服务器，并导航到 `http://localhost:8080/login`。你会注意到现在它显示了我们的 **登录** 页面：
- en: '![Making a pretty social sign-in page](img/00047.jpeg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![制作一个美观的社交登录页面](img/00047.jpeg)'
