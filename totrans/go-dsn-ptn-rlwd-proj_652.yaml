- en: Tell the authorization providers about your app
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 告知授权提供者关于你的应用
- en: 'Before we ask an authorization provider to help our users sign in, we must
    tell them about our application. Most providers have some kind of web tool or
    console where you can create applications to kick this process off. Here''s one
    from Google:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们请求授权提供者帮助我们的用户登录之前，我们必须向他们介绍我们的应用程序。大多数提供者都提供某种类型的网络工具或控制台，你可以在这里创建应用程序以启动此过程。以下是一个来自Google的示例：
- en: '![Tell the authorization providers about your app](img/00048.jpeg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![告知授权提供者关于你的应用](img/00048.jpeg)'
- en: In order to identify the client application, we need to create a client ID and
    secret. Despite the fact that OAuth2 is an open standard, each provider has their
    own language and mechanism to set things up. Therefore, you will most likely have
    to play around with the user interface or the documentation to figure it out in
    each case.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 为了识别客户端应用程序，我们需要创建一个客户端ID和密钥。尽管OAuth2是一个开放标准，但每个提供者都有自己的语言和机制来设置这些设置。因此，你很可能会不得不在每个案例中与用户界面或文档进行交互，以找出如何操作。
- en: At the time of writing, in **Google Cloud Console**, you navigate to **API Manager**
    and click on the **Credentials** section.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，在**Google Cloud Console**中，你需导航到**API Manager**并点击**Credentials**部分。
- en: In most cases, for added security, you have to be explicit about the host URLs
    from where requests will come. For now, since we're hosting our app locally on
    `localhost:8080`, you should use it. You will also be asked for a redirect URI
    that is the endpoint in our chat application and to which the user will be redirected
    after they successfully sign in. The callback will be another action in `loginHandler`,
    so the redirect URL for the Google client will be `http://localhost:8080/auth/callback/google`.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，为了增加安全性，你必须明确指出请求将来自哪个主机URL。目前，由于我们正在本地托管我们的应用程序在`localhost:8080`，你应该使用它。你还将被要求提供一个重定向URI，这是我们聊天应用程序的端点，用户在成功登录后将被重定向到该端点。回调将是`loginHandler`中的另一个操作，因此Google客户端的重定向URL将是`http://localhost:8080/auth/callback/google`。
- en: Once you finish the authorization process for the providers you want to support,
    you will be given a client ID and secret for each provider. Make a note of these
    details because we will need them when we set up the providers in our chat application.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你完成了你想要支持的提供者的授权过程，你将为每个提供者获得一个客户端ID和密钥。请记住这些详细信息，因为在我们设置聊天应用程序中的提供者时，我们将需要它们。
- en: Note
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If we host our application on a real domain, we have to create new client IDs
    and secrets or update the appropriate URL fields on our authorization providers
    to ensure that they point to the right place. Either way, it is good practice
    to have a different set of development and production keys for security.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们将我们的应用程序托管在真实域名上，我们必须创建新的客户端ID和密钥，或者更新我们的授权提供者上的适当URL字段，以确保它们指向正确的位置。无论如何，出于安全考虑，拥有不同的一套开发和生产密钥是良好的实践。
