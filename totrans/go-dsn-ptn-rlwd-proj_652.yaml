- en: Tell the authorization providers about your app
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Before we ask an authorization provider to help our users sign in, we must
    tell them about our application. Most providers have some kind of web tool or
    console where you can create applications to kick this process off. Here''s one
    from Google:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Tell the authorization providers about your app](img/00048.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: In order to identify the client application, we need to create a client ID and
    secret. Despite the fact that OAuth2 is an open standard, each provider has their
    own language and mechanism to set things up. Therefore, you will most likely have
    to play around with the user interface or the documentation to figure it out in
    each case.
  prefs: []
  type: TYPE_NORMAL
- en: At the time of writing, in **Google Cloud Console**, you navigate to **API Manager**
    and click on the **Credentials** section.
  prefs: []
  type: TYPE_NORMAL
- en: In most cases, for added security, you have to be explicit about the host URLs
    from where requests will come. For now, since we're hosting our app locally on
    `localhost:8080`, you should use it. You will also be asked for a redirect URI
    that is the endpoint in our chat application and to which the user will be redirected
    after they successfully sign in. The callback will be another action in `loginHandler`,
    so the redirect URL for the Google client will be `http://localhost:8080/auth/callback/google`.
  prefs: []
  type: TYPE_NORMAL
- en: Once you finish the authorization process for the providers you want to support,
    you will be given a client ID and secret for each provider. Make a note of these
    details because we will need them when we set up the providers in our chat application.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If we host our application on a real domain, we have to create new client IDs
    and secrets or update the appropriate URL fields on our authorization providers
    to ensure that they point to the right place. Either way, it is good practice
    to have a different set of development and production keys for security.
  prefs: []
  type: TYPE_NORMAL
