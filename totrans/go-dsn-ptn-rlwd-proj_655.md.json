["```go\nhttp://localhost:8080/auth/callback/google?code=4/Q92xJ- BQfoX6PHhzkjhgtyfLc0Ylm.QqV4u9AbA9sYguyfbjFEsNoJKMOjQI \n\n```", "```go\ncase \"callback\": \n  provider, err := gomniauth.Provider(provider) \n  if err != nil { \n    http.Error(w, fmt.Sprintf(\"Error when trying to get provider %s: %s\",    \n    provider, err), http.StatusBadRequest) \n    return \n  } \n  creds, err :=  provider.CompleteAuth(objx.MustFromURLQuery(r.URL.RawQuery)) \n  if err != nil { \n    http.Error(w, fmt.Sprintf(\"Error when trying to complete auth for \n    %s: %s\", provider, err), http.StatusInternalServerError) \n    return \n  } \n  user, err := provider.GetUser(creds) \n  if err != nil { \n    http.Error(w, fmt.Sprintf(\"Error when trying to get user from %s: %s\", \n    provider, err), http.StatusInternalServerError) \n    return \n  } \n  authCookieValue := objx.New(map[string]interface{}{ \n    \"name\": user.Name(), \n  }).MustBase64() \n  http.SetCookie(w, &http.Cookie{ \n    Name:  \"auth\", \n    Value: authCookieValue, \n    Path:  \"/\"}) \n  w.Header().Set(\"Location\", \"/chat\") \n  w.WriteHeader(http.StatusTemporaryRedirect) \n\n```", "```go\ngo build -o chat\n./chat -host=\":8080\"\n\n```"]