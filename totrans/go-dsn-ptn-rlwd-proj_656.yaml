- en: Presenting the user data
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 展示用户数据
- en: Having the user data inside a cookie is a good start, but non-technical people
    will never even know it's there, so we must bring the data to the fore. We will
    do this by enhancing `templateHandler` that first passes the user data to the
    template's `Execute` method; this allows us to use template annotations in our
    HTML to display the user data to the users.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 将用户数据放在 cookie 中是一个好的开始，但非技术人员永远不会知道它的存在，因此我们必须将数据带到前台。我们将通过增强 `templateHandler`
    来实现这一点，首先将用户数据传递给模板的 `Execute` 方法；这允许我们在 HTML 中使用模板注解来向用户显示用户数据。
- en: 'Update the `ServeHTTP` method of `templateHandler` in `main.go`:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 更新 `main.go` 中的 `templateHandler` 的 `ServeHTTP` 方法：
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Instead of just passing the entire `http.Request` object to our template as
    data, we are creating a new `map[string]interface{}` definition for a data object
    that potentially has two fields: `Host` and `UserData` (the latter will only appear
    if an `auth` cookie is present). By specifying the map type followed by curly
    braces, we are able to add the `Host` entry at the same time as making our map
    while avoiding the `make` keyword altogether. We then pass this new `data` object
    as the second argument to the `Execute` method on our template.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不是将整个 `http.Request` 对象作为数据传递给我们的模板，而是在一个可能有两个字段的数据对象 `map[string]interface{}`
    定义中创建一个新的定义：`Host` 和 `UserData`（后者只有在存在 `auth` cookie 时才会出现）。通过指定映射类型后跟大括号，我们能够在创建映射的同时添加
    `Host` 条目，同时完全避免使用 `make` 关键字。然后我们将这个新的 `data` 对象作为第二个参数传递给模板上的 `Execute` 方法。
- en: 'Now we add an HTML file to our template source to display the name. Update
    the `chatbox` form in `chat.html`:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们向模板源添加一个 HTML 文件来显示名字。更新 `chat.html` 中的 `chatbox` 表单：
- en: '[PRE1]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The `{{.UserData.name}}` annotation tells the template engine to insert our
    user's name before the `textarea` control.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '`{{.UserData.name}}` 注解告诉模板引擎在 `textarea` 控件前插入我们的用户名。'
- en: Tip
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Since we're using the `objx` package, don't forget to run `go get http://github.com/stretchr/objx`
    and import it. Additional dependencies add complexity to projects, so you may
    decide to copy and paste the appropriate functions from the package or even write
    your own code that marshals between Base64-encoded cookies and back.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们正在使用 `objx` 包，别忘了运行 `go get http://github.com/stretchr/objx` 并导入它。额外的依赖项会增加项目的复杂性，因此你可能决定从包中复制粘贴适当的函数，甚至编写自己的代码，在
    Base64 编码的 cookie 和回之间进行序列化和反序列化。
- en: Alternatively, you can **vendor** the dependency by copying the whole source
    code to your project (inside a root-level folder called `vendor`). Go will, at
    build time, first check the vendor folder for any imported packages before checking
    them in `$GOPATH` (which were put there by `go get`). This allows you to fix the
    exact version of a dependency rather than rely on the fact that the source package
    hasn't changed since you wrote your code.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，你可以通过复制整个源代码到你的项目（在名为 `vendor` 的根级文件夹中）来**供应商**依赖项。在构建时，Go 会首先检查 `vendor`
    文件夹中是否有任何导入的包，然后再检查 `$GOPATH`（由 `go get` 放置的）。这允许你修复依赖项的确切版本，而不是依赖于源包自你编写代码以来没有改变的事实。
- en: For more information about using vendors in Go, check out Daniel Theophanes'
    post on the subject at [https://blog.gopheracademy.com/advent-2015/vendor-folder/](https://blog.gopheracademy.com/advent-2015/vendor-folder/)
    or search for `vendoring in Go`.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 想了解更多关于在 Go 中使用供应商的信息，请查看 Daniel Theophanes 在 [https://blog.gopheracademy.com/advent-2015/vendor-folder/](https://blog.gopheracademy.com/advent-2015/vendor-folder/)
    关于这个主题的帖子，或者搜索 `vendoring in Go`。
- en: 'Rebuild and run the chat application again and you will notice the addition
    of your name before the chat box:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 再次重建并运行聊天应用，你会在聊天框前注意到你的名字：
- en: '[PRE2]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
