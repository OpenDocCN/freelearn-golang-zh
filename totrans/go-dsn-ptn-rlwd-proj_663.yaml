- en: Adding the avatar to the user interface
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加头像到用户界面
- en: 'Now that our JavaScript client gets an avatar URL value via the socket, we
    can use it to display the image alongside the messages. We do this by updating
    the `socket.onmessage` code in `chat.html`:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们JavaScript客户端通过socket获取到头像URL值，我们可以用它来显示与消息并排的图像。我们通过更新`chat.html`中的`socket.onmessage`代码来实现这一点：
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: When we receive a message, we will insert an `img` tag with the source set to
    the `AvatarURL` field. We will use jQuery's `css` method to force a width of `50`
    pixels. This protects us from massive pictures spoiling our interface and allows
    us to align the image to the middle of the surrounding text.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们收到一条消息时，我们会插入一个`img`标签，将其`src`属性设置为`AvatarURL`字段。我们将使用jQuery的`css`方法强制设置宽度为`50`像素。这可以保护我们免受大量图片破坏我们的界面，并允许我们将图片与周围文本居中对齐。
- en: If we build and run our application having logged in with a previous version,
    you will find that the `auth` cookie that doesn't contain the avatar URL is still
    there. We are not asked to authenticate again (since we are already logged in),
    and the code that adds the `avatar_url` field never gets a chance to run. We could
    delete our cookie and refresh the page, but we would have to keep doing this whenever
    we make changes during development. Let's solve this problem properly by adding
    a logout feature.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们使用之前版本登录并构建运行我们的应用程序，你会发现仍然存在一个不包含头像URL的`auth`cookie。我们没有再次被要求进行身份验证（因为我们已经登录），并且添加`avatar_url`字段的代码从未有机会运行。我们可以删除我们的cookie并刷新页面，但每次我们在开发过程中进行更改时，我们都需要这样做。让我们通过添加注销功能来正确解决这个问题。
