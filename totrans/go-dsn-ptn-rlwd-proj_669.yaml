- en: User identification
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用户识别
- en: In order to uniquely identify our users, we are going to copy Gravatar's approach
    by hashing their e-mail address and using the resulting string as an identifier.
    We will store the user ID in the cookie along with the rest of the user-specific
    data. This will actually have the added benefit of removing the inefficiency associated
    with continuous hashing from `GravatarAuth`.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 为了唯一标识我们的用户，我们将通过散列他们的电子邮件地址并使用生成的字符串作为标识符来复制Gravatar的方法。我们将把用户ID存储在cookie中，与用户特定的其他数据一起。这实际上还有一个额外的优点，就是消除了与`GravatarAuth`的连续散列相关的低效性。
- en: 'In `auth.go`, replace the code that creates the `authCookieValue` object with
    the following code:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在`auth.go`中，用以下代码替换创建`authCookieValue`对象的代码：
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Here, we have hashed the e-mail address and stored the resulting value in the
    `userid` field at the point at which the user logs in. From now on, we can use
    this value in our Gravatar code instead of hashing the e-mail address for every
    message. To do this, first, we update the test by removing the following line
    from `avatar_test.go`:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们已经散列了电子邮件地址，并在用户登录时将生成的值存储在`userid`字段中。从现在起，我们可以在我们的Gravatar代码中使用这个值，而不是为每条消息散列电子邮件地址。为此，首先，我们通过从`avatar_test.go`中删除以下行来更新测试：
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We then replace the preceding line with this line:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们将前面的行替换为这一行：
- en: '[PRE2]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: We no longer need to set the `email` field since it is not used; instead, we
    just have to set an appropriate value to the new `userid` field. However, if you
    run `go test` in a terminal, you will see this test fail.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不再需要设置`email`字段，因为它不再被使用；相反，我们只需为新`userid`字段设置一个适当的值。然而，如果你在终端中运行`go test`，你会看到这个测试失败。
- en: 'To make the test pass, in `avatar.go`, update the `GetAvatarURL` method for
    the `GravatarAuth` type:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使测试通过，在`avatar.go`中，更新`GravatarAuth`类型的`GetAvatarURL`方法：
- en: '[PRE3]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This won't change the behavior, but it allows us to make an unexpected optimization,
    which is a great example of why you shouldn't optimize code too early the inefficiencies
    that you spot early on may not last long enough to warrant the effort required
    to fix them.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这不会改变行为，但它允许我们进行一个意外的优化，这是一个很好的例子，说明为什么你不应该过早地优化代码——你早期发现的低效性可能不足以证明修复它们所需的努力。
