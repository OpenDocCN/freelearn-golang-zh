- en: Serving the images
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now that we have a place to keep our user''s avatar images on the server, we
    need a way to make them accessible to the browser. We do this using the `net/http`
    package''s built-in file server. In `main.go`, add the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: This is actually a single line of code that has been broken up to improve readability.
    The `http.Handle` call should feel familiar, as we are specifying that we want
    to map the `/avatars/` path with the specified handler this is where things get
    interesting. Both `http.StripPrefix` and `http.FileServer` return `http.Handler`,
    and they make use of the wrapping pattern we learned about in the previous chapter.
    The `StripPrefix` function takes `http.Handler` in, modifies the path by removing
    the specified prefix, and passes the functionality onto an inner handler. In our
    case, the inner handler is an `http.FileServer` handler that will simply serve
    static files, provide index listings, and generate the `404 Not Found` error if
    it cannot find the file. The `http.Dir` function allows us to specify which folder
    we want to expose publicly.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If we didn't strip the `/avatars/` prefix from the requests with `http.StripPrefix`,
    the file server would look for another folder called `avatars` inside the actual
    `avatars` folder, that is, `/avatars/avatars/filename` instead of `/avatars/filename`.
  prefs: []
  type: TYPE_NORMAL
- en: Let's build the program and run it before opening `http://localhost:8080/avatars/`
    in a browser. You'll notice that the file server has generated a listing of the
    files inside our `avatars` folder. Clicking on a file will either download the
    file, or in the case of an image, simply display it. If you haven't done this
    already, go to `http://localhost:8080/upload` and upload a picture, and then head
    back to the listing page and click on it to see it in the browser.
  prefs: []
  type: TYPE_NORMAL
