- en: Chapter 4.  Command-Line Tools to Find Domain Names
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The chat application we've built so far is ready to take the world by storm
    but not before we give it a home on the Internet. Before we invite our friends
    to join the conversation, we need to pick a valid, catchy, and available domain
    name, which we can point to the server running our Go code. Instead of sitting
    in front of our favorite domain name provider for hours on end trying different
    names, we are going to develop a few command-line tools that will help us find
    the right one. As we do so, we will see how the Go standard library allows us
    to interface with the terminal and other executing applications; we'll also explore
    some patterns and practices to build command-line programs.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, you will learn:'
  prefs: []
  type: TYPE_NORMAL
- en: How to build complete command-line applications with as little as a single code
    file
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to ensure that the tools we build can be composed with other tools using
    standard streams
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to interact with a simple third-party JSON RESTful API
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to utilize the standard in and out pipes in Go code
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to read from a streaming source, one line at a time
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to build a WHOIS client to look up domain information
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to store and use sensitive or deployment-specific information in environment
    variables
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
