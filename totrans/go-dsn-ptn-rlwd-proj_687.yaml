- en: Summary
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned how five small command-line programs can, when composed
    together, produce powerful results while remaining modular. We avoided tightly
    coupling our programs so they could still be useful in their own right. For example,
    we can use our Available program just to check whether the domain names we manually
    enter are available or not, or we can use our `synonyms` program just as a command-line
    thesaurus.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了五个小型命令行程序如何组合在一起，在保持模块化的同时产生强大的结果。我们避免了程序之间的紧密耦合，这样它们仍然可以单独使用。例如，我们可以使用我们的Available程序仅来检查我们手动输入的域名是否可用，或者我们可以将我们的`synonyms`程序用作命令行同义词词典。
- en: We learned how standard streams could be used to build different flows of these
    types of programs and how the redirection of standard input and standard output
    lets us play around with different flows very easily.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们学习了如何使用标准流来构建这些类型程序的不同流程，以及标准输入和标准输出的重定向如何让我们能够非常容易地玩转不同的流程。
- en: We learned how simple it is in Go to consume a JSON RESTful API web service
    when we wanted to get the synonyms from Big Huge Thesaurus. We also consumed a
    non-HTTP API when we opened a connection to the WHOIS server and wrote data over
    raw TCP.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们了解到在Go语言中，要消费一个JSON RESTful API网络服务是多么简单，当我们想要从Big Huge Thesaurus获取同义词时就是这样做的。我们还消费了一个非HTTP
    API，当我们打开到WHOIS服务器的连接并使用原始TCP写入数据时。
- en: We saw how the `math/rand` package can bring a little variety and unpredictability
    by allowing us to use pseudo random numbers and decisions in our code, which means
    that each time we run our program, we will get different results.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到了`math/rand`包如何通过允许我们在代码中使用伪随机数和决策来增加一些多样性和不可预测性，这意味着每次我们运行我们的程序时，我们都会得到不同的结果。
- en: Finally, we built our `domainfinder` super program that composes all the subprograms
    together, giving our solution a simple, clean, and elegant interface.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们构建了我们的`domainfinder`超级程序，它将所有子程序组合在一起，为我们提供了一个简单、干净且优雅的接口。
- en: In the next chapter, we will take some ideas we have learned so far one step
    further by exploring how to connect programs using messaging queue technologies
    allowing them to distributed across many machines to achieve large scale.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将通过探索如何使用消息队列技术连接程序，使它们能够跨多台机器分布式运行，以实现大规模，将我们迄今为止学到的某些想法进一步发展。
