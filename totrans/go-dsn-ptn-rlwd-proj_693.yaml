- en: Introducing MongoDB
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'MongoDB is a document database, which allows you to store and query JSON documents
    and the data within them. Each document goes into a collection that can be used
    to group the documents together without enforcing any schema on the data inside
    them. Unlike rows in a traditional RDBMS, such as Oracle, Microsoft SQL Server,
    or MySQL, it is perfectly acceptable for documents to have a different shape.
    For example, a `people` collection can contain the following three JSON documents
    at the same time:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: This flexibility allows data with varying structures to coexist without impacting
    performance or wasting space. It is also extremely useful if you expect your software
    to evolve over time, as we really always should.
  prefs: []
  type: TYPE_NORMAL
- en: MongoDB was designed to scale while also remaining very easy to work with on
    single-box installations, such as our development machine. When we host our application
    for production, we would most likely install a more complex multi-sharded, replicated
    system, which is distributed across many nodes and locations, but for now, just
    running `mongod` will do.
  prefs: []
  type: TYPE_NORMAL
- en: Head over to [http://www.mongodb.org/downloads](http://www.mongodb.org/downloads)
    in order to grab the latest version of MongoDB and install it, making sure to
    register the `bin` folder with your `PATH` environment variable, as usual.
  prefs: []
  type: TYPE_NORMAL
- en: To validate that MongoDB is successfully installed, run the `mongod` command,
    and then hit *Ctrl + C* to stop it for now.
  prefs: []
  type: TYPE_NORMAL
- en: MongoDB driver for Go
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Gustavo Niemeyer has done a great job in simplifying interactions with MongoDB
    with his `mgo` (pronounced *mango*) package hosted at [http://labix.org/mgo](http://labix.org/mgo),
    which is *go gettable* with the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
