- en: Testing
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试
- en: 'To make sure our program works, we need to do two things: first, we need to
    create a poll in the database, and second, we need to peer inside the messaging
    queue to see whether the messages are indeed being generated by `twittervotes`.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保我们的程序能正常工作，我们需要做两件事：首先，我们需要在数据库中创建一个投票，其次，我们需要查看消息队列内部，以确认消息确实是由`twittervotes`生成的。
- en: 'In a terminal, run the `mongo` command to open a database shell that allows
    us to interact with MongoDB. Then, enter the following commands to add a test
    poll:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在终端中运行`mongo`命令以打开一个数据库shell，该shell允许我们与MongoDB交互。然后，输入以下命令以添加一个测试投票：
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The preceding commands add a new item to the `polls` collection in the `ballots`
    database. We are using some common words for options that are likely to be mentioned
    by people on Twitter so that we can observe real tweets being translated into
    messages. You might notice that our poll object is missing the `results` field;
    this is fine since we are dealing with unstructured data where documents do not
    have to adhere to a strict schema. The `counter` program we are going to write
    in the next section will add and maintain the `results` data for us later.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令向`ballots`数据库中的`polls`集合添加了一个新条目。我们使用了一些常见的词汇作为选项，这些词汇可能会被Twitter上的人提及，这样我们就可以观察真实的推文被翻译成消息。你可能注意到我们的投票对象缺少`results`字段；这是可以的，因为我们正在处理非结构化数据，文档不需要遵循严格的模式。我们将在下一节中编写的`counter`程序将为我们稍后添加并维护`results`数据。
- en: 'Press *Ctrl *+ *C* to exit the MongoDB shell and type the following command:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 按*Ctrl *+ *C*退出MongoDB shell，并输入以下命令：
- en: '[PRE1]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The `nsq_tail` tool connects to the specified messaging queue topic and outputs
    any messages that it notices. This is where we will validate that our `twittervotes`
    program is sending messages.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '`nsq_tail`工具连接到指定的消息队列主题，并输出它注意到的任何消息。这是我们验证`twittervotes`程序是否发送消息的地方。'
- en: 'In a separate terminal window, let''s build and run the `twittervotes` program:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在另一个终端窗口中，让我们构建并运行`twittervotes`程序：
- en: '[PRE2]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Now switch back to the window running `nsq_tail` and note that messages are
    indeed being generated in response to live Twitter activity.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，切换回运行`nsq_tail`的窗口，并注意确实有消息在响应实时Twitter活动时生成。
- en: Tip
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: If you don't see much activity, try to look up trending hash tags on Twitter
    and add another poll containing these options.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有看到很多活动，尝试在Twitter上查找热门标签，并添加一个包含这些选项的另一个投票。
