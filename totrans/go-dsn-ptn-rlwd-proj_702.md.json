["```go\npackage main \nimport ( \n  \"flag\" \n  \"fmt\" \n  \"os\" \n) \nvar fatalErr error \nfunc fatal(e error) { \n  fmt.Println(e) \n  flag.PrintDefaults() \n  fatalErr = e \n} \nfunc main() { \n  defer func() { \n    if fatalErr != nil { \n      os.Exit(1) \n    } \n  }() \n} \n\nfatal function to record that an error has occurred. Note that only when our main function exits will the deferred function run, which in turn calls os.Exit(1) to exit the program with an exit code of 1. Because the deferred statements are run in LIFO (last in, first out) order, the first function we defer will be the last function to be executed, which is why the first thing we do in the main function is defer the exiting code. This allows us to be sure that other functions we defer will be called *before* the program exits. We'll use this feature to ensure that our database connection gets closed regardless of any errors.\n```"]