- en: Running our solution
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'It''s time to see our code in action. Ensure that you have `nsqlookupd`, `nsqd`,
    and `mongod` running in separate terminal windows with the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'If you haven''t already done so, make sure the `twittervotes` program is running
    too. Then, in the `counter` folder, build and run our counting program:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'You should see a periodic output describing what work `counter` is doing, such
    as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The output will, of course, vary since we are actually responding to real, live
    activity on Twitter.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can see that our program is receiving vote data from NSQ and reports to
    update the database with the results. We can confirm this by opening the MongoDB
    shell and querying the poll data to see whether the `results` map is being updated.
    In another terminal window, open the MongoDB shell:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Ask it to use the ballots database:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Use the `find` method with no arguments to get all polls (add the `pretty`
    method to the end to get nicely formatted JSON):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: The `results` map is indeed updated, and at any point in time, it contains the
    total number of votes for each option.
  prefs: []
  type: TYPE_NORMAL
