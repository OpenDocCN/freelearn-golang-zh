- en: Cross-origin resource sharing
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 跨源资源共享
- en: 'The same-origin security policy mandates that AJAX requests in web browsers
    be allowed only for services hosted on the same domain, which would make our API
    fairly limited since we won''t necessarily be hosting all of the websites that
    use our web service. The **CORS** (**Cross-origin resource sharing**) technique
    circumnavigates the same-origin policy, allowing us to build a service capable
    of serving websites hosted on other domains. To do this, we simply have to set
    the `Access-Control-Allow-Origin` header in response to `*`. While we''re at it,
    since we''re going to use the `Location` header in our create poll call – we''ll
    allow this header to be accessible by the client too, which can be done by listing
    it in the `Access-Control-Expose-Headers` header. Add the following code to `main.go`:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 同源安全策略要求，在Web浏览器中，AJAX请求仅允许来自同一域的服务，这会使我们的API相当有限，因为我们不一定托管所有使用我们Web服务的网站。**CORS**（跨源资源共享）技术绕过了同源策略，使我们能够构建一个能够为托管在其他域上的网站提供服务的服务。要做到这一点，我们只需在响应中设置`Access-Control-Allow-Origin`头信息为`*`。同时，由于我们将在创建投票的调用中使用`Location`头信息，我们还将允许客户端访问这个头信息，这可以通过在`Access-Control-Expose-Headers`头信息中列出它来实现。将以下代码添加到`main.go`中：
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This is the simplest wrapper function yet; it just sets the appropriate header
    on the `ResponseWriter` type and calls the specified `http.HandlerFunc` type.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们迄今为止最简单的包装函数；它只是为`ResponseWriter`类型设置适当的头信息，并调用指定的`http.HandlerFunc`类型。
- en: Tip
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: In this chapter, we are handling CORS explicitly so we can understand exactly
    what is going on; for real production code, you should consider employing an open
    source solution, such as [https://github.com/fasterness/cors](https://github.com/fasterness/cors).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们显式地处理CORS（跨源资源共享），这样我们可以确切地了解正在发生的事情；对于真正的生产代码，你应该考虑使用开源解决方案，例如[https://github.com/fasterness/cors](https://github.com/fasterness/cors)。
