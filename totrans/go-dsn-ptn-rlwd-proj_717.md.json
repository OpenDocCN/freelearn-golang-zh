["```go\nfunc decodeBody(r *http.Request, v interface{}) error { \n  defer r.Body.Close() \n  return json.NewDecoder(r.Body).Decode(v) \n} \nfunc encodeBody(w http.ResponseWriter, r *http.Request, v  interface{}) error { \n  return json.NewEncoder(w).Encode(v) \n} \n\n```", "```go\nfunc respond(w http.ResponseWriter, r *http.Request, \n status int, data interface{}) { \n  w.WriteHeader(status) \n  if data != nil { \n    encodeBody(w, r, data) \n  } \n} \n\n```", "```go\nfunc respondErr(w http.ResponseWriter, r *http.Request, \n status int, args ...interface{}) { \n  respond(w, r, status, map[string]interface{}{ \n    \"error\": map[string]interface{}{ \n      \"message\": fmt.Sprint(args...), \n    }, \n  }) \n} \n\n```", "```go\nfunc respondHTTPErr(w http.ResponseWriter, r *http.Request, status int) { \n  respondErr(w, r, status, http.StatusText(status)) \n} \n\n```"]