- en: Using tags to add metadata to structs
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用标签为结构体添加元数据
- en: 'Tags are just a string that follows a field definition within a `struct` type
    on the same line. We use the black tick character to denote literal strings, which
    means we are free to use double quotes within the tag string itself. The `reflect`
    package allows us to pull out the value associated with any key; in our case,
    both `bson` and `json` are examples of keys, and they are each key/value pair
    separated by a space character. Both the `encoding/json` and `gopkg.in/mgo.v2/bson`
    packages allow you to use tags to specify the field name that will be used with
    encoding and decoding (along with some other properties) rather than having it
    infer the values from the name of the fields themselves. We are using BSON to
    talk with the MongoDB database and JSON to talk to the client, so we can actually
    specify different views of the same `struct` type. For example, consider the ID
    field:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 标签只是跟在`struct`类型字段定义同一行的字符串。我们使用黑色引号字符来表示字面字符串，这意味着我们可以在标签字符串内部自由使用双引号。`reflect`包允许我们提取与任何键关联的值；在我们的例子中，`bson`和`json`都是键的例子，它们是通过空格字符分隔的每个键/值对。`encoding/json`和`gopkg.in/mgo.v2/bson`这两个包允许您使用标签来指定用于编码和解码的字段名称（以及一些其他属性），而不是从字段名称本身推断值。我们使用BSON与MongoDB数据库通信，使用JSON与客户端通信，因此我们可以实际上指定同一`struct`类型的不同视图。例如，考虑ID字段：
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The name of the field in Go is `ID`, the JSON field is `id`, and the BSON field
    is `_id`, which is the special identifier field used in MongoDB.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Go中字段的名称是`ID`，JSON字段是`id`，BSON字段是`_id`，这是MongoDB中使用的特殊标识符字段。
