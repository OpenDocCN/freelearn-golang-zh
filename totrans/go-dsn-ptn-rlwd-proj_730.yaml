- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we exposed the data for our social polling solution through
    a highly scalable RESTful API and built a simple website that consumes the API
    to provide an intuitive way for users to interact with it. The website consists
    of static content only, with no server-side processing (since the API does the
    heavy lifting for us). This allows us to host the website very cheaply on static
    hosting sites, such as [bitballoon.com](https://www.bitballoon.com/), or distribute
    the files to content delivery networks.
  prefs: []
  type: TYPE_NORMAL
- en: Within our API service, we learned how to share data between handlers without
    breaking or obfuscating the handler pattern from the standard library. We also
    saw how writing wrapped handler functions allows us to build a pipeline of functionality
    in a very simple and intuitive way.
  prefs: []
  type: TYPE_NORMAL
- en: We wrote some basic encoding and decoding functions that –while only simply
    wrapping their counterparts from the `encoding/json` package for now –could be
    improved later to support a range of different data representations without changing
    the internal interface to our code. We wrote a few simple helper functions that
    make responding to data requests easy while providing the same kind of abstraction
    that would allow us to evolve our API later.
  prefs: []
  type: TYPE_NORMAL
- en: We saw how, for simple cases, switching to HTTP methods is an elegant way to
    support many functions for a single endpoint. We also saw how, with a few extra
    lines of code, we are able to build support for CORS in order to allow applications
    running on different domains to interact with our services –without the need for
    hacks such as JSONP.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will evolve our API and web skills to build a brand
    new startup app called Meander. We'll also explore an interesting way of representing
    enumerators in a language that doesn't officially support them.
  prefs: []
  type: TYPE_NORMAL
