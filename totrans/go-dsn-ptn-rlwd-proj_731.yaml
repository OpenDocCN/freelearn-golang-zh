- en: Chapter 7.  Random Recommendations Web Service
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The concept behind the project that we will build in this chapter is a simple
    one: we want users to be able to generate random recommendations for things to
    do in specific geographical locations based on a predefined set of journey types
    that we will expose through the API. We will give our project the codename Meander.'
  prefs: []
  type: TYPE_NORMAL
- en: Often on projects in the real world, you are not responsible for the full stack;
    somebody else builds the website, a different person might write the iOS app,
    and maybe an outsourced company builds the desktop version. On more successful
    API projects, you might not even know who the consumers of your API are, especially
    if it's a public API.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we will simulate this reality by designing and agreeing a minimal
    API design with a fictional partner up front before going on to implement the
    API. Once we have finished our side of the project, we will download a user interface
    built by our teammates to see the two work together to produce the final application.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, you will:'
  prefs: []
  type: TYPE_NORMAL
- en: Learn to express the general goals of a project using short and simple Agile
    user stories
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Discover that you can agree on a meeting point in a project by agreeing on the
    design of an API, which allows many people to work in parallel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: See how early versions can have data fixtures written in code and compiled into
    the program, allowing us to change the implementation later without touching the
    interface
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Learn a strategy that allows structs (and other types) to represent a public
    version of themselves for cases where we want to hide or transform internal representations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Learn to use embedded structs to represent nested data while keeping the interface
    of our types simple
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Learn to use `http.Get` to make external API requests, specifically to the Google
    Places API, with no code bloat
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Learn to effectively implement enumerators in Go even though they aren't really
    a language feature
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Experience a real-world example of TDD
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Look at how the `math/rand` package makes it easy to select an item from a slice
    at random
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Learn an easy way to grab data from the URL parameters of the `http.Request`
    type
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
