- en: Project design specifics
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 项目设计具体细节
- en: 'In order to turn our stories into an interactive application, we are going
    to provide two JSON endpoints: one to deliver the kinds of journeys users will
    be able to select in the application and another to actually generate the random
    recommendations for the selected journey type.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将我们的故事变成一个交互式应用程序，我们将提供两个JSON端点：一个用于提供用户可以在应用程序中选择的旅程类型，另一个用于为选定的旅程类型生成随机推荐。
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The preceding call should return a list similar to the following:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的调用应该返回一个类似于以下列表：
- en: '[PRE1]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The `name` field is a human-readable label for the type of recommendations
    the app generates, and the `journey` field is a pipe-separated list of the supported
    journey types. It is the journey value that we will pass, as a URL parameter,
    into our other endpoint, which generates the actual recommendations:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '`name`字段是应用生成的推荐类型的人类可读标签，而`journey`字段是支持的旅程类型的管道分隔列表。我们将传递旅程值，作为URL参数，到我们的其他端点，该端点生成实际的推荐：'
- en: '[PRE2]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This endpoint is responsible for querying the Google Places API and generating
    the recommendations before returning an array of place objects. We will use the
    parameters in the URL to control the kind of query to make. The `lat` and `lng`
    parameters representing latitude and longitude, respectively tell our API where
    in the world we want recommendations from, and the `radius` parameter represents
    the distance in meters around the point in which we are interested.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 此端点负责查询谷歌地点API并在返回地点对象数组之前生成推荐。我们将使用URL中的参数来控制要进行的查询类型。表示纬度和经度的`lat`和`lng`参数分别告诉我们我们想要从世界的哪个地方获取推荐，而`radius`参数表示我们感兴趣的点的周围距离（以米为单位）。
- en: 'The `cost` value is a human-readable way of representing the price range for
    places that the API returns. It is made up of two values: a lower and upper range
    separated by three dots. The number of dollar characters represents the price
    level, with `$` being the most affordable and `$$$$$` being the most expensive.
    Using this pattern, a value of `$...$$` would represent very low-cost recommendations,
    where `$$$$...$$$$$` would represent a pretty expensive experience.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '`cost`值是以人类可读的方式表示API返回的地点的价格范围。它由两个值组成：一个下限和一个上限，由三个点分隔。美元字符的数量表示价格水平，其中`$`是最便宜的，而`$$$$$`是最贵的。使用这种模式，`$...$$`的值将代表非常低成本的推荐，而`$$$$...$$$$$`将代表相当昂贵的体验。'
- en: Tip
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Some programmers might insist that the cost range is represented by numerical
    values, but since our API is going to be consumed by people, why not make things
    a little more interesting? It is up to you as the API designer.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 一些程序员可能会坚持认为成本范围用数值表示，但既然我们的API将由人们使用，为什么不使事情变得更有趣呢？这取决于你作为API设计者的选择。
- en: 'An example payload for this call might look something like this:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这个调用的示例有效载荷可能看起来像这样：
- en: '[PRE3]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The array returned contains a place object representing a random recommendation
    for each segment in the journey in the appropriate order. The preceding example
    is a cafe in London. The data fields are fairly self-explanatory; the `lat` and
    `lng` fields represent the location of the place, the `name` and `vicinity` fields
    tell us what and where the business is, and the `photos` array gives us a list
    of relevant photographs from Google's servers. The `vicinity` and `icon` fields
    will help us deliver a richer experience to our users.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 返回的数组包含一个表示旅程中每个段落的随机推荐的地方对象，并按适当的顺序排列。前面的例子是一个位于伦敦的咖啡馆。数据字段相当直观；`lat`和`lng`字段表示地点的位置，`name`和`vicinity`字段告诉我们业务是什么以及在哪里，而`photos`数组提供了来自谷歌服务器的相关照片列表。`vicinity`和`icon`字段将帮助我们为用户提供更丰富的体验。
