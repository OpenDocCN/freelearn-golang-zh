- en: Project design specifics
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In order to turn our stories into an interactive application, we are going
    to provide two JSON endpoints: one to deliver the kinds of journeys users will
    be able to select in the application and another to actually generate the random
    recommendations for the selected journey type.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The preceding call should return a list similar to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The `name` field is a human-readable label for the type of recommendations
    the app generates, and the `journey` field is a pipe-separated list of the supported
    journey types. It is the journey value that we will pass, as a URL parameter,
    into our other endpoint, which generates the actual recommendations:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: This endpoint is responsible for querying the Google Places API and generating
    the recommendations before returning an array of place objects. We will use the
    parameters in the URL to control the kind of query to make. The `lat` and `lng`
    parameters representing latitude and longitude, respectively tell our API where
    in the world we want recommendations from, and the `radius` parameter represents
    the distance in meters around the point in which we are interested.
  prefs: []
  type: TYPE_NORMAL
- en: 'The `cost` value is a human-readable way of representing the price range for
    places that the API returns. It is made up of two values: a lower and upper range
    separated by three dots. The number of dollar characters represents the price
    level, with `$` being the most affordable and `$$$$$` being the most expensive.
    Using this pattern, a value of `$...$$` would represent very low-cost recommendations,
    where `$$$$...$$$$$` would represent a pretty expensive experience.'
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Some programmers might insist that the cost range is represented by numerical
    values, but since our API is going to be consumed by people, why not make things
    a little more interesting? It is up to you as the API designer.
  prefs: []
  type: TYPE_NORMAL
- en: 'An example payload for this call might look something like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: The array returned contains a place object representing a random recommendation
    for each segment in the journey in the appropriate order. The preceding example
    is a cafe in London. The data fields are fairly self-explanatory; the `lat` and
    `lng` fields represent the location of the place, the `name` and `vicinity` fields
    tell us what and where the business is, and the `photos` array gives us a list
    of relevant photographs from Google's servers. The `vicinity` and `icon` fields
    will help us deliver a richer experience to our users.
  prefs: []
  type: TYPE_NORMAL
