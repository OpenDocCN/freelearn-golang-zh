["```go\npackage meander \ntype j struct { \n  Name       string \n  PlaceTypes []string \n} \nvar Journeys = []interface{}{ \n  j{Name: \"Romantic\", PlaceTypes: []string{\"park\", \"bar\",  \n   \"movie_theater\", \"restaurant\", \"florist\", \"taxi_stand\"}}, \n  j{Name: \"Shopping\", PlaceTypes: []string{\"department_store\",  \"cafe\", \n   \"clothing_store\", \"jewelry_store\", \"shoe_store\"}}, \n  j{Name: \"Night Out\", PlaceTypes: []string{\"bar\", \"casino\", \"food\", \n   \"bar\", \"night_club\", \"bar\", \"bar\", \"hospital\"}}, \n  j{Name: \"Culture\", PlaceTypes: []string{\"museum\", \"cafe\", \"cemetery\", \n   \"library\", \"art_gallery\"}}, \n  j{Name: \"Pamper\", PlaceTypes: []string{\"hair_care\",  \"beauty_salon\", \n   \"cafe\", \"spa\"}}, \n} \n\n```", "```go\npackage main \nfunc main() { \n  //meander.APIKey = \"TODO\" \n  http.HandleFunc(\"/journeys\", func(w http.ResponseWriter,\n  r *http.Request) { \n    respond(w, r, meander.Journeys) \n  }) \n  http.ListenAndServe(\":8080\", http.DefaultServeMux) \n} \nfunc respond(w http.ResponseWriter, r *http.Request, data  []interface{}) error { \n  return json.NewEncoder(w).Encode(data) \n} \n\n```", "```go\ngo run main.go\n\n```", "```go\n[{ \n  Name: \"Romantic\", \n  PlaceTypes: [ \n    \"park\", \n    \"bar\", \n    \"movie_theater\", \n    \"restaurant\", \n    \"florist\", \n    \"taxi_stand\" \n  ] \n}, ...] \n\n```"]