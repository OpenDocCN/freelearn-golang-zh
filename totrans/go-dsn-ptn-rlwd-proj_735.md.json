["```go\npackage meander \ntype Facade interface { \n  Public() interface{} \n} \nfunc Public(o interface{}) interface{} { \n  if p, ok := o.(Facade); ok { \n    return p.Public() \n  } \n  return o \n} \n\n```", "```go\nfunc (j j) Public() interface{} { \n  return map[string]interface{}{ \n    \"name\":    j.Name, \n    \"journey\": strings.Join(j.PlaceTypes, \"|\"), \n  } \n} \n\n```", "```go\nfunc respond(w http.ResponseWriter, r *http.Request, data []interface{}) error { \n  publicData := make([]interface{}, len(data)) \n  for i, d := range data { \n    publicData[i] = meander.Public(d) \n  } \n  return json.NewEncoder(w).Encode(publicData) \n} \n\n```", "```go\n[{ \n  journey: \"park|bar|movie_theater|restaurant|florist|taxi_stand\", \n  name: \"Romantic\" \n}, ...] \n\n```"]