- en: Generating random recommendations
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 生成随机推荐
- en: 'In order to obtain the places from which our code will randomly build up recommendations,
    we need to query the Google Places API. In the root `meander` folder, add the
    following `query.go` file:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 为了获取我们的代码将随机构建推荐的地方，我们需要查询 Google Places API。在 `meander` 根目录下，添加以下 `query.go`
    文件：
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This code defines the structures we will need in order to parse the JSON response
    from the Google Places API into usable objects.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码定义了我们将需要的结构，以便将 Google Places API 的 JSON 响应解析成可用的对象。
- en: Tip
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Head over to the Google Places API documentation for an example of the response
    we are expecting. Refer to [http://developers.google.com/places/documentation/search](http://developers.google.com/places/documentation/search).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 前往 Google Places API 文档，查看我们期望的响应示例。请参阅 [http://developers.google.com/places/documentation/search](http://developers.google.com/places/documentation/search)。
- en: Most of the preceding code will be obvious, but it's worth noting that the `Place`
    type embeds the `googleGeometry` type, which allows us to represent the nested
    data as per the API while essentially flattening it in our code. We do this with
    `googleLocation` inside `googleGeometry`, which means that we will be able to
    access the `Lat` and `Lng` values directly on a `Place` object even though they're
    technically nested in other structures.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 大部分前面的代码都很明显，但值得注意的是，`Place` 类型嵌入了 `googleGeometry` 类型，这使得我们能够在代码中基本扁平化表示嵌套数据，同时按照
    API 的要求进行表示。我们通过在 `googleGeometry` 中使用 `googleLocation` 来实现这一点，这意味着我们甚至可以直接在 `Place`
    对象上访问 `Lat` 和 `Lng` 值，尽管它们在技术上嵌套在其他结构中。
- en: 'Because we want to control how a `Place` object appears publically, let''s
    give this type the following `Public` method:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 因为我们想要控制 `Place` 对象的公开显示方式，所以让我们给这个类型添加以下 `Public` 方法：
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Tip
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Remember to run `golint` on this code to see which comments need to be added
    to the exported items.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 记得运行 `golint` 来查看哪些注释需要添加到导出的项中。
