["```go\nhttp.HandleFunc(\"/recommendations\", cors(func(w \nhttp.ResponseWriter, r *http.Request) { \n  q := &meander.Query{ \n    Journey: strings.Split(r.URL.Query().Get(\"journey\"), \"|\"), \n  } \n  var err error \n  q.Lat, err = strconv.ParseFloat(r.URL.Query().Get(\"lat\"), 64) \n  if err != nil { \n    http.Error(w, err.Error(), http.StatusBadRequest) \n    return \n  } \n  q.Lng, err = strconv.ParseFloat(r.URL.Query().Get(\"lng\"), 64) \n  if err != nil { \n    http.Error(w, err.Error(), http.StatusBadRequest) \n    return \n  } \n  q.Radius, err = strconv.Atoi(r.URL.Query().Get(\"radius\")) \n  if err != nil { \n    http.Error(w, err.Error(), http.StatusBadRequest) \n    return \n  } \n  q.CostRangeStr = r.URL.Query().Get(\"cost\") \n  places := q.Run() \n  respond(w, r, places) \n})) \n\n```"]