- en: Chapter 8. Filesystem Backup
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are many solutions that provide filesystem backup capabilities. These
    include everything from apps such as Dropbox, Box, and Carbonite to hardware solutions
    such as Apple's Time Machine, Seagate, or network-attached storage products, to
    name a few. Most consumer tools provide some key automatic functionality, along
    with an app or website for you to manage your policies and content. Often, especially
    for developers, these tools don't quite do the things we need them to. However,
    thanks to Go's standard library (which includes packages such as `ioutil` and
    `os`), we have everything we need to build a backup solution that behaves exactly
    the way we need it to.
  prefs: []
  type: TYPE_NORMAL
- en: For our next project, we will build a simple filesystem backup for our source
    code projects that archive specified folders and save a snapshot of them every
    time we make a change. The change could be when we tweak a file and save it, when
    we add new files and folders, or even when we delete a file. We want to be able
    to go back to any point in time to retrieve old files.
  prefs: []
  type: TYPE_NORMAL
- en: 'Specifically, in this chapter, you will learn about the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: How to structure projects that consist of packages and command-line tools
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A pragmatic approach to persisting simple data across tool executions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How the `os` package allows you to interact with a filesystem
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to run code in an infinite timed loop while respecting *Ctrl + C*
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to use `filepath.Walk` to iterate over files and folders
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to quickly determine whether the contents of a directory have changed
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to use the `archive/zip` package to zip files
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to build tools that care about a combination of command-line flags and normal
    arguments
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
