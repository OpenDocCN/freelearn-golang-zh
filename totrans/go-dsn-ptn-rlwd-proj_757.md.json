["```go\nfunc main() { \n  var fatalErr error \n  defer func() { \n    if fatalErr != nil { \n      log.Fatalln(fatalErr) \n    } \n  }() \n  var ( \n    interval = flag.Duration(\"interval\", 10 * time.Second, \"interval between \n    checks\") \n    archive  = flag.String(\"archive\", \"archive\", \"path to archive location\") \n    dbpath   = flag.String(\"db\", \"./db\", \"path to filedb database\") \n  ) \n  flag.Parse() \n} \n\n```", "```go\nm := &backup.Monitor{ \n  Destination: *archive, \n  Archiver:    backup.ZIP, \n  Paths:       make(map[string]string), \n} \n\n```", "```go\ndb, err := filedb.Dial(*dbpath) \nif err != nil { \n  fatalErr = err \n  return \n} \ndefer db.Close() \ncol, err := db.C(\"paths\") \nif err != nil { \n  fatalErr = err \n  return \n} \n\n```"]