["```go\nfunc check(m *backup.Monitor, col *filedb.C) { \n  log.Println(\"Checking...\") \n  counter, err := m.Now() \n  if err != nil { \n    log.Fatalln(\"failed to backup:\", err) \n  } \n  if counter > 0 { \n    log.Printf(\"  Archived %d directories\\n\", counter) \n    // update hashes \n    var path path \n    col.SelectEach(func(_ int, data []byte) (bool, []byte, bool) { \n      if err := json.Unmarshal(data, &path); err != nil { \n        log.Println(\"failed to unmarshal data (skipping):\", err) \n        return true, data, false \n      } \n      path.Hash, _ = m.Paths[path.Path] \n      newdata, err := json.Marshal(&path) \n      if err != nil { \n        log.Println(\"failed to marshal data (skipping):\", err) \n        return true, data, false \n      } \n      return true, newdata, false \n    }) \n  } else { \n    log.Println(\"  No changes\") \n  } \n} \n\n```"]