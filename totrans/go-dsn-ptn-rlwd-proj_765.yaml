- en: The Google App Engine SDK for Go
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In order to run and deploy Google App Engine applications, we must download
    and configure the Go SDK. Head over to [https://cloud.google.com/appengine/downloads](https://cloud.google.com/appengine/downloads)
    and download the latest *Google App Engine SDK for Go* for your computer. The
    ZIP file contains a folder called `go_appengine`, which you should place in an
    appropriate folder outside of your `GOPATH`, for example, in `/Users/yourname/work/go_appengine`.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: It is possible that the names of these SDKs will change in the future; if that
    happens, ensure that you consult the project home page for notes pointing you
    in the right direction at [https://github.com/matryer/goblueprints](https://github.com/matryer/goblueprints).
  prefs: []
  type: TYPE_NORMAL
- en: Next, you will need to add the `go_appengine` folder to your `$PATH` environment
    variable, much like what you did with the `go` folder when you first configured
    Go.
  prefs: []
  type: TYPE_NORMAL
- en: 'To test your installation, open a terminal and type this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'You should see something like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The actual version of Go is likely to differ and is often a few months behind
    actual Go releases. This is because the Cloud Platform team at Google needs to
    do work on its end to support new releases of Go.
  prefs: []
  type: TYPE_NORMAL
- en: The `goapp` command is a drop-in replacement for the `go` command with a few
    additional subcommands; so you can do things like `goapp test` and `goapp vet`,
    for example.
  prefs: []
  type: TYPE_NORMAL
