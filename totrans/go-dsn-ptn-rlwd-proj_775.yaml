- en: Keys in Google Cloud Datastore
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Every entity in Datastore has a key, which uniquely identifies it. They can
    be made up of either a string or an integer depending on what makes sense for
    your case. You are free to decide the keys for yourself or let Datastore automatically
    assign them for you; again, your use case will usually decide which is the best
    approach to take and we'll explore both in this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Keys are created using theÂ `datastore.NewKey` and `datastore.NewIncompleteKey`
    functions and are used to put and get data into and out of Datastore via the `datastore.Get`
    and `datastore.Put` functions.
  prefs: []
  type: TYPE_NORMAL
- en: In Datastore, keys and entity bodies are distinct, unlike in MongoDB or SQL
    technologies, where it is just another field in the document or record. This is
    why we are excluding `Key` from our `Question` struct with the `datastore:"-"`
    field tag. Like the `json` tags, this indicates that we want Datastore to ignore
    the `Key` field altogether when it is getting and putting data.
  prefs: []
  type: TYPE_NORMAL
- en: Keys may optionally have parents, which is a nice way of grouping associated
    data together and Datastore makes certain assurances about such groups of entities,
    which you can read more about in the Google Cloud Datastore documentation online.
  prefs: []
  type: TYPE_NORMAL
