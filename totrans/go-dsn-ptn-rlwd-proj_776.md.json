["```go\nfunc (q Question) OK() error { \n  if len(q.Question) < 10 { \n    return errors.New(\"question is too short\") \n  } \n  return nil \n} \n\n```", "```go\nfunc (q *Question) Create(ctx context.Context) error { \n  log.Debugf(ctx, \"Saving question: %s\", q.Question) \n  if q.Key == nil { \n    q.Key = datastore.NewIncompleteKey(ctx, \"Question\", nil) \n  } \n  user, err := UserFromAEUser(ctx) \n  if err != nil { \n    return err \n  } \n  q.User = user.Card() \n  q.CTime = time.Now() \n  q.Key, err = datastore.Put(ctx, q.Key, q) \n  if err != nil { \n    return err \n  } \n  return nil \n} \n\n```", "```go\nfunc (q *Question) Update(ctx context.Context) error { \n  if q.Key == nil { \n    q.Key = datastore.NewIncompleteKey(ctx, \"Question\", nil) \n  } \n  var err error \n  q.Key, err = datastore.Put(ctx, q.Key, q) \n  if err != nil { \n    return err \n  } \n  return nil \n} \n\n```"]