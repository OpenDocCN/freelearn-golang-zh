["```go\ntype User struct { \n  Key *datastore.Key `json:\"id\" datastore:\"-\"` \n  UserID string `json:\"-\"` \n  DisplayName string `json:\"display_name\"` \n  AvatarURL string `json:\"avatar_url\"` \n  Score int `json:\"score\"` \n} \n\n```", "```go\nfunc UserFromAEUser(ctx context.Context) (*User, error) { \n  aeuser := user.Current(ctx) \n  if aeuser == nil { \n    return nil, errors.New(\"not logged in\") \n  } \n  var appUser User \n  appUser.Key = datastore.NewKey(ctx, \"User\", aeuser.ID, 0, nil) \n  err := datastore.Get(ctx, appUser.Key, &appUser) \n  if err != nil && err != datastore.ErrNoSuchEntity { \n    return nil, err \n  } \n  if err == nil { \n    return &appUser, nil \n  } \n  appUser.UserID = aeuser.ID \n  appUser.DisplayName = aeuser.String() \n  appUser.AvatarURL = gravatarURL(aeuser.Email) \n  log.Infof(ctx, \"saving new user: %s\", aeuser.String()) \n  appUser.Key, err = datastore.Put(ctx, appUser.Key, &appUser) \n  if err != nil { \n    return nil, err \n  } \n  return &appUser, nil \n} \n\n```", "```go\nfunc gravatarURL(email string) string { \n  m := md5.New() \n  io.WriteString(m, strings.ToLower(email)) \n  return fmt.Sprintf(\"//www.gravatar.com/avatar/%x\", m.Sum(nil)) \n} \n\n```"]