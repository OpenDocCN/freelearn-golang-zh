- en: Embedding denormalized data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you recall, our Question type doesn't take the author as `User`; rather,
    the type was `UserCard`. When we embed denormalized data into other entities,
    sometimes we will want them to look slightly different from the master entity.
    In our case, since we do not store the key in the `User` entity (remember the
    `Key` fields have `datastore:"-"`), we need to have a new type that stores the
    key.
  prefs: []
  type: TYPE_NORMAL
- en: 'At the bottom of `users.go`, add the `UserCard` struct and the associated helper
    method for `User`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Note that `UserCard` doesn't specify a `datastore` tag, so the `Key` field will
    indeed be persisted in the data store. Our `Card()` helper function just builds
    and returns `UserCard` by copying the values of each field. This seems wasteful
    but offers great control, especially if you want embedded data to look very different
    from its original entity.
  prefs: []
  type: TYPE_NORMAL
