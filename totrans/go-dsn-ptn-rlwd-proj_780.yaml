- en: Transactions in Google Cloud Datastore
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Google Cloud Datastore 中的事务
- en: Transactions allow you to specify a series of changes to the data store and
    commit them as one. If any of the individual operations fails, the whole transaction
    will not be applied. This is extremely useful if you want to maintain counters
    or have multiple entities that depend on each other's state. During a transaction
    in Google Cloud Datastore, all entities that are read are locked (other code is
    prevented from making changes) until the transaction is complete, providing an
    additional sense of security and preventing data races.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 事务允许你指定一系列对数据存储的更改，并将它们作为一个整体提交。如果任何单个操作失败，整个事务将不会应用。如果你想要维护计数器或拥有多个相互依赖的实体，这非常有用。在
    Google Cloud Datastore 的事务中，所有被读取的实体都会被锁定（其他代码被阻止进行更改），直到事务完成，这提供了额外的安全保障，并防止数据竞争。
- en: Note
  id: totrans-2
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you were building a bank (it seems crazy, but the guys at Monzo in London
    are indeed building a bank using Go), you might represent user accounts as an
    entity called `Account`. To transfer money from one account to another, you'd
    need to make sure the money was deducted from account A and deposited into account
    B as a single transaction. If either fails, people aren't going to be happy (to
    be fair, if the deduction operation failed, the owner of account A would probably
    be happy because B would get the money without it costing A anything).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在构建一家银行（这似乎很疯狂，但伦敦的 Monzo 公司确实正在使用 Go 语言构建银行），你可能将用户账户表示为一个名为 `Account`
    的实体。要从一个账户向另一个账户转账，你需要确保从账户 A 中扣除的金额作为一笔交易存入账户 B。如果其中任何一个操作失败，人们都不会高兴（公平地说，如果扣除操作失败，账户
    A 的所有者可能会很高兴，因为账户 B 会收到钱，而账户 A 不会损失任何东西）。
- en: To see where we are going to use transactions, let's first add model answers
    to the questions.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解我们将如何使用事务，让我们首先将模型答案添加到问题中。
- en: 'Create a new file called `answers.go` and add the following struct and validation
    method:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个名为 `answers.go` 的新文件，并添加以下结构体和验证方法：
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '`Answer` is similar to a question, has `datastore.Key` (which will not be persisted),
    has `CTime` to capture the timestamp, and embeds `UserCard` (representing the
    person answering the question). It also has a `Score` integer field, which will
    go up and down as users vote on the answers.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '`Answer` 结构体与问题类似，包含 `datastore.Key`（将不会被持久化），有 `CTime` 用于捕获时间戳，并嵌入 `UserCard`（代表回答问题的个人）。它还有一个
    `Score` 整数字段，当用户对答案进行投票时，该字段会上下浮动。'
