["```go\nfunc GetAnswers(ctx context.Context, questionKey *datastore.Key)  \n([]*Answer, error) { \n  var answers []*Answer \n  answerKeys, err := datastore.NewQuery(\"Answer\"). \n    Ancestor(questionKey). \n    Order(\"-Score\"). \n    Order(\"-CTime\"). \n    GetAll(ctx, &answers) \n  for i, answer := range answers { \n    answer.Key = answerKeys[i] \n  } \n  if err != nil { \n    return nil, err \n  } \n  return answers, nil \n} \n\n```", "```go\ndatastore.NewQuery(\"Answer\"). \n Filter(\"Authorized =\", true) \n\n```", "```go\nfunc TopQuestions(ctx context.Context) ([]*Question, error) { \n  var questions []*Question \n  questionKeys, err := datastore.NewQuery(\"Question\"). \n    Order(\"-AnswersCount\"). \n    Order(\"-CTime\"). \n    Limit(25). \n    GetAll(ctx, &questions) \n  if err != nil { \n    return nil, err \n  } \n  for i := range questions { \n    questions[i].Key = questionKeys[i] \n  } \n  return questions, nil \n} \n\n```"]