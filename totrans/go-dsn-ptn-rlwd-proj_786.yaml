- en: Embedding a different view of entities
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 嵌入实体的不同视图
- en: 'Now it''s time to create our `Vote` structure, which we''ll do inside a new
    file called `votes.go`:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候创建我们的`Vote`结构体了，我们将在名为`votes.go`的新文件中完成这项工作：
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: A `Vote` structure contains many of our embeddable card types representing `Question`,
    `Answer` and `User` casting the vote. It also contains a `Score` integer, which
    will be either `1` or `-1` (depending on whether they voted up or down). We will
    also keep track of when they cast their vote (or last changed it) with the `MTime`
    `time.Time` field.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '`Vote`结构体包含了许多可嵌入的卡片类型，代表投了票的`问题`、`答案`和`用户`。它还包含一个`分数`整数，这将要么是`1`要么是`-1`（取决于他们是否投了赞成票或反对票）。我们还将使用`MTime`
    `time.Time`字段跟踪他们何时投了票（或最后更改了它）。'
- en: Note
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can use pointers to the `*Card` types in the `Vote` struct if you like.
    This would save additional copies being made when if you pass the `Vote` object
    in and out of functions, but that would mean that any changes made inside these
    functions would affect the original data rather than just their local copy. In
    most situations, there isn't much of a performance benefit to using pointers and
    it might be considered simpler to omit them. This book deliberately mixes both
    approaches to show you how they work, but you should understand the implications
    before making a decision.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您喜欢，可以在`Vote`结构体中使用`*Card`类型的指针。这会在您在函数内外传递`Vote`对象时节省额外的复制，但这意味着在这些函数内部所做的任何更改都会影响原始数据，而不仅仅是它们的本地副本。在大多数情况下，使用指针并不会带来太大的性能提升，而且可能被认为省略它们会更简单。这本书故意混合了两种方法，以向您展示它们是如何工作的，但在做出决定之前，您应该理解其影响。
- en: Like our `UserCard` method, we are going to add appropriate versions for questions
    and answers, but this time we are going to be more selective about which fields
    should be included and which should be left out.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 就像我们的`UserCard`方法一样，我们将为问题和答案添加适当的版本，但这次我们将更谨慎地选择哪些字段应该包含，哪些应该省略。
- en: 'In `questions.go`, add the `QuestionCard` type and the associated helper method:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在`questions.go`中添加`QuestionCard`类型和相关辅助方法：
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The `QuestionCard` type captures the `Question` string and who asked it (our
    `UserCard` method, again), but we are leaving out the `CTime` and `AnswersCount`
    fields.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '`QuestionCard`类型捕获了`问题`字符串和谁提出了它（我们的`UserCard`方法，再次），但我们正在省略`CTime`和`答案数量`字段。'
- en: 'Let''s add `AnswerCard` to `answers.go` next:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在`answers.go`中添加`AnswerCard`：
- en: '[PRE2]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Similarly, we are only capturing the `Answer` string and `User` and excluding
    `CTime` and `Score`.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，我们只捕获`答案`字符串和`用户`，排除`CTime`和`分数`。
- en: Deciding which fields to capture and which to omit is entirely dependent on
    the user experience you wish to provide. We might decide that when we show a vote,
    we want to show the score of `Answer` at the time, or we might want to show the
    current score of `Answer` regardless of what it was at the time the vote was cast.
    Perhaps we want to send a push notification to the user who wrote the answer saying
    something like "Blanca has up-voted your answer to Ernesto's question it now has
    a score of 15", in which case we would need to grab the `Score` field too.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 决定要捕获哪些字段以及要省略哪些字段完全取决于您希望提供的用户体验。我们可能会决定，当我们展示投票时，我们想要显示当时`答案`的分数，或者我们可能想要显示`答案`当前的分数，无论投票时它是什么。也许我们想要向撰写答案的用户发送推送通知，内容类似于“Blanca已经对Ernesto的问题的答案进行了点赞，现在得分为15”，在这种情况下，我们还需要获取`分数`字段。
