- en: Accessing parents via datastore.Key
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Our `CastVote` function could require that we know `datastore.Key` for `Question`
    so that we can load it. But one nice feature about ancestor keys is that from
    the key alone, you can access the parent key. This is because the hierarchy of
    keys is maintained in the key itself, a bit like a path.
  prefs: []
  type: TYPE_NORMAL
- en: 'Three answers to question 1 might have these keys:'
  prefs: []
  type: TYPE_NORMAL
- en: Question,1/Answer,1
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Question,1/Answer,2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Question,1/Answer,3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The actual details of how keys work under the hood are kept internal to the
    datastore package and could change at any time. So it is smart to only rely on
    things that the API guarantees such as being able to access the parent via the
    `Parent` method.
  prefs: []
  type: TYPE_NORMAL
