["```go\nfunc castVoteInTransaction(ctx context.Context, answerKey *datastore.Key, question *Question, user *User, score int) (Vote, error) { \n  var vote Vote \n  answer, err := GetAnswer(ctx, answerKey) \n  if err != nil { \n    return vote, err \n  } \n  voteKeyStr := fmt.Sprintf(\"%s:%s\", answerKey.Encode(), user.Key.Encode()) \n  voteKey := datastore.NewKey(ctx, \"Vote\", voteKeyStr, 0, nil) \n  var delta int // delta describes the change to answer score \n  err = datastore.Get(ctx, voteKey, &vote) \n  if err != nil && err != datastore.ErrNoSuchEntity { \n    return vote, err \n  } \n  if err == datastore.ErrNoSuchEntity { \n    vote = Vote{ \n      Key:      voteKey, \n      User:     user.Card(), \n      Answer:   answer.Card(), \n      Question: question.Card(), \n      Score:    score, \n    } \n  } else { \n    // they have already voted - so we will be changing \n    // this vote \n    delta = vote.Score * -1 \n  } \n  delta += score \n  answer.Score += delta \n  err = answer.Put(ctx) \n  if err != nil { \n    return vote, err \n  } \n  vote.Key = voteKey \n  vote.Score = score \n  vote.MTime = time.Now() \n  err = vote.Put(ctx) \n  if err != nil { \n    return vote, err \n  } \n  return vote, nil \n} \n\n```"]