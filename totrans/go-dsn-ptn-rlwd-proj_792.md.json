["```go\nfunc respond(ctx context.Context, w http.ResponseWriter,\n r *http.Request, v interface{}, code int) { \n  var buf bytes.Buffer \n  err := json.NewEncoder(&buf).Encode(v) \n  if err != nil { \n    respondErr(ctx, w, r, err, http.StatusInternalServerError) \n    return \n  } \n  w.Header().Set(\"Content-Type\", \n   \"application/json; charset=utf-8\") \n  w.WriteHeader(code) \n  _, err = buf.WriteTo(w) \n  if err != nil { \n    log.Errorf(ctx, \"respond: %s\", err) \n  } \n} \n\n```", "```go\nfunc respondErr(ctx context.Context, w http.ResponseWriter,\n r *http.Request, err error, code int) { \n  errObj := struct { \n    Error string `json:\"error\"` \n  }{ Error: err.Error() } \n  w.Header().Set(\"Content-Type\", \"application/json; charset=utf-8\") \n  w.WriteHeader(code) \n  err = json.NewEncoder(w).Encode(errObj) \n  if err != nil { \n    log.Errorf(ctx, \"respondErr: %s\", err) \n  } \n} \n\n```"]