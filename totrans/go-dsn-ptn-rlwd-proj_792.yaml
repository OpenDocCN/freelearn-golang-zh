- en: Response helpers
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We are going to add a pair of helper functions that will make responding to
    API requests easy. Add the `respond` function to `http.go`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The respond method contains a `context`, `ResponseWriter`, `Request`, the object
    to respond with, and a status code. It encodes `v` into an internal buffer before
    setting the appropriate headers and writing the response.
  prefs: []
  type: TYPE_NORMAL
- en: We are using a buffer here because it's possible that the encoding might fail.
    If it does so but has already started writing the response, the 200 OK header
    will be sent to the client, which is misleading. Instead, encoding to a buffer
    lets us be sure that completes without issue before deciding what status code
    to respond with.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now add the `respondErr` function at the bottom of `http.go`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: This function writes `error` wrapped in a struct that embeds the error string
    as a field called `error`.
  prefs: []
  type: TYPE_NORMAL
