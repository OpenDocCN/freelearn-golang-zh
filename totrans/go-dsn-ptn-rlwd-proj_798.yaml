- en: Running apps with multiple modules
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行具有多个模块的应用程序
- en: For applications such as ours that have multiple modules, we need to list out
    all the YAML files for the `goapp` command.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 对于像我们这样的具有多个模块的应用程序，我们需要列出所有用于 `goapp` 命令的 YAML 文件。
- en: 'To serve our new application, in a terminal, execute this:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 要为我们新的应用程序提供服务，请在终端中执行以下命令：
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Starting with the dispatch file, we are listing all the associated configuration
    files. If you miss any, you will see an error when you try to serve your application.
    Here, you will notice that the output now lists that each module is being deployed
    on a different port:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 从调度文件开始，我们正在列出所有相关的配置文件。如果你遗漏了任何一个，当你尝试提供服务时，你将看到错误。在这里，你会注意到输出现在列出了每个模块正在不同的端口上部署：
- en: '![Running apps with multiple modules](img/00068.jpeg)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![运行具有多个模块的应用程序](img/00068.jpeg)'
- en: We can access modules directly by visiting each port, but luckily we have our
    dispatcher running on port `:8080`, which will do that for us based on the rules
    we specified in our `dispatch.yaml` configuration file.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过访问每个端口来直接访问模块，但幸运的是，我们的调度器正在端口 `:8080` 上运行，它将根据我们在 `dispatch.yaml` 配置文件中指定的规则为我们完成这项工作。
