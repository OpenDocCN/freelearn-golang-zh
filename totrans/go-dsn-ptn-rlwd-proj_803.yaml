- en: Introducing gRPC
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍gRPC
- en: There are many options when it comes to how our services will communicate with
    each other and how clients will communicate with the services, and Go kit doesn't
    care (rather, it doesn't mind–it cares enough to provide implementations of many
    popular mechanisms). In fact, we are able to add multiple options for our users
    and let them decide which one they want to use. We will add support the familiar
    JSON over HTTP, but we are also going to introduce a new technology choice for
    APIs.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的服务如何相互通信以及客户端如何与服务通信方面有许多选项，而Go kit并不关心（实际上，它并不介意——它足够关心，以至于提供了许多流行机制的实现）。事实上，我们能够为用户提供多个选项，并让他们决定使用哪一个。我们将添加对熟悉的JSON
    over HTTP的支持，但我们也将引入一种新的API技术选择。
- en: gRPC, short for Google's **Remote Procedure Call**, is an open source mechanism
    used to call code that is running remotely over a network. It uses HTTP/2 for
    transport and protocol buffers to represent the data that makes up services and
    messages.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: gRPC，即Google的**远程过程调用**，是一种开源机制，用于通过网络调用远程运行的代码。它使用HTTP/2进行传输，并使用协议缓冲区来表示构成服务和消息的数据。
- en: An RPC service differs from RESTful web services because rather than making
    changes to data using well-defined HTTP standards, as you do with REST (`POST`
    to create something, `PUT` to update something, `DELETE` to delete something,
    and so on), you are triggering a remote function or method instead, passing in
    expected arguments and getting back one or more pieces of data in response.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: RPC服务与RESTful Web服务不同，因为与REST（使用定义良好的HTTP标准对数据进行更改，如使用REST进行创建、更新、删除等）不同，你是在触发一个远程函数或方法，传递预期的参数，并得到一个或多个数据响应。
- en: 'To highlight the difference, imagine that we are creating a new user. In a
    RESTful world, we could make a request like this:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 为了突出这种差异，想象我们正在创建一个新用户。在RESTful世界中，我们可以发出如下请求：
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'And we might get a response like this:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可能会得到如下响应：
- en: '[PRE1]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: RESTful calls represent queries or changes to the state of resources. In an
    RPC world, we would use generated code instead in order to make binary serialized
    procedure calls that feel much more like normal methods or functions in Go.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: RESTful调用表示对资源状态进行查询或更改。在RPC世界中，我们会使用生成的代码来执行二进制序列化的过程调用，这感觉更像是Go中的正常方法或函数。
- en: The only other key difference between a RESTful service and a gPRC service is
    that rather than JSON or XML, gPRC speaks a special format called **protocol buffers**.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 与RESTful服务和gPRC服务之间的唯一其他关键区别是，gPRC不是使用JSON或XML，而是使用一种称为**协议缓冲区**的特殊格式。
