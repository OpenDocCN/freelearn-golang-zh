- en: Constructors in Go
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A **constructor** in other object-oriented languages is a special kind of function
    that creates instances of classes. It performs any initialization and takes in
    required arguments such as dependencies, among others. It is usually the only
    way to create an object in these languages, but it often has weird syntax or relies
    on naming conventions (such as the function name being the same as the class,
    for example).
  prefs: []
  type: TYPE_NORMAL
- en: Go doesn't have constructors; it's much simpler and just has functions, and
    since functions can return arguments, a constructor would just be a global function
    that returns a usable instance of a struct. The Go philosophy of simplicity drives
    these kinds of decisions for the language designers; rather than forcing people
    to have to learn about a new concept of constructing objects, developers only
    have to learn how functions work and they can build constructors with them.
  prefs: []
  type: TYPE_NORMAL
- en: Even if we aren't doing any special work in the construction of an object (such
    as initializing fields, validating dependencies, and so on), it is sometimes worth
    adding a construction function anyway. In our case, we do not want to bloat the
    API by exposing the `vaultService` type since we already have our `Service` interface
    type exposed and are hiding it inside a constructor is a nice way to achieve this.
  prefs: []
  type: TYPE_NORMAL
- en: 'Underneath the `vaultService` struct definition, add the `NewService` function:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Not only does this prevent us from needing to expose our internals, but if in
    the future we do need to do more work to prepare the `vaultService` for use, we
    can also do it without changing the API and, therefore, without requiring the
    users of our package to change anything on their end, which is a big win for API
    design.
  prefs: []
  type: TYPE_NORMAL
