["```go\ntype hashRequest struct { \n  Password string `json:\"password\"` \n} \ntype hashResponse struct { \n  Hash string `json:\"hash\"` \n  Err  string `json:\"err,omitempty\"` \n} \n\n```", "```go\nfunc decodeHashRequest(ctx context.Context, r\n *http.Request) (interface{}, error) { \n  var req hashRequest \n  err := json.NewDecoder(r.Body).Decode(&req) \n  if err != nil { \n    return nil, err \n  } \n  return req, nil \n} \n\n```", "```go\ntype validateRequest struct { \n  Password string `json:\"password\"` \n  Hash     string `json:\"hash\"` \n} \ntype validateResponse struct { \n  Valid bool   `json:\"valid\"` \n  Err   string `json:\"err,omitempty\"` \n} \nfunc decodeValidateRequest(ctx context.Context, \n r *http.Request) (interface{}, error) { \n  var req validateRequest \n  err := json.NewDecoder(r.Body).Decode(&req) \n  if err != nil { \n    return nil, err \n  } \n  return req, nil \n} \n\n```", "```go\nfunc encodeResponse(ctx context.Context, \n  w http.ResponseWriter, response interface{})\nerror { \n  return json.NewEncoder(w).Encode(response) \n} \n\n```"]