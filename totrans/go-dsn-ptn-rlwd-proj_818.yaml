- en: Using Go kit endpoints
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Go kit 端点
- en: 'It is time to create one of our endpoints instances that we can pass to our
    servers. Add the following code to the main function body:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 是时候创建一个我们可以传递给服务器的端点实例了。将以下代码添加到主函数体中：
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: We are assigning the fields to the output of our endpoint helper functions for
    both the hash and validate methods. We are passing in the same service for both,
    so the `endpoints` variable essentially ends up being a wrapper around our `srv`
    service.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将字段赋值给端点辅助函数的输出，无论是哈希还是验证方法。我们传递的是相同的服务，所以 `endpoints` 变量实际上成了我们 `srv` 服务的包装器。
- en: Tip
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: You may be tempted to neaten up this code by removing the assignment to the
    variables altogether and just set the return of the helper functions to the fields
    in the struct initialization, but when we come to add middleware later, you'll
    be thankful for this approach.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会想通过完全移除变量的赋值来简化这段代码，直接将辅助函数的返回值设置到结构体初始化的字段中，但当我们稍后添加中间件时，你会感谢这种方法的。
- en: We are now ready to start up our JSON/HTTP and gRPC servers using these endpoints.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以使用这些端点来启动我们的 JSON/HTTP 和 gRPC 服务器。
