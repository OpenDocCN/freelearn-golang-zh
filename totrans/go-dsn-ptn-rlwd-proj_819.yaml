- en: Running the HTTP server
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 运行 HTTP 服务器
- en: 'Now we will add the goroutine to make and run the JSON/HTTP server to the main
    function body:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将向主函数体中添加 goroutine 来创建和运行 JSON/HTTP 服务器：
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: All the heavy lifting has already been done for us in our package code by Go
    kit, so we are left with simply calling the `NewHTTPServer` function, passing
    in the background context and the service endpoints we wish for it to expose,
    before calling the standard library's `http.ListenAndServe`, which exposes the
    handler functionality in the specified `httpAddr`. If an error occurs, we send
    it down the error channel.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 所有繁重的工作已经由 Go kit 在我们的包代码中为我们完成，所以我们只需简单地调用 `NewHTTPServer` 函数，传入后台上下文和希望它公开的服务端点，然后在调用标准库的
    `http.ListenAndServe` 之前，该函数在指定的 `httpAddr` 中公开处理功能。如果发生错误，我们将它发送到错误通道。
