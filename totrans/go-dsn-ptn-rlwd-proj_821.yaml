- en: Preventing a main function from terminating immediately
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 防止主函数立即终止
- en: If we closed our main function here, it would immediately exit and terminate
    all of our servers. This is because everything we're doing that would prevent
    this is inside its own goroutine. To prevent this, we need a way to block the
    function at the end to wait until something tells the program to terminate.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们在这里关闭了主函数，它将立即退出并终止所有服务器。这是因为防止这种情况发生的一切操作都在它自己的goroutine中执行。为了防止这种情况，我们需要一种方法来在函数末尾阻塞，直到有东西告诉程序终止。
- en: Since we are using the `errChan` error channel for errors, this is a perfect
    candidate. We can just listen on this channel, which (while nothing has been sent
    down it) will block and allow the other goroutines to do their work. If something
    goes wrong (or if a termination signal is received), the `<-errChan` call will
    unblock and exit and all goroutines will be stopped.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们正在使用`errChan`错误通道来处理错误，这是一个完美的候选者。我们只需监听这个通道，在没有任何内容发送到该通道的情况下，它将会阻塞并允许其他goroutines执行它们的工作。如果发生错误（或者收到终止信号），`<-errChan`调用将会解除阻塞并退出，所有goroutines都将停止。
- en: 'At the bottom of the main function, add the final statement and closing block:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在主函数的底部，添加最后的语句和关闭块：
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: When an error occurs, we'll just log it and exit with a nonzero code.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 当发生错误时，我们只需记录它并以非零代码退出。
