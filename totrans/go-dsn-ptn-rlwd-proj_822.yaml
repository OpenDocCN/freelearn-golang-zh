- en: Consuming the service over HTTP
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过 HTTP 消费服务
- en: Now that we have wired everything up, we can test the HTTP server using the
    `curl` command–or any tool that lets us make JSON/HTTP requests.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经连接好了一切，我们可以使用 `curl` 命令–或者任何允许我们发送 JSON/HTTP 请求的工具来测试 HTTP 服务器。
- en: 'In a terminal, let''s start by running our servers. Head over to the `vault/cmd/vaultd`
    folder and start the program:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在终端中，让我们首先运行我们的服务器。前往 `vault/cmd/vaultd` 文件夹并启动程序：
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Once the server is running, you''ll see something like this:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦服务器启动，你将看到如下内容：
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Now, open another terminal and issue the following HTTP request using `curl`:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，打开另一个终端，使用 `curl` 发出以下 HTTP 请求：
- en: '[PRE2]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We are making a POST request to the hash endpoint with a JSON body that contains
    the password we want for hashing. Then, we get something like this:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在向散列端点发送一个包含我们想要散列的密码的 JSON 体的 POST 请求。然后，我们得到如下内容：
- en: '[PRE3]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Tip
  id: totrans-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: The hash in this example won't match yours–there are many acceptable hashes
    and there's no way to know which one you'll get. Ensure that you copy and paste
    your actual hash (everything inside the double quotes).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这个例子中的散列将不会匹配你的散列–有多个可接受的散列，而且无法知道你将得到哪一个。确保你复制并粘贴你实际的散列（双引号内的所有内容）。
- en: 'The resulting hash is what we would store in our data store given the specified
    password. Then, when the user tries to log in again, we will make a request with
    the password they entered, along with this hash, to the validate endpoint:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的散列是我们根据指定的密码存储在数据存储中的内容。然后，当用户再次尝试登录时，我们将使用他们输入的密码以及这个散列向验证端点发送请求：
- en: '[PRE4]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Make this request by copying and pasting the correct hash and entering the
    same `hernandez` password, and you will see this result:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 通过复制正确的散列并输入相同的 `hernandez` 密码来发送这个请求，你将看到如下结果：
- en: '[PRE5]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Now, change the password (this is equivalent to the user getting it wrong)
    and you will see this:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，更改密码（这相当于用户输入错误）你将看到如下内容：
- en: '[PRE6]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: You can see that the JSON/HTTP micro-service exposure for our vault service
    is complete and working.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到，我们保险库服务的 JSON/HTTP 微服务暴露是完整且正在工作的。
- en: Next, we will look at how we can consume the gRPC version.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将探讨如何消费 gRPC 版本。
