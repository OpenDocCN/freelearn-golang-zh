- en: Parsing arguments in CLIs
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在CLIs中解析参数
- en: Parsing arguments in command-line tools is very common, and there is a neat
    idiomatic way to do it in Go. The arguments are all available via the `os.Args`
    slice, or if you're using flags, the `flags.Args()` method (which gets arguments
    with flags stripped). We want to take each argument off the slice (from the beginning)
    and consume them in an order, which will help us decide which execution flow to
    take through the program. We're going to add a helper function called `pop`, which
    will return the first item, and the slice with the first item trimmed.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在命令行工具中解析参数是非常常见的，而在Go语言中有一个整洁的惯用方法来做这件事。所有的参数都通过`os.Args`切片提供，或者如果你使用的是标志，可以通过`flags.Args()`方法（该方法会移除标志并获取参数）。我们希望从切片中（从开始处）移除每个参数并按顺序消费它们，这将帮助我们决定通过程序采取哪种执行流程。我们将添加一个名为`pop`的辅助函数，它将返回第一个项目，并返回移除第一个项目后的切片。
- en: 'We''ll write a quick unit test to ensure that our `pop` function is working
    as expected. If you would like to try and write the pop function yourself, then
    you should do that once the test is in place. Remember that you can run tests
    by navigating to the appropriate folder in a terminal and executing this:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将编写一个快速的单元测试来确保我们的`pop`函数按预期工作。如果你想要尝试自己编写`pop`函数，那么你应该在测试就绪后进行。记住，你可以通过在终端中导航到适当的文件夹并执行以下命令来运行测试：
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Create a new file inside `vaultcli` called `main_test.go` and add the following
    test function:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在`vaultcli`内部创建一个名为`main_test.go`的新文件，并添加以下测试函数：
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: We expect each call to pop to yield the next item in the slice and empty arguments
    once the slice is empty.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我们期望每次调用`pop`都会产生切片中的下一个项目，一旦切片为空，则返回空参数。
- en: 'At the bottom of `main.go`, add the `pop` function:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在`main.go`的底部添加`pop`函数：
- en: '[PRE2]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
