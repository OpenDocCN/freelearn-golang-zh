- en: Manually testing the rate limiter
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 手动测试速率限制器
- en: To see whether our rate limiter is working, and since we set such low thresholds,
    we can test it just using our command-line tool.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 为了查看我们的速率限制器是否工作，并且由于我们设置了如此低的阈值，我们可以仅使用我们的命令行工具进行测试。
- en: 'First, restart the server (so the new code runs) by hitting *Ctrl + C* in the
    terminal window running the server. This signal will be trapped by our code, and
    an error will be sent down `errChan`, causing the program to quit. Once it has
    terminated, restart it:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，通过在运行服务器的终端窗口中按*Ctrl + C*来重新启动服务器（以便运行新代码）。这个信号将被我们的代码捕获，并将错误发送到`errChan`，导致程序退出。一旦它已经终止，重新启动它：
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Now, in another window, let''s hash some passwords:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在另一个窗口中，让我们散列一些密码：
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Repeat this command a few times–in most terminals, you can press the up arrow
    key and return. You''ll notice that the first few requests succeed because it''s
    within the limits, but if you get a little more aggressive and issue more than
    five requests in a second, you''ll notice that we get errors:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 重复执行此命令几次——在大多数终端中，你可以按上箭头键并回车。你会注意到前几次请求都成功了，因为它们在限制范围内，但如果你变得稍微激进一些，在一秒内发出超过五个请求，你会注意到我们得到了错误：
- en: '[PRE2]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This shows that our rate limiter is working. We see errors until the token bucket
    fills back up, where our requests are fulfilled again.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这表明我们的速率限制器正在工作。我们会看到错误，直到令牌桶重新填满，我们的请求再次得到满足。
