- en: Building a Docker image
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建 Docker 镜像
- en: 'To build the image, in a terminal, navigate to `Dockerfile` and run the following
    command:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 要构建镜像，请在终端中导航到 `Dockerfile` 并运行以下命令：
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: We are using the `docker` command to build the image. The final dot indicates
    that we want to build Dockerfile from the current directory. The `-t` flag specifies
    that we want to give our image the name of `vaultd`. This will allow us to refer
    to it by name rather than a hash that Docker will assign to it.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用 `docker` 命令来构建镜像。最后的点表示我们想要从当前目录构建 Dockerfile。`-t` 标志指定我们想要给我们的镜像命名为 `vaultd`。这将允许我们通过名称而不是
    Docker 分配给它的哈希值来引用它。
- en: 'If this is the first time you''ve used Docker, and in particular the `scratch`
    base image, then it will take some time to download the required dependencies
    from Docker Hub depending on your Internet connection. Once that''s finished,
    you will see output similar to the following:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这是您第一次使用 Docker，特别是使用 `scratch` 基础镜像，那么根据您的网络连接速度，从 Docker Hub 下载所需的依赖项将需要一些时间。一旦完成，您将看到类似以下输出的内容：
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: For each command, a new image is created (you can see the intermediate containers
    being disposed of along the way) until we end up with the final image.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个命令，都会创建一个新的镜像（您可以在过程中看到中间容器被销毁），直到我们得到最终的镜像。
- en: 'Since we are building our binary on our local machine and copying it into the
    container (with the `ADD` command), our Docker image ends up being only about
    7 MB: pretty small when you consider that it contains everything it needs to run
    our services.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们是在本地机器上构建二进制文件并将其复制到容器中（使用 `ADD` 命令），我们的 Docker 镜像最终只有大约 7 MB：考虑到它包含了运行我们服务所需的一切，这相当小。
