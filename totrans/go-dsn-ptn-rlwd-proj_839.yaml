- en: Running a Docker image locally
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now that our image is built, we can test it by running it with the following
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The `docker run` command will spin up an instance of the `vaultd` image.
  prefs: []
  type: TYPE_NORMAL
- en: The `-p` flags specify a pair of ports to be exposed, the first value is the
    host port and the second value (following the colon) is the port within the image.
    In our case, we are saying that we want port `8080` to be exposed onto port `6060`
    and port `8081` exposed via port `6061`.
  prefs: []
  type: TYPE_NORMAL
- en: We are giving the running instance a name of `localtest` with the `--name` flag,
    which will help us to identify it when inspecting and stopping it. The `--rm`
    flag indicates that we want the image to be removed once we have stopped it.
  prefs: []
  type: TYPE_NORMAL
- en: 'If this is successful, you will notice that the Vault service has indeed begun
    because it is telling us the ports to which it is bound:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: These are the internal ports; remember that we have mapped these to different
    external ports instead. This seems confusing but ends up being very powerful,
    since the person responsible for spinning up the instances of the service gets
    to decide which ports are right for their environment, and the Vault service itself
    doesn't have to worry about it.
  prefs: []
  type: TYPE_NORMAL
- en: 'To see this running, open another terminal and use the `curl` command to access
    the JSON endpoint of our password hashing service:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'You will see something that resembles the output from the running service:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
