- en: Running a Docker image locally
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本地运行Docker镜像
- en: 'Now that our image is built, we can test it by running it with the following
    command:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经构建了镜像，我们可以通过以下命令来测试它：
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The `docker run` command will spin up an instance of the `vaultd` image.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '`docker run`命令将启动`vaultd`镜像的一个实例。'
- en: The `-p` flags specify a pair of ports to be exposed, the first value is the
    host port and the second value (following the colon) is the port within the image.
    In our case, we are saying that we want port `8080` to be exposed onto port `6060`
    and port `8081` exposed via port `6061`.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '`-p`标志指定要公开的一对端口，第一个值是主机端口，第二个值（冒号之后）是镜像内的端口。在我们的例子中，我们表示我们希望端口`8080`公开到端口`6060`，端口`8081`通过端口`6061`公开。'
- en: We are giving the running instance a name of `localtest` with the `--name` flag,
    which will help us to identify it when inspecting and stopping it. The `--rm`
    flag indicates that we want the image to be removed once we have stopped it.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用`--name`标志给正在运行的实例命名为`localtest`，这将帮助我们识别它，在检查和停止它时。`--rm`标志表示我们希望在停止后删除镜像。
- en: 'If this is successful, you will notice that the Vault service has indeed begun
    because it is telling us the ports to which it is bound:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 如果运行成功，你会注意到Vault服务确实已经开始，因为它正在告诉我们它绑定到的端口：
- en: '[PRE1]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Tip
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: These are the internal ports; remember that we have mapped these to different
    external ports instead. This seems confusing but ends up being very powerful,
    since the person responsible for spinning up the instances of the service gets
    to decide which ports are right for their environment, and the Vault service itself
    doesn't have to worry about it.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是内部端口；请记住，我们已经将这些端口映射到不同的外部端口上。这看起来可能有些令人困惑，但最终却非常强大，因为负责启动服务实例的人可以决定哪些端口适合他们的环境，而Vault服务本身则无需担心这一点。
- en: 'To see this running, open another terminal and use the `curl` command to access
    the JSON endpoint of our password hashing service:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看此服务的运行情况，请打开另一个终端，并使用`curl`命令访问我们的密码哈希服务的JSON端点：
- en: '[PRE2]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You will see something that resembles the output from the running service:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 你将看到类似正在运行的服务输出的内容：
- en: '[PRE3]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
