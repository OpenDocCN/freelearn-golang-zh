- en: Getting GOPATH right
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`GOPATH` is another environment variable to a folder (such as `PATH` in the
    previous section) that is used to specify the location for the Go source code
    and the compiled binary packages. Using the `import` command in your Go programs
    will cause the compiler to look in the `GOPATH` location to find the packages
    you are referring to. When using `go get` and other commands, projects are downloaded
    into the `GOPATH` folder.'
  prefs: []
  type: TYPE_NORMAL
- en: While the `GOPATH` location can contain a list of colon-separated folders, such
    as `PATH`Â and you can even have a different value for `GOPATH` depending on which
    project you are working in it is strongly recommended that you use a single `GOPATH`
    location for everything, and this is what we will assume you will do for the projects
    in this book.
  prefs: []
  type: TYPE_NORMAL
- en: 'Create a new folder called `go`, this time in your `Users` folder somewhere
    perhaps in a `Work` subfolder. This will be our `GOPATH` target and is where all
    the third-party code and binaries will end up as well as where we will write our
    Go programs and packages. Using the same technique you used when setting the `PATH`
    environment variable in the previous section, set the `GOPATH` variable to the
    new `go` folder. Let''s open a terminal and use one of the newly installed commands
    to get a third-party package for us to use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Getting the `silk` library will actually cause this folder structure to be
    created: `$GOPATH/src/github.com/matryer/silk`. You can see that the path segments
    are important in how Go organizes things, which helps namespace projects and keeps
    them unique. For example, if you created your own package called `silk`, you wouldn''t
    keep it in the GitHub repository of `matryer`, so the path would be different.'
  prefs: []
  type: TYPE_NORMAL
- en: When we create projects in this book, you should consider a sensible `GOPATH`
    root for them. For example, I used `github.com/matryer/goblueprints`, and if you
    were to go get that, you would actually get a complete copy of all the source
    code for this book in your `GOPATH` folder!
  prefs: []
  type: TYPE_NORMAL
