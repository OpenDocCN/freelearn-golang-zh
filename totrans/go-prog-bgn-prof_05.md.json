["```go\nfunc checkNumbers() {\n    for i := 1; i <= 30; i++ {\n        if i%2 == 0 {\n            fmt.Println(\"Even\")\n        } else {\n            fmt.Println(\"Odd\")\n        }\n    }\n}\n```", "```go\nfunc checkNumbers() {\n```", "```go\n    for i := 1; i <= 30; i++ {\n    ```", "```go\n    if i%2 == 0 {\n    ```", "```go\nfunc main() {\n  fmt.Println(\"Main is in control\")\n  checkNumbers()\n  fmt.Println(\"Back to main\")\n}\n```", "```go\n    package main\n    import (\n      \"fmt\"\n    )\n    func main() {\n      itemsSold()\n    }\n    ```", "```go\n    func itemsSold() {\n    ```", "```go\n      items := make(map[string]int)\n      items[\"John\"] = 41\n      items[\"Celina\"] = 109\n      items[\"Micah\"] = 24\n    ```", "```go\n      for k, v := range items{\n    ```", "```go\n        fmt.Printf(\"%s sold %d items and \", k, v)\n    ```", "```go\n        if v < 40 {\n          fmt.Println(\"is below expectations.\")\n        } else if v > 40 && v <= 100 {\n          fmt.Println(\"meets expectations.\")\n        } else if v > 100 {\n          fmt.Println(\"exceeded expectations.\")\n        }\n      }\n    }\n    ```", "```go\nJohn sold 41 items and meets expectations.\nCelina sold 109 items and exceeded expectations.\nMicah sold 24 items and is below expectations.\n```", "```go\nfunc calculateSalary(lastName string, firstName string, age int, state string, country string, hoursWorked int, hourlyRate, isEmployee bool) {\n// code\n}\n```", "```go\nfunc main() {\n  greeting(\"Cayden\", 45)\n}\nfunc greeting(name string, age int) {\n  fmt.Printf(\"%s is %d\", name, age)\n}\n```", "```go\nCayden is 45\n```", "```go\nfunc main() {\n  greeting(45,\"Cayden\")\n}\nfunc greeting(name string, age int) {\n  fmt.Printf(\"%s is %d\",name, age)\n}\n```", "```go\nfunc main() {\n  checkNumbers(10)\n}\nfunc checkNumbers(end int) {\n  for i := 1; i <= end; i++ {\n    if i%2 == 0 {\n      fmt.Println(\"Even\")\n    } else {\n      fmt.Println(\"Odd\")\n    }\n  }\n}\n```", "```go\nfunc main() {\n  start:= 10\n  end:= 20\n  checkNumbers(start, end)\n}\nfunc checkNumbers(start int, end int) {\n  for i := start; i <= end; i++ {\n    // code omitted for brevity\n  }\n}\n```", "```go\nfunc main() {\n  start, end := 10,20\n  checkNumbers(start, end)\n}\nfunc checkNumbers(start, end int) {\n  // code…\n}\n```", "```go\n    package main\n    import (\n      \"fmt\"\n      \"strings\"\n    )\n    func main() {\n      hdr :=[]string{\"empid\", \"employee\", \"address\", \"hours worked\", \"hourly rate\", \"manager\"}\n      csvHdrCol(hdr)\n      hdr2 :=[]string{\"employee\", \"empid\", \"hours worked\", \"address\", \"manager\", \"hourly rate\"}\n      csvHdrCol(hdr2)\n    }\n    func csvHdrCol(header []string) {\n            csvHeadersToColumnIndex:= make(map[int]string)\n    ```", "```go\n    for i, v := range header {\n    ```", "```go\n    v = strings.TrimSpace(v)\n    ```", "```go\n                    switch strings.ToLower(v) {\n                    case \"employee\":\n                            csvHeadersToColumnIndex[i] = v\n                    case \"hours worked\":\n                            csvHeadersToColumnIndex[i] = v\n                    case \"hourly rate\":\n                            csvHeadersToColumnIndex[i] = v\n          }\n      }\n    ```", "```go\n           fmt.Println(csvHeadersToColumnIndex)\n    }\n    ```", "```go\nMap[1:employee 3:hours worked 4: hourly rate]\nMap[0:employee 2:hours worked 5: hourly rate]\n```", "```go\nfunc main() {\n  m:= \"Uncle Bob\"\n  greeting()\n}\nfunc greeting() {\n  fmt.Printf(\"Greeting %s\", m)\n}\n```", "```go\nfunc main() {\n  m:= \"Uncle Bob\"\n  greeting(m)\n  fmt.Printf(\"Hi from main: %s\", s)\n}\nfunc greeting(name string) {\n  fmt.Printf(\"Greeting %s\", name)\n  s := \"Slacker\"\n  fmt.Printf(\"Greeting %s\", s)\n}\n```", "```go\n    func main() {\n      for i := 0; i <= 15; i++ {\n        num, result := checkNumbers(i)\n        fmt.Printf(\"Results:  %d %s\\n\", num, result)\n      }\n    }\n    ```", "```go\n    func checkNumbers(i int) (int, string) {\n      switch {\n    ```", "```go\n        case i%2 == 0:\n          return i, \"Even\"\n        default:\n          return i, \"Odd\"\n      }\n    }\n    ```", "```go\nHours worked on Monday:  8\nHours worked on Tuesday:  10\nHours worked this week:  18\n```", "```go\n_, err := file.Read(bytes)\n```", "```go\nfunc main() {\n  for i := 0; i <= 15; i++ {\n    _, result := checkNumbers(i)\n    fmt.Printf(\"Results: %s\\n\", result)\n  }\n}\n```", "```go\n    _, result := checkNumbers(i)\n```", "```go\nfunc greeting() (name string, age int) {\n  name = \"John\"\n  age = 21\n  return name, age\n}\n```", "```go\nfunc greeting() (name string, age int) {\n  name = \"John\"\n  age = 21\n  return\n}\n```", "```go\nfunc message() (message string, err error) {\n  message = \"hi\"\n  if message == \"hi\"{\n    err := fmt.Errorf(\"say bye\\n\")\n    return\n  }\n  return\n}\n```", "```go\n    package main\n    import (\n      \"fmt\"\n      \"strings\"\n    )\n    ```", "```go\n    func main() {\n      hdr := []string{\"empid\", \"employee\", \"address\", \"hours worked\", \"hourly rate\", \"manager\"}\n      result := csvHdrCol(hdr)\n      fmt.Println(\"Result: \")\n      fmt.Println(result)\n      fmt.Println()\n      hdr2 := []string{\"employee\", \"empid\", \"hours worked\", \"address\", \"manager\", \"hourly rate\"}\n      result2 := csvHdrCol(hdr2)\n      fmt.Println(\"Result2: \")\n      fmt.Println(result2)\n      fmt.Println()\n    }\n    func csvHdrCol(hdr []string) map[int]string {\n      csvIdxToCol := make(map[int]string)\n    ```", "```go\n    for i, v := range hdr {\n    ```", "```go\n    v = strings.TrimSpace(v)\n    ```", "```go\n    switch strings.ToLower(v) {\n        case \"employee\":\n          csvIdxToCol[i] = v\n        case \"hours worked\":\n          csvIdxToCol[i] = v\n        case \"hourly rate\":\n          csvIdxToCol[i] = v\n        }\n      }\n      return csvIdxToCol\n    }\n    ```", "```go\nResult1:\nMap[1:employee 3:hours worked 4: hourly rate]\nResult2:\nMap[0:employee 2:hours worked 5: hourly rate]\n```", "```go\nfunc f(parameterName …Type)\n```", "```go\nfunc main() {\n  nums(99, 100)\n  nums(200)\n  nums()\n}\nfunc nums(i ...int) {\n  fmt.Println(i)\n}\n```", "```go\npackage main\nimport \"fmt\"\nfunc main() {\n  nums(99, 100, \"James\")\n}\nfunc nums(i ...int, str person) {\n  fmt.Println(str)\n  fmt.Println(i)\n}\n```", "```go\npackage main\nimport \"fmt\"\nfunc main() {\n  nums(\"James\", 99, 100)\n}\nfunc nums(str string, i ...int) {\n  fmt.Println(str)\n  fmt.Println(i)\n}\n```", "```go\nJames\n[99 100]\n```", "```go\npackage main\nimport \"fmt\"\nfunc main() {\n  nums(99, 100)\n}\nfunc nums(i ...int) {\n  fmt.Println(i)\n  fmt.Printf(\"%T\\n\", i)\n  fmt.Printf(\"Len: %d\\n\", len(i))\n  fmt.Printf(\"Cap: %d\\n\", cap(i))\n}\n```", "```go\n[99 100]\n[] int\nLen: 2\nCap: 2\n```", "```go\npackage main\nimport \"fmt\"\nfunc main() {\n  i := []int{ 5, 10, 15}\n  nums(i)\n}\nfunc nums(i ...int) {\n  fmt.Println(i)\n}\n```", "```go\nfunc main() {\n  i := []int{ 5, 10, 15}\n  nums(i…)\n}\nfunc nums(i ...int) {\n  fmt.Println(i)\n}\n```", "```go\n    package main\n    import (\n      \"fmt\"\n    )\n    func main() {\n      i := []int{ 5, 10, 15}\n      fmt.Println(sum(5, 4))\n      fmt.Println(sum(i...))\n    }\n    ```", "```go\n    func sum(nums ...int) int {\n      total := 0\n      for _, num := range nums {\n        total += num\n      }\n      return total\n    }\n    ```", "```go\n9\n30\n```", "```go\n    func main() {\n      func() {\n        fmt.Println(\"Greeting\")\n      }()\n    }\n    ```", "```go\n    func main() {\n      message := \"Greeting\"\n      func(str string) {\n        fmt.Println(str)\n      }(message)\n    }\n    ```", "```go\nfunc main() {\n  f := func() {\n    fmt.Println(\"Executing an anonymous function using a variable\")\n  }\n  fmt.Println(\"Line after anonymous function declaration\")\n  f()\n}\n```", "```go\n    package main\n    import (\n      \"fmt\"\n    )\n    func main() {\n      j := 9\n      x := func(i int) int {\n        return i * i\n      }\n    ```", "```go\n      fmt.Printf(\"The square of %d is %d\\n\", j, x(j))\n    }\n    ```", "```go\nThe square of 9 is 81\n```", "```go\nfunc main() {\n  i := 0\n  incrementor := func() int {\n    i +=1\n    return i\n  }\n  fmt.Println(incrementor())\n  fmt.Println(incrementor())\n  i +=10\n  fmt.Println(incrementor())\n}\n```", "```go\nfunc main() {\n  increment := incrementor()\n  fmt.Println(increment())\n  fmt.Println(increment())\n}\nfunc incrementor() func() int {\n  i := 0\n  return func() int {\n    i += 1\n    return i\n  }\n}\n```", "```go\n1\n2\n```", "```go\n    func main() {import \"fmt\"\n      counter := 4\n    ```", "```go\n    x:= decrement(counter)\n      fmt.Println(x())\n      fmt.Println(x())\n      fmt.Println(x())\n      fmt.Println(x())\n    }\n    ```", "```go\n    func decrement(i int) func() int {\n    ```", "```go\n    return func() int {\n    ```", "```go\n        I–-\n        return i\n      }\n    }\n    ```", "```go\n3\n2\n1\n0\n```", "```go\ntype message func()\n```", "```go\ntype calc func(int, int) string\n```", "```go\npackage main\nimport (\n  \"fmt\"\n)\ntype calc func(int, int) string\nfunc main() {\n  calculator(add, 5, 6)\n}\nfunc add(i, j int) string {\n  result := i + j\n  return fmt.Sprintf(\"Added %d + %d = %d\", i, j, result)\n}\nfunc calculator(f calc, i, j int) {\n  fmt.Println(f(i, j))\n}\n```", "```go\ntype calc func(int, int) string\n```", "```go\nfunc add(i, j int) string {\n  result := i + j\n  return fmt.Sprintf(\"Added %d + %d = %d\", i, j, result)\n}\n```", "```go\nfunc calculator(f calc, i, j int) {\n  fmt.Println(f(i, j))\n}\n```", "```go\nfunc main() {\n  calculator(add, 5, 6)\n  calculator(subtract, 10, 5)\n}\nfunc calculator(f func(int, int) int, i, j int) {\n  fmt.Println(f(i, j))\n}\nfunc add(i, j int) int {\n  return i + j\n}\nfunc subtract(i, j int) int {\n  return i - j\n}\n```", "```go\n    func calculator(f func(int, int) int, i, j int) {\n      fmt.Println(f(i, j))\n    }\n    ```", "```go\n11\n5\n```", "```go\npackage main\nimport \"fmt\"\nfunc main() {\n  v:= square(9)\n  fmt.Println(v())\n  fmt.Printf(\"Type of v: %T\",v)\n}\nfunc square(x int) func() int {\n  f := func() int {\n    return x * x\n  }\n  return f\n}\n```", "```go\n81\nType of v: func() int\n```", "```go\n    func square(x int) func() int {\n      f := func() int {\n        return x * x\n      }\n      return f\n    }\n    ```", "```go\n    package main\n    import \"fmt\"\n    func main() {\n      devSalary := salary(50, 2080, developerSalary)\n      bossSalary := salary(150000, 25000, managerSalary)\n      fmt.Printf(\"Boss salary: %d\\n\", bossSalary)\n      fmt.Printf(\"Developer salary: %d\\n\", devSalary)\n    }\n    ```", "```go\n    func salary(x, y int, f func(int, int) int) int{\n    ```", "```go\n      pay := f(x, y)\n      return pay\n    }\n    ```", "```go\n    func managerSalary(baseSalary, bonus int) int {\n      return baseSalary + bonus\n    }\n    ```", "```go\n    func developerSalary(hourlyRate, hoursWorked int) int {\n      return hourlyRate * hoursWorked\n    }\n    ```", "```go\nBoss salary: 175000\nDeveloper salary: 104000\n```", "```go\npackage main\nimport \"fmt\"\nfunc main() {\n  defer done()\n  fmt.Println(\"Main: Start\")\n  fmt.Println(\"Main: End\")\n}\nfunc done() {\n  fmt.Println(\"Now I am done\")\n}\n```", "```go\nMain: Start\nMain: End\nNow I am done\n```", "```go\npackage main\nimport \"fmt\"\nfunc main() {\n  defer func() {\n    fmt.Println(\"Now I am done\")\n  }()\n  fmt.Println(\"Main: Start\")\n  fmt.Println(\"Main: End\")\n}\n```", "```go\npackage main\nimport \"fmt\"\nfunc main() {\n  defer func() {\n    fmt.Println(\"I was declared first.\")\n  }()\n  defer func() {\n    fmt.Println(\"I was declared second.\")\n  }()\n  defer func() {\n    fmt.Println(\"I was declared third.\")\n  }()\n  f1 := func() {\n    fmt.Println(\"Main: Start\")\n  }\n  f2 := func() {\n    fmt.Println(\"Main: End\")\n  }\n  f1()\n  f2()\n}\n```", "```go\nMain: Start\nMain: End\nI was declared third.\nI was declared second.\nI was declared first.\n```", "```go\nfunc main() {\n  age := 25\n  name := \"John\"\n  defer personAge(name, age)\n  age *= 2\n  fmt.Printf(\"Age double %d.\\n\", age)\n}\nfunc personAge(name string, i int) {\n    fmt.Printf(\"%s is %d.\\n\", name, i)\n}\n```", "```go\nAge double 50.\nJohn is 25.\n```", "```go\n    package main\n    import \"fmt\"\n    func main() {\n    calculateSalary()\n    playGame()\n        getWeather()\n    }\n    func calculateSalary() {\n        // do stuff\n    }\n    func playGame() {\n        // do stuff\n    }\n    func getWeather() {\n        // do stuff\n    }\n    ```"]