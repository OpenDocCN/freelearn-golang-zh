["```go\n$ cd projects\n$ mkdir webform\n$ go mod init github.com/examplecompany/webform\n```", "```go\nmodule github.com/PacktPublishing/Go-Recipes-for-Developers/chapter1/webform\ngo 1.21.0\n```", "```go\nwebform/\n  go.mod\n  cmd/\n    webform/\n      main.go\n  web/\n    static/\n  pkg/\n    ...\n  internal/\n    ...\n  build/\n    ci/\n    package/\n  configs/\n```", "```go\nwebform/\n  go.mod\n  go.sum\n  main.go\n  internal/\n    ...\n  pkg/\n    ...\n```", "```go\npackage main\nimport (\n    \"net/http\"\n)\nfunc main() {\n    server := http.Server{\n        Addr:    \":8181\",\n        Handler: http.FileServer(http.Dir(\"web/static\")),\n    }\n    server.ListenAndServe()\n}\n```", "```go\n$ go run ./cmd/webform\n```", "```go\n$ go build ./cmd/webform\n```", "```go\n$ go build -o wform ./cmd/webform\n```", "```go\npackage main\nimport (\n    \"net/http\"\n    \"database/sql\"\n    _ \"modernc.org/sqlite\"\n    \"github.com/PacktPublishing/Go-Recipes-for-Developers/src/chp1/\n    webform/pkg/commentdb\"\n)\nfunc main() {\n    db, err := sql.Open(\"sqlite\", \"webform.db\")\n    if err != nil {\n        panic(err)\n    }\n    commentdb.InitDB(db)\n    server := http.Server{\n        Addr:    \":8181\",\n        Handler: http.FileServer(http.Dir(\"web/static\")),\n    }\n    server.ListenAndServe()\n}\n```", "```go\npackage commentdb\nimport (\n    \"context\"\n    \"database/sql\"\n)\nconst createStmt=`create table if not exists comments (\nemail TEXT,\ncomment TEXT)`\nfunc InitDB(conn *sql.DB) {\n    _, err := conn.ExecContext(context.Background(), createStmt)\n    if err != nil {\n        panic(err)\n    }\n}\n```", "```go\n$ go build ./cmd/webform\n  cmd/webform/main.go:7:2: no required module provides package modernc.org/sqlite; to add it:\n      go get modernc.org/sqlite\n```", "```go\n$ go get\n```", "```go\n$ go mod tidy\n```", "```go\n    $ go get modernc.org/sqlite@v1.26.0\n    ```", "```go\n    $ go get gopkg.in/yaml.v3\n    ```", "```go\n    $ go get github.com/ory/dockertest/v3\n    ```", "```go\n    $ go get modernc.org/sqlite\n    ```", "```go\n    $ go get modernc.org/sqlite@devel\n    ```", "```go\n    $ go get modernc.org/sqlite@a8c3eea199bc8fdc39391d5d261eaa3577566050\n    ```", "```go\n$ go get modernc.org/sqlite@v1.26.0\n```", "```go\n$ go get modernc.org/sqlite@master\n```", "```go\n    go mod verify\n    ```", "```go\n    go clean -modcache\n    ```", "```go\npackage routes\nimport (\n    \"database/sql\"\n    \"github.com/gorilla/mux\"\n    \"net/http\"\n)\nfunc Build(router *mux.Router, conn *sql.DB) {\n    router.Path(\"/form\").\n        Methods(\"GET\").HandlerFunc(func(w http.ResponseWriter, r \n        *http.Request) {\n        http.ServeFile(w, r, \"web/static/form.html\")\n    })\n    router.Path(\"/form\").\n        Methods(\"POST\").HandlerFunc(func(w http.ResponseWriter, r \n        *http.Request) {\n        handlePost(conn, w, r)\n    })\n}\nfunc handlePost(conn *sql.DB, w http.ResponseWriter, r *http.Request) {\n    email := r.PostFormValue(\"email\")\n    comment := r.PostFormValue(\"comment\")\n    _, err := conn.ExecContext(r.Context(), \"insert into comments \n    (email,comment) values (?,?)\",\n    email, comment)\n    if err != nil {\n        http.Error(w, err.Error(), http.StatusInternalServerError)\n        return\n    }\n    http.Redirect(w, r, \"/form\", http.StatusFound)\n}\n```", "```go\npackage main\nimport (\n    \"database/sql\"\n    \"net/http\"\n    \"github.com/gorilla/mux\"\n    _ \"modernc.org/sqlite\"\n    \"github.com/PacktPublishing/Go-Recipes-for-Developers/src/chp1/\n    webform/internal/routes\"\n    \"github.com/PacktPublishing/Go-Recipes-for-Developers/src/chp1/\n    webform/pkg/commentdb\"\n)\nfunc main() {\n    db, err := sql.Open(\"sqlite\", \"webform.db\")\n    if err != nil {\n        panic(err)\n    }\n    commentdb.InitDB(db)\n    r := mux.NewRouter()\n    routes.Build(r, db)\n    server := http.Server{\n        Addr:    \":8181\",\n        Handler: r,\n    }\n    server.ListenAndServe()\n}\n```", "```go\n    $ ls\n      webform\n    $ git clone git@gitlab.com:cznic/sqlite.git\n    $ ls\n      sqlite\n      webform\n    ```", "```go\n    module github.com/PacktPublishing/Go-Recipes-for-Developers/chapter1/webform\n    go 1.22.1\n    replace modernc.org/sqlite => ../sqlite\n    require (\n        github.com/gorilla/mux v1.8.1\n        modernc.org/sqlite v1.27.0\n    )\n    ...\n    ```", "```go\n    $ cd ~/projects\n    $ mkdir ws\n    $ cd ws\n    ```", "```go\n    $ go work init\n    ```", "```go\n    $HOME/\n      projects/\n        ws/\n           go.work\n           webform\n           sqlite\n    ```", "```go\n    $ go work use ./webform\n    $ go work use ./sqlite\n    ```", "```go\n    $ git tag v1.0.0\n    $ git push origin v1.0.0\n    ```", "```go\n    $ git checkout -b v2\n    ```", "```go\n$ git checkout -b v2\n```", "```go\nmodule github.com/PacktPublishing/Go-Recipes-for-Developers/chapter1/webform/v2\ngo 1.22.1\nrequire (\n  ...\n)\n```", "```go\n$ git add go.mod\n$ git commit -m \"New version\"\n$ git push origin v2\n```", "```go\nimport \"github.com/PacktPublishing/Go-Recipes-for-Developers/chapter1/webform/v2/pkg/commentdb\"\n```"]