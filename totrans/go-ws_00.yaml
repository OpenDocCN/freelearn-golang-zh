- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: About
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于
- en: This section briefly introduces the coverage of this book, the technical skills
    you'll need to get started, and the software requirements required to complete
    all of the included activities and exercises.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本节简要介绍了本书的覆盖范围，你需要掌握的技术技能以开始学习，以及完成所有包含的活动和练习所需的软件要求。
- en: About the Book
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于本书
- en: You already know you want to learn Go, and the smart way to learn anything is
    to learn by doing. *The Go Workshop* focuses on building up your practical skills
    so that you can develop high-performing concurrent applications, or even create
    Go scripts to automate repetitive daily tasks. You'll learn from real examples
    that lead to real results.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经知道你想要学习 Go，而学习任何东西的最佳方式是通过实践学习。《Go 工作坊》专注于提升你的实践技能，以便你可以开发高性能的并发应用程序，甚至创建
    Go 脚本来自动化重复的日常任务。你将从真实案例学习，这些案例可以带来真实的结果。
- en: Throughout *The Go Workshop*, you'll take an engaging step-by-step approach
    to understand Go. You won't have to sit through any unnecessary theory. If you're
    short on time, you can jump into a single exercise each day, or you can spend
    an entire weekend learning how to test and secure your Go applications. It's your
    choice. Learning on your terms, you'll build up and reinforce key skills in a
    way that feels rewarding.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在《Go 工作坊》中，你将采取引人入胜的逐步方法来理解 Go。你不必忍受任何不必要的理论。如果你时间紧迫，你可以每天跳入一个单独的练习，或者你可以花一个周末的时间学习如何测试和确保你的
    Go 应用程序。由你选择。按照你的方式学习，你将以一种感觉有成就感的方式建立和加强关键技能。
- en: Every physical print copy of *The Go Workshop* unlocks access to the interactive
    edition. With videos detailing all exercises and activities, you'll always have
    a guided solution. You can also benchmark yourself against assessments, track
    your progress, and receive content updates. You'll even earn secure credentials
    that you can share and verify online upon completion. It's a premium learning
    experience that's included with your printed copy. To redeem it, follow the instructions
    located at the start of your Go book.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 每一本《Go 工作坊》的实体印刷版都能解锁访问互动版。通过详细说明所有练习和活动，你将始终有一个指导性的解决方案。你也可以通过评估来衡量自己，跟踪你的进度，并接收内容更新。你甚至可以在完成时获得可以在线共享和验证的安全凭证。这是一项包含在印刷版中的高级学习体验。要兑换它，请遵循你
    Go 书籍开头的说明。
- en: Fast-paced and direct, *The Go Workshop* is the ideal companion for Go beginners.
    You'll build and iterate on your code like a software developer, learning along
    the way. This process means that you'll find that your new skills stick, embedded
    as best practice. A solid foundation for the years ahead.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 快速直接，《Go 工作坊》是 Go 初学者的理想伴侣。你将像软件开发者一样构建和迭代你的代码，在学习过程中不断进步。这个过程意味着你会发现你的新技能会持续，并作为最佳实践嵌入其中。为未来的几年打下坚实的基础。
- en: About the Chapters
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于各章节
- en: '*Chapter 1*, *Variables and Operators,* explains how variables hold data for
    you temporarily. It also shows how you can use operators to make changes or make
    comparisons to that data.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '*第一章*，*变量和运算符*，解释了变量如何暂时保存数据。它还展示了你可以如何使用运算符来更改数据或对数据进行比较。'
- en: '*Chapter 2*, *Logic and Loops,* teaches you how to make your code dynamic and
    responsive by creating rules that must be followed based on data in variables.
    Loops let you repeat logic over and over again.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '*第二章*，*逻辑与循环*，教你如何通过创建基于变量中数据的规则来使你的代码动态和响应。循环让你可以反复执行逻辑。'
- en: '*Chapter 3*, *Core Types*, introduces you to the building blocks of data. You''ll
    learn what a type is and how the core types are defined.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '*第三章*，*核心类型*，向你介绍了数据的基本构建块。你将了解类型是什么以及核心类型是如何定义的。'
- en: '*Chapter 4*, *Complex Types*, explains that complex types build on core types
    to allow you to model real-world data using data grouping and by composing new
    types from the core types. You''ll also look at overcoming Go''s type system when
    needed.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '*第四章*，*复杂数据类型*，解释了复杂数据类型是如何建立在核心类型之上，允许你通过数据分组和从核心类型中组合新类型来模拟现实世界的数据。你还将了解在需要时如何克服
    Go 的类型系统。'
- en: '*Chapter 5*, *Functions*, teaches you the basics of constructing a function.
    Then, we will dive into more advanced features of using functions, such as passing
    a function as an argument, returning a function, assigning a function to a variable,
    and many more interesting things you can do with functions.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '*第五章*，*函数*，教你构建函数的基础知识。然后，我们将深入探讨使用函数的更高级功能，例如将函数作为参数传递、返回函数、将函数赋值给变量，以及许多你可以用函数做的有趣事情。'
- en: '*Chapter 6*, *Errors*, teaches you how to work with errors, covering topics
    such as declaring your own error and handling errors the Go way. You will learn
    what a panic is and how to recover from one.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '*第6章*，*错误处理*，教您如何处理错误，包括如何声明自己的错误以及以Go语言的方式处理错误。您将了解什么是panic以及如何从中恢复。'
- en: '*Chapter 7*, *Interfaces*, starts by teaching the mechanics of interfaces and
    then demonstrates that interfaces in Go offer polymorphism, duck typing, the ability
    to have empty interfaces, and the implicit implementation of an interface.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '*第7章*，*接口*，首先讲解接口的机制，然后演示Go语言中的接口提供了多态性、鸭子类型、能够有空的接口以及接口的隐式实现。'
- en: '*Chapter 8*, *Packages*, demonstrates how the Go standard library organizes
    its code and how you can do the same for your code.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '*第8章*，*包*，展示了Go标准库如何组织其代码，以及您如何为自己的代码做同样的事情。'
- en: '*Chapter 9*, *Basic Debugging*, teaches the fundamentals of finding bugs in
    our application. You will use various techniques of printing out markers in code,
    using values and types, and performing logging.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '*第9章*，*基本调试*，教您如何找到应用程序中的错误。您将使用在代码中打印标记、使用值和类型以及执行日志记录的各种技术。'
- en: '*Chapter 10*, *About Time*, gets you a head start in the concept of how Go
    manages time variables, and what features are provided for you to improve your
    applications, such as measuring execution time and navigating between time zones.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '*第10章*，*关于时间*，让您提前了解Go语言如何管理时间变量，以及提供了哪些功能来提升您的应用程序，例如测量执行时间和在不同时区之间导航。'
- en: '*Chapter 11*, *Encoding and Decoding (JSON)*, teaches you the fundamentals
    of a JSON document, which is heavily used throughout various parts of software
    today, along with the great support that Go has for reading and creating JSON
    documents.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '*第11章*，*编码和解码（JSON）*，为您讲解JSON文档的基础知识，这种文档在当今软件的各个部分被广泛使用，同时Go语言对读取和创建JSON文档提供了强大的支持。'
- en: '*Chapter 12*, *Files and Systems*, shows how Go has great support for working
    with files and the underlying OS. You will be working with the filesystem, learning
    how to create, read, and modify files on the OS. You will also see how Go can
    read a CSV file, a common file format used by administrators.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '*第12章*，*文件和系统*，展示了Go语言在处理文件和底层操作系统方面具有强大的支持。您将学习如何与文件系统交互，学习如何在操作系统上创建、读取和修改文件。您还将了解Go语言如何读取CSV文件，这是管理员常用的文件格式。'
- en: '*Chapter 13*, *SQL and Databases*, covers the most important aspects of connecting
    to databases and manipulating tables, which are very common tasks nowadays, and
    you''ll learn how to work efficiently with databases.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '*第13章*，*SQL和数据库*，涵盖了连接数据库和操作表的最重要方面，这些是当今非常常见的任务，您将学习如何高效地与数据库工作。'
- en: '*Chapter 14*, *Using the Go HTTP Client*, instructs you how to use the Go standard
    packages to create an HTTP client and interact with REST APIs. You''ll learn how
    to send GET requests to a server and process the response, as well as how to POST
    form data to a server and how to upload a file to a server.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '*第14章*，*使用Go HTTP客户端*，指导您如何使用Go标准包创建HTTP客户端并与REST API交互。您将学习如何向服务器发送GET请求并处理响应，以及如何向服务器发送表单数据以及如何上传文件到服务器。'
- en: '*Chapter 15*, *HTTP Servers*, teaches you how to use the Go standard packages
    to create an HTTP server and build websites and REST APIs on top of it. You''ll
    learn how to accept requests from a web form or from another program and respond
    in a human- or machine-readable format.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '*第15章*，*HTTP服务器*，教您如何使用Go标准包创建HTTP服务器并在其上构建网站和REST API。您将学习如何接受来自网页表单或来自另一个程序的请求并以人类或机器可读的格式进行响应。'
- en: '*Chapter 16*, *Concurrent Work*, demonstrates how to make use of Go''s concurrency
    features to enable your software to perform several tasks at the same time, splitting
    the work across independent routines and reducing the processing time.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '*第16章*，*并发工作*，展示了如何利用Go的并发特性使您的软件能够同时执行多个任务，将工作分配给独立的协程，从而减少处理时间。'
- en: '*Chapter 17*, *Using Go Tools*, familiarizes you with the tools that come with
    Go and explains how you can use them to improve your code. You''ll learn how to
    automatically format your code with gofmt and goimports. You''ll also learn how
    to do static analysis with go vet and how to detect race conditions using the
    Go race detector.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '*第17章*，*使用Go工具*，使您熟悉随Go语言一起提供的工具，并解释了如何使用它们来改进您的代码。您将学习如何使用gofmt和goimports自动格式化代码。您还将学习如何使用go
    vet进行静态分析，以及如何使用Go的竞态条件检测器检测竞态条件。'
- en: '*Chapter 18*, *Security*, builds your understanding of how to identify and
    fix security attacks such as SQL injection and cross-site scripting. You''ll learn
    how to use the Go standard package to implement symmetric and asymmetric encryption,
    and how to secure data at rest and data in transit using hashing libraries and
    the TLS package in Go.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '*第18章*，*安全*，帮助您了解如何识别和修复如SQL注入和跨站脚本等安全攻击。您将学习如何使用Go标准包实现对称和非对称加密，以及如何使用哈希库和Go中的TLS包来保护静态数据和传输中的数据。'
- en: '*Chapter 19*, *Special Features*, lets you explore some hidden gems in Go that
    will make development easier. You will learn how to use build constraints to control
    application build behavior. You will also learn how to use the wildcard pattern
    with Go and how to use reflection in Go using the reflect package. This chapter
    will also build your understanding of how to access the runtime memory of your
    application using the unsafe package.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '*第19章*，*特殊功能*，让您探索Go语言中的一些隐藏宝藏，这将使开发更加容易。您将学习如何使用构建约束来控制应用程序的构建行为。您还将学习如何使用Go语言的通配符模式，以及如何使用reflect包在Go中使用反射。本章还将帮助您理解如何使用unsafe包访问应用程序的运行时内存。'
- en: Conventions
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 习惯用法
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    path names, dummy URLs, user input, and Twitter handles are shown as follows:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 文本中的代码单词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter昵称如下所示：
- en: '"A `panic()` function accepts an empty interface."'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '"一个`panic()`函数接受一个空接口。"'
- en: Words that you see on the screen, for example, in menus or dialog boxes, also
    appear in the same format.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 您在屏幕上看到的单词，例如在菜单或对话框中，也以相同的格式出现。
- en: 'A block of code is set as follows:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'New terms and important words are shown like this: "These behaviors are collectively
    called method sets."'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 新术语和重要单词如下所示："这些行为统称为方法集。"
- en: 'Long code snippets are truncated and the corresponding names of the code files
    on GitHub are placed at the top of the truncated code. The permalinks to the entire
    code are placed below the code snippet. It should look as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 长代码片段将被截断，并在截断代码的顶部放置GitHub上相应代码文件的名称。整个代码的永久链接放置在代码片段下方。它应该看起来如下所示：
- en: '[PRE1]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Before You Begin
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在开始之前
- en: Each great journey begins with a humble step. Our upcoming adventure with Go
    programming is no exception. Before we can do awesome things using Go, we need
    to be prepared with a productive environment. In this small note, we shall see
    how to do that.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 每一段伟大的旅程都始于一个谦卑的步伐。我们即将开始的Go编程冒险也不例外。在我们能够使用Go做一些酷的事情之前，我们需要准备一个高效的环境。在这篇简短的笔记中，我们将看到如何做到这一点。
- en: Hardware and Software Recommendations for Windows with Docker
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Windows with Docker的硬件和软件推荐
- en: 'To be able to run all the recommended tools used in the course, it''s recommended
    that you have:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 要能够运行课程中使用的所有推荐工具，建议您拥有：
- en: 1.6 GHz or faster desktop (amd64, 386) processor.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1.6 GHz或更快的桌面（amd64, 386）处理器。
- en: 4 GB of RAM.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 4 GB的RAM。
- en: 'Windows 10 64-bit: Pro, Enterprise, or Education (1607 Anniversary Update,
    Build 14393 or later).'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows 10 64位：专业版、企业版或教育版（1607周年更新，构建14393或更高版本）。
- en: You must have virtualization enabled in BIOS, which is usually enabled by default.
    Virtualization is different from having Hyper-V enabled.
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您必须在BIOS中启用虚拟化，这通常默认启用。虚拟化与启用Hyper-V不同。
- en: CPU SLAT-capable feature.
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CPU SLAT功能。
- en: Hardware and Software Recommendations for Windows without Docker
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Windows without Docker的硬件和软件推荐
- en: If the system you are using is below the recommended requirements to use with
    Docker, you can still do the course. You have to complete an extra step to do
    so.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用的系统低于使用Docker的推荐要求，您仍然可以完成课程。为此，您必须完成一个额外的步骤。
- en: 'To be able to run all the tools (excluding Docker), you''ll need:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 要能够运行所有工具（不包括Docker），您需要：
- en: 1.6 GHz or faster desktop (amd64, 386) processor
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1.6 GHz或更快的桌面（amd64, 386）处理器
- en: 1 GB of RAM
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1 GB的RAM
- en: Windows 7 (with .NET Framework 4.5.2), 8.0, 8.1, or 10 (32-bit and 64-bit)
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows 7（带.NET Framework 4.5.2）、8.0、8.1或10（32位和64位）
- en: Skip the steps, which explain how to install Docker. You'll need to install
    the MySQL server instead. You can download an installer from [https://packt.live/2EQkiHe](https://packt.live/2EQkiHe).
    The default options are safe to use if you are not sure which to pick. MySQL is
    free to install and use.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 跳过解释如何安装Docker的步骤。您需要安装MySQL服务器。您可以从[https://packt.live/2EQkiHe](https://packt.live/2EQkiHe)下载安装程序。如果您不确定选择哪个选项，默认选项是安全的。MySQL免费安装和使用。
- en: Once the course is complete, you can safely uninstall MySQL.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦课程完成，你可以安全地卸载MySQL。
- en: Hardware and Software Recommendations for macOS with Docker
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: macOS与Docker的硬件和软件推荐
- en: 'To be able to run all the recommended tools used in the course, it''s recommended
    that you have:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行课程中使用的所有推荐工具，建议你拥有：
- en: 1.6 GHz or faster desktop (amd64, 386) processor
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1.6 GHz或更快的桌面（amd64, 386）处理器
- en: 4 GB of RAM
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 4 GB的RAM
- en: macOS X or newer, with Intel's hardware **Memory Management Unit** (**MMU**)
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: macOS X或更新的版本，配备英特尔硬件**内存管理单元**（**MMU**）
- en: macOS Sierra 10.12 or newer
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: macOS Sierra 10.12或更新的版本
- en: Hardware and Software Recommendations for macOS without Docker
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: macOS无Docker的硬件和软件推荐
- en: If the system you are using is below the recommended requirements to use with
    Docker, you can still do the course. You need to complete an extra step to do
    so.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你使用的系统低于使用Docker推荐的系统要求，你仍然可以完成这门课程。你需要完成一个额外的步骤才能做到这一点。
- en: 'To be able to run all the tools (excluding Docker), you''ll need:'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要运行所有工具（不包括Docker），你需要：
- en: 1.6 GHz or faster desktop (amd64, 386) processor
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1.6 GHz或更快的桌面（amd64, 386）处理器
- en: 1 GB of RAM
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1 GB的RAM
- en: macOS Yosemite 10.10 or newer
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: macOS Yosemite 10.10或更新的版本
- en: Skip the steps, which explain how to install Docker. You'll need to install
    the MySQL server instead. You can download an installer from [https://packt.live/2EQkiHe](https://packt.live/2EQkiHe).
    The default options are safe to use if you are not sure which to pick. MySQL is
    free to install and use.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 跳过解释如何安装Docker的步骤。你需要安装MySQL服务器。你可以从[https://packt.live/2EQkiHe](https://packt.live/2EQkiHe)下载安装程序。如果你不确定选择哪个选项，默认选项是安全的。MySQL安装和使用都是免费的。
- en: Once the course is complete, you can safely uninstall MySQL.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦课程完成，你可以安全地卸载MySQL。
- en: Hardware and Software Recommendations for Linux
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Linux硬件和软件推荐
- en: 'To be able to run all the recommended tools used in the course, it''s recommended
    that you have:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行课程中使用的所有推荐工具，建议你拥有：
- en: 1.6 GHz or faster desktop (amd64, 386) processor
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1.6 GHz或更快的桌面（amd64, 386）处理器
- en: 1 GB of RAM
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1 GB的RAM
- en: 'Linux (Debian): Ubuntu Desktop 14.04, Debian 7'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux（Debian）：Ubuntu桌面14.04，Debian 7
- en: 'Linux (Red Hat): Red Hat Enterprise Linux 7, CentOS 7, Fedora 23'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux（Red Hat）：Red Hat Enterprise Linux 7，CentOS 7，Fedora 23
- en: Install the Go Compiler
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装Go编译器
- en: To turn your Go source code into something you can run, you'll need the Go compiler.
    For Windows and macOS, we recommend using the installer. Alternatively, to get
    more control you can download precompiled binaries. You can find both at [https://packt.live/2PRUGjp](https://packt.live/2PRUGjp).
    The install instructions for both methods on Windows, macOS, and Linux are at
    [https://packt.live/375DQDA](https://packt.live/375DQDA). The Go compiler is free
    to download and use.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 要将你的Go源代码转换成可运行的程序，你需要Go编译器。对于Windows和macOS，我们推荐使用安装程序。或者，为了获得更多控制，你可以下载预编译的二进制文件。你可以在[https://packt.live/2PRUGjp](https://packt.live/2PRUGjp)找到它们。Windows、macOS和Linux上两种方法的安装说明可以在[https://packt.live/375DQDA](https://packt.live/375DQDA)找到。Go编译器免费下载和使用。
- en: Install Git
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装Git
- en: Go uses the version control tool Git to install extra tools and code. You can
    find the instructions for Windows, macOS, and Linux at [https://packt.live/35ByRug](https://packt.live/35ByRug).
    Git is free to install and use.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: Go使用版本控制工具Git来安装额外的工具和代码。你可以在[https://packt.live/35ByRug](https://packt.live/35ByRug)找到Windows、macOS和Linux的说明。Git免费安装和使用。
- en: Install Visual Studio Code (Editor/IDE)
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装Visual Studio Code（编辑器/集成开发环境）
- en: You need something to write your Go source code. This tool is called an editor
    or an **Integrated Development Environment** (**IDE**). If you already have an
    editor you like, you can use it with this course if you'd like to.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要某种东西来编写你的Go源代码。这个工具被称为编辑器或**集成开发环境**（**IDE**）。如果你已经有了喜欢的编辑器，你可以使用它来学习这门课程。
- en: 'If you don''t already have an editor, we recommend you use the free editor
    Visual Studio Code. You can download the installer from [https://packt.live/35KD2Ek](https://packt.live/35KD2Ek):'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还没有编辑器，我们推荐你使用免费的编辑器Visual Studio Code。你可以从[https://packt.live/35KD2Ek](https://packt.live/35KD2Ek)下载安装程序：
- en: Once it's installed, open Visual Studio Code.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完成后，打开Visual Studio Code。
- en: From the top menu bar, select `View`.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从顶部菜单栏选择`查看`。
- en: From the list of options, select `Extensions`.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从选项列表中选择`扩展`。
- en: A panel should appear on the left side. At the top is a search input box.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应该在左侧出现一个面板。顶部是一个搜索输入框。
- en: Type `Go`.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入`Go`。
- en: The first option should be an extension called *Go* by *Microsoft*.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一个选项应该是一个名为*Go*的由*Microsoft*提供的扩展。
- en: Click the *Install* button on that option.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击该选项上的`安装`按钮。
- en: Wait for a message that says it's successfully installed.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 等待显示成功安装的消息。
- en: 'If you have Git installed, follow these steps:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经安装了Git，请按照以下步骤操作：
- en: Press *Ctrl/Cmd + Shift + P* all at the same time.A text input should appear
    at the top of the window.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同时按下*Ctrl/Cmd + Shift + P*。窗口顶部应该会出现一个文本输入框。
- en: Type `go tools`.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入`go tools`。
- en: 'Select the option labeled something like `Go: Install/Update Tools`.'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '选择标有类似`Go: Install/Update Tools`的选项。'
- en: You'll see a list of options and checkboxes.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你会看到一个选项和复选框列表。
- en: The very first checkbox next to the search input checks all the checkboxes.
    Select this checkbox, then select the `Go` button to the right of it.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 搜索输入框旁边的第一个复选框会检查所有的复选框。选择这个复选框，然后选择它右侧的`Go`按钮。
- en: A panel from the bottom should appear with some activity in it. Once this stops
    (and it may take a few minutes), you're all done.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 底部应该会出现一个面板，其中有一些活动。一旦这些活动停止（可能需要几分钟），你就完成了。
- en: Once done, select `View` from the top menu bar, then select `Explorer`.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，从顶部菜单栏选择`视图`，然后选择`资源管理器`。
- en: You'll now need somewhere to put your Go projects. I recommend somewhere in
    your home directory. Avoid putting it in the Go path, which is the folder the
    Go compiler is installed in. If you are having problems with the `modules` later
    in the class, it may be due to this. Once you know where you want to store the
    projects, create a folder for them. It's essential that you can find your way
    back to this folder.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在需要一个地方来存放你的Go项目。我建议在你的主目录中某个位置。避免将其放在Go路径中，即Go编译器安装的文件夹。如果你在课程后面的`modules`部分遇到问题，这可能是原因之一。一旦你知道你想在哪里存储项目，就为它们创建一个文件夹。确保你能找到回到这个文件夹的路。
- en: In Visual Studio Code, select the *Open Folder* button. From the dialog that
    opens, select the folder you just created.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在Visual Studio Code中，选择*打开文件夹*按钮。从打开的对话框中，选择你刚刚创建的文件夹。
- en: Create a Test Application
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建一个测试应用程序
- en: In your editor, create a new folder called `test`.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的编辑器中，创建一个名为`test`的新文件夹。
- en: In the folder, create a file called `main.go`.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文件夹中创建一个名为`main.go`的文件。
- en: 'Copy and paste the following code into the file you just created:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码复制并粘贴到您刚刚创建的文件中：
- en: '[PRE2]'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Save the file.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件。
- en: Open a terminal and go into the `test` folder.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个终端并进入`test`文件夹。
- en: 'If you are using Visual Studio Code:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你正在使用Visual Studio Code：
- en: Select `Terminal` from the top menu bar.
  id: totrans-107
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从顶部菜单栏选择`终端`。
- en: From the options, select `New Terminal`.
  id: totrans-108
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从选项中选择`New Terminal`。
- en: Type `cd test`.
  id: totrans-109
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输入`cd test`。
- en: In the terminal, type `go build`.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在终端中输入`go build`。
- en: This should run quickly and finish without displaying any messages.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这应该会快速运行并完成，而不显示任何消息。
- en: You should now see a new file in that same folder. On Linux and macOS, you'll
    have a file named `test`. On Windows, you'll have one called `test.exe`. This
    file is your binary.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你现在应该会在同一个文件夹中看到一个新文件。在Linux和macOS上，你会有一个名为`test`的文件。在Windows上，你会有一个名为`test.exe`的文件。这个文件是你的二进制文件。
- en: Now let's run our application by executing our binary. Type `./test`.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们通过执行我们的二进制文件来运行我们的应用程序。输入`./test`。
- en: You should see the message `This is a test`. If you see the message, you have
    successfully set up your Go development environment.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你应该会看到消息`This is a test`。如果你看到这个消息，你就已经成功设置了你的Go开发环境。
- en: Install Docker
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装Docker
- en: If your computer can run it (see the *Hardware and Software Requirements* section),
    you should install Docker. Docker allows us to run things such as database servers
    without having to install them. Docker is free to install and use.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的电脑可以运行它（参见*硬件和软件要求*部分），你应该安装Docker。Docker允许我们运行诸如数据库服务器之类的程序，而无需安装它们。Docker的安装和使用是免费的。
- en: We only use Docker to run MySQL for the database part of the course. If you
    already have MySQL installed, then you can skip this part.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只使用Docker来运行课程数据库部分的MySQL。如果你已经安装了MySQL，那么你可以跳过这部分。
- en: For macOS users, follow the instructions at [https://packt.live/34VJLJD](https://packt.live/34VJLJD).
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 对于macOS用户，请按照[https://packt.live/34VJLJD](https://packt.live/34VJLJD)中的说明操作。
- en: For Windows users, follow the instructions at [https://packt.live/2EKGDG6](https://packt.live/2EKGDG6).
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Windows用户，请按照[https://packt.live/2EKGDG6](https://packt.live/2EKGDG6)中的说明操作。
- en: Linux users, you should be able to use your built-in package manager to install
    Docker. Instructions for common distributions are at [https://packt.live/2Mn8Cjc](https://packt.live/2Mn8Cjc).
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: Linux用户，你应该能够使用内置的包管理器来安装Docker。常见发行版的说明在[https://packt.live/2Mn8Cjc](https://packt.live/2Mn8Cjc)。
- en: You are safe to uninstall Docker, if you wish, once the course is complete.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 课程完成后，如果你想，可以安全地卸载Docker。
- en: Installing the Code Bundle
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装代码包
- en: Download the code files from GitHub at and place them in a new folder called
    `C:\Code`. Refer to these code files for the complete code bundle.[https://packt.live/2ZmmZJL](https://packt.live/2ZmmZJL).
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 从GitHub下载代码文件至[https://packt.live/2ZmmZJL](https://packt.live/2ZmmZJL)，并将它们放置在一个名为`C:\Code`的新文件夹中。请参考这些代码文件以获取完整的代码包。
