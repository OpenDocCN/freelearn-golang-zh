["```go\npackage main\nimport \"fmt\"\nfunc main() {\n  fmt.Println(10 > 5)\n  fmt.Println(10 == 5)\n}\n```", "```go\ntrue\nfalse\n```", "```go\n    package main\n    ```", "```go\n    import (\n      \"fmt\"\n      \"unicode\"\n    )\n    ```", "```go\n    func passwordChecker(pw string) bool {\n    ```", "```go\n      pwR := []rune(pw)\n    ```", "```go\n      if len(pwR) < 8 {\n        return false\n      }\n    ```", "```go\n      hasUpper := false\n      hasLower := false\n      hasNumber := false\n      hasSymbol := false\n    ```", "```go\n      for _, v := range pwR {\n    ```", "```go\n      if unicode.IsUpper(v) {\n    ```", "```go\n        hasUpper = true\n      }\n    ```", "```go\n      if unicode.IsLower(v) {\n        hasLower = true\n      }\n    ```", "```go\n      if unicode.IsNumber(v) {\n        hasNumber = true\n      }\n    ```", "```go\n      if unicode.IsPunct(v) || unicode.IsSymbol(v)  {\n        hasSymbol = true\n      }\n      }\n    ```", "```go\n      return hasUpper && hasLower && hasNumber && hasSymbol\n    ```", "```go\n    }\n    ```", "```go\n    func main() {\n    ```", "```go\n      if passwordChecker(\"\") {\n      fmt.Println(\"password good\")\n      } else {\n      fmt.Println(\"password bad\")\n      }\n    ```", "```go\n      if passwordChecker(\"This!I5A\") {\n      fmt.Println(\"password good\")\n      } else {\n      fmt.Println(\"password bad\")\n      }\n    ```", "```go\n    }\n    ```", "```go\n    go run main.go\n    ```", "```go\npassword bad\npassword good\n```", "```go\npackage main\nimport (\n  \"fmt\"\n  \"runtime\"\n)\nfunc main() {\n  var list []int\n  //var list []int8\n  for i := 0; i < 10000000; i++ {\n    list = append(list, 100)\n  }\n  var m runtime.MemStats\n  runtime.ReadMemStats(&m)\n  fmt.Printf(\"TotalAlloc (Heap) = %v MiB\\n\", m.TotalAlloc/1024/1024)\n}\n```", "```go\nTotalAlloc (Heap) = 403 MiB \n```", "```go\nTotalAlloc (Heap) = 54 MiB \n```", "```go\n    package main\n    ```", "```go\n    import \"fmt\"\n    ```", "```go\n    func main() {\n    ```", "```go\n      var a int = 100\n    ```", "```go\n      var b float32 = 100\n    ```", "```go\n      var c float64 = 100\n    ```", "```go\n      fmt.Println(a / 3)\n      fmt.Println(b / 3)\n      fmt.Println(c / 3)\n    }\n    ```", "```go\n    go run main.go\n    ```", "```go\n    33\n    33.333332\n    33.333333333333336\n    ```", "```go\npackage main\nimport \"fmt\"\nfunc main() {\n  var a int = 100\n  var b float32 = 100\n  var c float64 = 100\n  fmt.Println((a / 3) * 3)\n  fmt.Println((b / 3) * 3)\n  fmt.Println((c / 3) * 3)\n}\n```", "```go\n99\n100\n100\n```", "```go\npackage main\nimport \"fmt\"\nfunc main() {\n  var a int8 = 128\n  fmt.Println(a)\n}\n```", "```go\n    package main\n    ```", "```go\n    import \"fmt\"\n    ```", "```go\n    func main() {\n    ```", "```go\n      var a int8 = 125\n    ```", "```go\n      var b uint8 = 253\n    ```", "```go\n      for i := 0; i < 5; i++ {\n    ```", "```go\n        a++\n        b++\n    ```", "```go\n        fmt.Println(i, \")\", \"int8\", a, \"uint8\", b)\n    ```", "```go\n      }\n    ```", "```go\n    }\n    ```", "```go\n    go run main.go\n    ```", "```go\n    package main\n    ```", "```go\n    import (\n      \"fmt\"\n      \"math\"\n      \"math/big\"\n    )\n    ```", "```go\n    func main() { \n    ```", "```go\n      intA := math.MaxInt64\n    ```", "```go\n      intA = intA + 1\n    ```", "```go\n      bigA := big.NewInt(math.MaxInt64)\n    ```", "```go\n      bigA.Add(bigA, big.NewInt(1))\n    ```", "```go\n      fmt.Println(\"MaxInt64: \", math.MaxInt64)\n      fmt.Println(\"Int   :\", intA)\n      fmt.Println(\"Big Int : \", bigA.String())\n    ```", "```go\n    }\n    ```", "```go\n    go run main.go\n    ```", "```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n  comment1 := `This is the BEST\nthing ever!`\n  comment2 := `This is the BEST\\nthing ever!`\n  comment3 := \"This is the BEST\\nthing ever!\"\n\n  fmt.Print(comment1, \"\\n\\n\")\n  fmt.Print(comment2, \"\\n\\n\")\n  fmt.Print(comment3, \"\\n\")\n}\n```", "```go\npackage main\nimport \"fmt\"\nfunc main() {\n  comment1 := `In \"Windows\" the user directory is \"C:\\Users\\\"`\n  comment2 := \"In \\\"Windows\\\" the user directory is \\\"C:\\\\Users\\\\\\\"\"\n  fmt.Println(comment1)\n  fmt.Println(comment2)\n}\n```", "```go\n    package main\n    import \"fmt\"\n    func main() {\n    ```", "```go\n      username := \"Sir_King_Über\"\n    ```", "```go\n      for i := 0; i < len(username); i++ {\n        fmt.Print(username[i], \" \")\n      }\n    ```", "```go\n    }\n    ```", "```go\npackage main\nimport \"fmt\"\nfunc main() {\n  username := \"Sir_King_Über\"\n  for i := 0; i < len(username); i++ {\n    fmt.Print(string(username[i]), \" \")\n  }\n}\n```", "```go\npackage main\nimport \"fmt\"\nfunc main() {\n  username := \"Sir_King_Über\"\n  runes := []rune(username)\n  for i := 0; i < len(runes); i++ {\n    fmt.Print(string(runes[i]), \" \")\n  }\n}\n```", "```go\n    package main\n    ```", "```go\n    import \"fmt\"\n    ```", "```go\n    func main() {\n    ```", "```go\n      logLevel := \"デバッグ\"\n    ```", "```go\n      for index, runeVal := range logLevel {\n    ```", "```go\n        fmt.Println(index, string(runeVal))\n    ```", "```go\n      }\n    ```", "```go\n    }\n    ```", "```go\n    go run main.go\n    ```", "```go\npackage main\nimport \"fmt\"\nfunc main() {\n  username := \"Sir_King_Über\"\n  // Length of a string\n  fmt.Println(\"Bytes:\", len(username))\n  fmt.Println(\"Runes:\", len([]rune(username)))\n  // Limit to 10 characters\n  fmt.Println(string(username[:10]))\n  fmt.Println(string([]rune(username)[:10]))\n}\n```", "```go\npackage main\nimport \"fmt\"\nfunc main() {\n  var message *string\n  if message == nil {\n    fmt.Println(\"error, unexpected nil value\")\n    return\n  }\n  fmt.Println(&message)\n}\n```", "```go\nerror, unexpected nil value\n```", "```go\nSales Tax Total:  0.1329\n```", "```go\n    Applicant X\n    -----------\n    Credit Score    : X\n    Income          : X\n    Loan Amount     : X\n    Loan Term       : X\n    Monthly Payment : X\n    Rate            : X\n    Total Cost      : X\n    Approved        : X\n    ```"]