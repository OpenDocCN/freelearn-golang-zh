["```go\npackage <packageName>\n```", "```go\nmain.go\n// https://golang.org/src/strings/builder.go\n1  package strings\n2  import (\n3    \"unicode/utf8\"\n4    \"unsafe\"\n5  )\n6  type Builder struct {\n7    addr *Builder // of receiver, to detect copies by value\n8    buf  []byte\n9  }\n10 // https://golang.org/src/strings/compare.go\n11 package strings\n12 func Compare(a, b string) int {\n13   if a == b {\n14     return 0\n15   }\nThe full code is available at: https://packt.live/35sihwF\n```", "```go\npackage main\nimport (\"strings\"\n\"fmt\"\n)\nfunc main() {\n  str := \"found me\"\n  if strings.Contains(str, \"found\") {\n    fmt.Println(\"value found in str\")\n  }\n}\n```", "```go\nstrings.Contains(str, \"found\")\n```", "```go\n// https://golang.org/src/strings/strings.go\n// Contains reports whether substr is within s.\n    func Contains(s, substr string) bool {\n    return Index(s, substr) >= 0\n    }\n```", "```go\npackage main\nimport (\n  \"fmt\"\n  \"strings\"\n)\nfunc main() {\n  str := \"found me\"\n  slc := strings.explode(str, 3)\n  fmt.Println(slc)\n}\n```", "```go\nmain.go\n1  // https://golang.org/src/strings/strings.go\n2  // explode splits s into a slice of UTF-8 strings,\n3  // one string per Unicode character up to a maximum of n (n < 0 means no limit).\n4  // Invalid UTF-8 sequences become correct encodings of U+FFFD.\nfunc explode(s string, n int) []string {\n5    l := utf8.RuneCountInString(s)\n6    if n < 0 || n > l {\n7      n = l\n8    }\n9    a := make([]string, n)\n10   for i := 0; i < n-1; i++ {\n11     ch, size := utf8.DecodeRuneInString(s)\n12     a[i] = s[:size]\n13     s = s[size:]\n14     if ch == utf8.RuneError {\n15       a[i] = string(utf8.RuneError)\nThe full code is available at https://packt.live/2teXDBN.\n```", "```go\nECHO $GOPATH\n```", "```go\nimport \"person/address\"\n```", "```go\nimport \"company/employee\"\n```", "```go\nimport \"github.com/PacktWorkshops/Get-Ready-To-Go/Chapter08/Exercise8.01\"\n```", "```go\npackage msg\nimport \"fmt\"\n//Greeting greets the input parameter\nfunc Greeting(str string) {\n    fmt.Printf(\"Greeting %s\\n\", str)\n}\n```", "```go\npackage main\nimport (\n  \"fmt\"\n  \"msg\"\n)\nfunc main() {\n  fmt.Println(\"Demo Import App\")\n  msg.Greeting(\"George\")\n}\n```", "```go\nGreeting George\n```", "```go\npackage shape\n```", "```go\npackage notright\n```", "```go\nimport  f \"fmt\"\n```", "```go\npackage main\nimport (\n  f \"fmt\"\n  //\"fmt\"\n)\nfunc main() {\n  f.Println(\"Hello, Gophers\")\n}\nimport (\n  f \"fmt\"\n```", "```go\n  f.Println(\"Hello, Gophers\")\n```", "```go\npackage main\nimport (\n  \"fmt\"\n)\nfunc main() {\n  fmt.Println(\"Hello Gophers!\")\n}\n```", "```go\nHello Gophers !\n```", "```go\n    package shape\n    import \"fmt\"\n    ```", "```go\n    type Shape interface {\n      area() float64\n      name() string\n    }\n    type Triangle struct {\n      Base   float64\n      Height float64\n    }\n    type Rectangle struct {\n      Length float64 \n      Width  float64\n    }\n    type Square struct {\n      Side float64\n    }\n    ```", "```go\n    Exercise8.01\n    18 func PrintShapeDetails(shapes ...Shape) {\n    19   for _, item := range shapes {\n    20     fmt.Printf(\"The area of %s is: %.2f\\n\", item.name(), item.area())\n    21   }\n    22 }\n    23 func (t Triangle) area() float64 {\n    24   return (t.Base * t.Height) / 2\n    25 }\n    26 func (t Triangle) name() string {\n    27   return \"Triangle\"\n    28 }\n    29 func (r Rectangle) area() float64 {\n    30   return r.Length * r.Width\n    31 }\n    32 func (r Rectangle) name() string {\n    The full code for this step is available at: https://packt.live/2rngdHf.\n    ```", "```go\n    func PrintShapeDetails(shapes ...Shape) {\n      for _, item := range shapes {\n        fmt.Printf(\"The area of %s is: %.2f\\n\", item.name(), item.area())\n      }\n    }\n    ```", "```go\n    go build\n    ```", "```go\n    package main\n    ```", "```go\n    import (\n      import \"github.com/PacktWorkshops/The-Go-Workshop/Chapter08/Exercise8.01/shape\"\n    )\n    ```", "```go\n    func main() {\n      t := shape.Triangle{Base: 15.5, Height: 20.1}\n      r := shape.Rectangle{Length: 20, Width: 10}\n      s := shape.Square{Side: 10}\n    ```", "```go\n      shape.PrintShapeDetails(t, r, s)\n    }\n    ```", "```go\n    go build\n    ```", "```go\n    ./area\n    ```", "```go\n    The area of Triangle is: 155.78\n    The area of Rectangle is: 200.00\n    The area of Square is 100.00\n    ```", "```go\npackage main\nimport (\n  \"fmt\"\n)\nvar name = \"Gopher\"\nfunc init() {\n  fmt.Println(\"Hello, \",name)\n}\nfunc main() {\n  fmt.Println(\"Hello, main function\")\n}\n```", "```go\nHello, Gopher\nHello, main function\n```", "```go\nvar name = \"Gopher\"\n```", "```go\nfunc init() {\n  fmt.Println(\"Hello, \",name)\n}\n```", "```go\nfunc main() {\n  fmt.Println(\"Hello, main function\")\n}\n```", "```go\npackage main\nimport (\n  \"fmt\"\n)\nvar name = \"Gopher\"\nfunc init(age int) {\n  fmt.Println(\"Hello, \",name)\n}\nfunc main() {\n  fmt.Println(\"Hello, main function\")\n}\n```", "```go\n    package main\n    import \"fmt\"\n    ```", "```go\n    var budgetCategories = make(map[int]string)\n    ```", "```go\n    func init() {\n        fmt.Println(\"Initializing our budgetCategories\")\n        budgetCategories[1] = \"Car Insurance\"\n        budgetCategories[2] = \"Mortgage\"\n        budgetCategories[3] = \"Electricity\"\n        budgetCategories[4] = \"Retirement\"\n        budgetCategories[5] = \"Vacation\"\n        budgetCategories[7] = \"Groceries\"\n        budgetCategories[8] = \"Car Payment\"\n    }\n    ```", "```go\n    func main() {\n        for k, v := range budgetCategories {\n            fmt.Printf(\"key: %d, value: %s\\n\", k, v)\n        }\n    }\n    ```", "```go\n    Initializing our budgetCategories\n    key: 5, value: Vacation\n    key: 7, value: Groceries\n    key: 8, value: Car Payment\n    key: 1, value: Car Insurance\n    key: 2, value: Mortgage\n    key: 3, value: Electricity\n    key: 4, value: Retirement\n    ```", "```go\npackage main\nimport (\n  \"fmt\"\n)\nvar name = \"Gopher\"\nfunc init() {\n  fmt.Println(\"Hello, \",name)\n}\nfunc init(){\n  fmt.Println(\"Second\")\n}\nfunc init(){\n  fmt.Println(\"Third\")\n}\nfunc main() {\n  fmt.Println(\"Hello, main function\")\n}\n```", "```go\nvar name = \"Gopher\"\n```", "```go\nfunc init(){\n  fmt.Println(\"Hello, \",name)\n}\n```", "```go\nfunc init(){\n  fmt.Println(\"Second\")\n}\n```", "```go\nfunc init(){\n  fmt.Println(\"Third\")\n}\n```", "```go\nfunc main(){\n  fmt.Println(\"Hello, main function\")\n}\n```", "```go\nHello, Gopher\nSecond\nThird\nHello, main function\n```", "```go\n    var budgetCategories = make(map[int]string)\n    var payeeToCategory = make(map[string]int)\n    ```", "```go\n    main.go\n    5  func init() {\n    6      fmt.Println(\"Initializing our budgetCategories\")\n    7      budgetCategories[1] = \"Car Insurance\"\n    8      budgetCategories[2] = \"Mortgage\"\n    9      budgetCategories[3] = \"Electricity\"\n    10     budgetCategories[4] = \"Retirement\"\n    11     budgetCategories[5] = \"Vacation\"\n    12     budgetCategories[7] = \"Groceries\"\n    13     budgetCategories[8] = \"Car Payment\"\n    14 }\n    The full code for this step is available at: https://packt.live/2Qdss1E.\n    ```", "```go\n    func main() {\n        fmt.Println(\"In main, printing payee to category\")\n        for k, v := range payeeToCategory {\n            fmt.Printf(\"Payee: %s, Category: %s\\n\", k, budgetCategories[v])\n        }\n    }\n    ```", "```go\n    Welcome to the Employee Pay and Performance Review\n    ++++++++++++++++++++++++++++++++++++++++++++++++++\n    Initializing variables\n    Eric Davis got a review rating of 2.80\n    Eric Davis got paid 84000.00 for the year\n    Mr. Boss got paid 160500.00 for the year\n    ```"]