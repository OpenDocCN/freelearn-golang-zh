["```go\nServeHTTP(w http.ResponseWriter, r *http.Request)\n```", "```go\ntype MyHandler struct {}\nfunc(h MyHandler) ServeHTTP(w http.ResponseWriter, r *http.Request) {}\n```", "```go\nhttp.ListenAndServe(\":8080\", MyHandler{})\n```", "```go\nfunc(h MyHandler) ServeHTTP(w http.ResponseWriter, r *http.Request) {\n  w.Write([]byte(\"HI\"))\n}\n```", "```go\nlog.Fatal(http.ListenAndServe(\":8080\", MyHandler{}))\n```", "```go\n    package main\n    ```", "```go\n    import (\n       \"log\"\n       \"net/http\"\n    )\n    ```", "```go\n    type hello struct{}\n    func(h hello) ServeHTTP(w http.ResponseWriter, r *http.Request) {\n       msg := \"<h1>Hello World</h1>\"\n       w.Write([]byte(msg))\n    }\n    ```", "```go\n    func main() {\n       log.Fatal(http.ListenAndServe(\":8080\", hello{}))\n    }\n    ```", "```go\n    package main\n    import (\n       \"log\"\n       \"net/http\"\n    )\n    type hello struct{}\n    func(h hello) ServeHTTP(w http.ResponseWriter, r *http.Request) {\n       msg := \"<h1>Hello World</h1\"\n       w.Write([]byte(msg))\n    }\n    func main() {\n       log.Fatal(http.ListenAndServe(\":8080\", hello{}))\n    }\n    ```", "```go\n    hello-world-server go run .\n    ```", "```go\n    http://localhost:8080\n    ```", "```go\nhttp://localhost:8080\nhttp://localhost:8080/hello\nhttp://localhost:8080/chapter1\n```", "```go\nHandleFunc(pattern string, handler func(ResponseWriter, *Request))\n```", "```go\n    package main\n    import (\n       \"log\"\n       \"net/http\"\n    )\n    type hello struct{}\n    func(h hello) ServeHTTP(w http.ResponseWriter, r *http.Request) {\n       msg := \"<h1>Hello World</h1\"\n       w.Write([]byte(msg))\n    }\n    ```", "```go\n    func main() {\n    ```", "```go\n      http.HandleFunc(\"/chapter1\", func(w http.ResponseWriter, r *http.Request) {\n       msg := \"Chapter 1\"\n       w.Write([]byte(msg))\n    })\n    ```", "```go\n      log.Fatal(http.ListenAndServe(\":8080\", hello{}))\n    }\n    ```", "```go\n    hello-world-server go run main.go\n    ```", "```go\nfunc main() {\n   http.HandleFunc(\"/chapter1\", func(w http.ResponseWriter, r *http.Request) {\n  msg := \"<h1>Chapter 1</h1>\"\n  w.Write([]byte(msg))\n   })\n   http.Handle(\"/\", hello{})\n   log.Fatal(http.ListenAndServe(\":8080\", nil))\n}\n```", "```go\nhttp.Handle(\"/\", hello{})\n```", "```go\nhttp.HandleFunc(\"/chapter1\", func(w http.ResponseWriter, r *http.Request) {\n   msg := \"Chapter 1\"\n   w.Write([]byte(msg))\n})\n```", "```go\nServeHTTP(w http.ResponseWriter, r *http.Request)\n```", "```go\nhttp://localhost:8080\n```", "```go\nhttp://localhost:8080?name=john\n```", "```go\n    package main\n    ```", "```go\n    import (\n       \"fmt\"\n       \"log\"\n       \"net/http\"\n       \"strings\"\n    )\n    ```", "```go\n    func Hello(w http.ResponseWriter, r *http.Request) {\n    ```", "```go\n       vl := r.URL.Query()\n    ```", "```go\n    name, ok := vl[\"name\"]\n    ```", "```go\n    if !ok {\n       w.WriteHeader(400)\n       w.Write([]byte(\"Missing name\"))\n       return\n    }\n    ```", "```go\n    w.Write([]byte(fmt.Sprintf(\"Hello %s\", strings.Join(name, \",\"))))\n    }\n    ```", "```go\n    func main() {\n       http.HandleFunc(\"/\", Hello)\n       log.Fatal(http.ListenAndServe(\":8080\", nil))\n    }\n    ```", "```go\n{{name}}\n```", "```go\n{{if age}} Hello {{else}} bye {{end}}\n```", "```go\n{{.ID}}\n```", "```go\n    package main\n    import (\n       \"html/template\"\n       \"log\"\n       \"net/http\"\n       \"strconv\"\n       \"strings\"\n    )\n    ```", "```go\n    var tplStr = `\n    <html>\n      <h1>Customer {{.ID}}\n      {{if .ID }}\n       <p>Details:</p>\n       <ul>\n       {{if .Name}}<li>Name: {{.Name}}</li>{{end}}\n       {{if .Surname}}<li>Surname: {{.Surname}}</li>{{end}}\n       {{if .Age}}<li>Age: {{.Age}}</li>{{end}}\n       </ul>\n      {{else}}\n      <p>Data not available</p>\n      {{end}}\n    </html>\n    `\n    ```", "```go\n    type Customer struct {\n       ID int\n       Name string\n       Surname string\n       Age int\n    }\n    ```", "```go\n    func Hello(w http.ResponseWriter, r *http.Request) {\n       vl := r.URL.Query()\n    ```", "```go\n    cust := Customer{}\n    ```", "```go\n    id, ok := vl[\"id\"]\n    if ok {\n       cust.ID, _ = strconv.Atoi(strings.Join(id, \",\"))\n    }\n    name, ok := vl[\"name\"]\n    if ok {\n       cust.Name = strings.Join(name, \",\")\n    }\n    surname, ok := vl[\"surname\"]\n    if ok {\n       cust.Surname = strings.Join(surname, \",\")\n    }\n    age, ok := vl[\"age\"]\n    if ok {\n       cust.Age, _ = strconv.Atoi(strings.Join(age, \"\"))\n    }\n    ```", "```go\n    cust.Age, _ = strconv.Atoi(strings.Join(age, \"\"))\n    ```", "```go\n    tmpl, _ := template.New(\"test\").Parse(tplStr)\n    ```", "```go\n       tmpl.Execute(w, cust)\n    }\n    ```", "```go\n    func main() {\n       http.HandleFunc(\"/\", Hello)\n       log.Fatal(http.ListenAndServe(\":8080\", nil))\n    }\n    ```", "```go\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n      <meta charset=\"UTF-8\">\n      <title>Welcome</title>\n    </head>\n    <body>\n      <h1>Hello World</h1>\n    </body>\n    </html>\n    ```", "```go\n    package main\n    import (\n       \"log\"\n       \"net/http\"\n    )\n    ```", "```go\n    func main() {\n    ```", "```go\n       http.HandleFunc(\"/\", func (w http.ResponseWriter, r *http.Request) {\n      http.ServeFile(w, r, \"./index.html\")\n       })\n    ```", "```go\n    http.ServeFile(w, r, \"./index.html\")\n    ```", "```go\n       log.Fatal(http.ListenAndServe(\":8080\", nil))\n    }\n    ```", "```go\n      go run main.go\n    ```", "```go\n      <h1>Hello World</h1>\n    ```", "```go\n      <h1>Hello Galaxy</h1>\n    ```", "```go\n<link rel=\"stylesheet\" href=\"file.css\">\n```", "```go\nhttp.FileServer(http.Dir(\"./public\"))\n```", "```go\nhttp://localhost:8080/public/myfile.css\n```", "```go\nhttp.StripPrefix(\n  \"/statics/\",\n  http.FileServer(http.Dir(\"./public\")),\n   )\n```", "```go\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n      <meta charset=\"UTF-8\">\n      <title>Welcome</title>\n      <link rel=\"stylesheet\" href=\"/statics/body.css\">\n      <link rel=\"stylesheet\" href=\"/statics/header.css\">\n      <link rel=\"stylesheet\" href=\"/statics/text.css\">\n    </head>\n    <body>\n      <h1>Hello World</h1>\n      <p>May I give you a warm welcome</p>\n    </body>\n    </html>\n    ```", "```go\n    h1 {\n      color: brown;\n    }\n    ```", "```go\n    body {\n      background-color: beige;\n    }\n    ```", "```go\n    p {\n      color: coral;\n    }\n    ```", "```go\n    package main\n    import (\n       \"log\"\n       \"net/http\"\n    )\n    func main() {\n       http.HandleFunc(\"/\", func (w http.ResponseWriter, r *http.Request) {\n      http.ServeFile(w, r, \"./index.html\")\n       })\n    ```", "```go\n    http.Handle(\n       \"/statics/\",\n       http.StripPrefix(\n      \"/statics/\",\n      http.FileServer(http.Dir(\"./public\")),\n       ),\n    )\n    ```", "```go\n    http.Dir(\"./public\")\n    ```", "```go\n    log.Fatal(http.ListenAndServe(\":8080\", nil))\n    }\n    ```", "```go\n      go run main.go\n    ```", "```go\n    <link rel=\"stylesheet\" href=\"/statics/body.css\">\n    <link rel=\"stylesheet\" href=\"/statics/header.css\">\n    <link rel=\"stylesheet\" href=\"/statics/text.css\">\n    ```", "```go\nfunc ParseFiles(filenames ...string) (*Template, error)\n```", "```go\ntemplate.ParseFiles(\"mytemplate.html\")\n```", "```go\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n      <meta charset=\"UTF-8\">\n      <title>Welcome</title>\n    </head>\n    <body>\n      <h1>Details</h1>\n      <ul>\n      <li>Name: {{.Name}}</li>\n      <li>Surname: {{.Surname}}</li>\n      <li>Age: {{.Age}}</li>\n      </ul>\n    </body>\n    </html>\n    ```", "```go\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n      <meta charset=\"UTF-8\">\n      <title>Form</title>\n    </head>\n    <body>\n      <form method=\"post\" action=\"/\">\n      <ul>\n       <li>Name: <input type=\"text\" name=\"name\"></li>\n      <li>Surname: <input type=\"text\" name=\"surname\"></li>\n      <li>Age: <input type=\"text\" name=\"age\"></li>\n      <li><input type=\"submit\" name=\"send\" value=\"send\"></li>\n      </ul>\n      </form>\n    </body>\n    </html>\n    ```", "```go\n    package main\n    import (\n       \"html/template\"\n       \"log\"\n       \"net/http\"\n    )\n    ```", "```go\n    type Visitor struct {\n       Name string\n       Surname string\n       Age string\n    }\n    ```", "```go\n    type Hello struct {\n       tpl *template.Template\n    }\n    ```", "```go\n    func (h Hello) ServeHTTP(w http.ResponseWriter, r *http.Request) {\n       vst := Visitor{}\n    ```", "```go\n    if r.Method == http.MethodPost {\n    ```", "```go\n       err := r.ParseForm()\n       if err != nil {\n      w.WriteHeader(400)\n      return\n       }\n    ```", "```go\n       vst.Name =  r.Form.Get(\"name\")\n       vst.Surname = r.Form.Get(\"surname\")\n       vst.Age = r.Form.Get(\"age\")\n    }\n    ```", "```go\n       h.tpl.Execute(w, vst)\n    }\n    ```", "```go\n    func NewHello(tplPath string) (*Hello, error){\n       tmpl, err := template.ParseFiles(tplPath)\n       if err != nil {\n      return nil, err\n       }\n       return &Hello{tmpl}, nil\n    }\n    ```", "```go\n    func main() {\n       hello, err := NewHello(\"./index.html\")\n       if err != nil {\n      log.Fatal(err)\n       }\n       http.Handle(\"/\", hello)\n       http.HandleFunc(\"/form\", func(writer http.ResponseWriter, request *http.Request) {\n      http.ServeFile(writer, request, \"./form.html\")\n       })\n       log.Fatal(http.ListenAndServe(\":8080\", nil))\n    }\n    ```", "```go\n    package main\n    import (\n       \"encoding/json\"\n       \"fmt\"\n       \"log\"\n       \"net/http\"\n    )\n    ```", "```go\n    type Request struct {\n       Name string\n       Surname string\n    }\n    type Response struct {\n       Greeting string\n    }\n    ```", "```go\n    func main() {\n    ```", "```go\n       http.HandleFunc(\"/\", func(wr http.ResponseWriter, req *http.Request) {\n      decoder := json.NewDecoder(req.Body)\n    ```", "```go\n    var data Request\n    err := decoder.Decode(&data)\n    if err != nil {\n       wr.WriteHeader(400)\n       return\n    }\n    ```", "```go\n    rsp := Response{Greeting: fmt.Sprintf(\"Hello %s %s\", data.Name, data.Surname)}\n    ```", "```go\n       bts, err := json.Marshal(rsp)\n       if err != nil {\n      wr.WriteHeader(400)\n      return\n       }\n       wr.Write(bts)\n    })\n    ```", "```go\n    func main() {\n      http.HandleFunc(\"/\", Hello)\n      log.Fatal(http.ListenAndServe(\":8080\", nil))\n    }\n    ```"]