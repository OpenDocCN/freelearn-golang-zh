["```go\n$ go get –u google.golang.org/protobuf\n$ go get –u golang.org/x/exp/constraints\n```", "```go\nfunc serializedSize[D constraints.Integer, W\n  protoreflect.ProtoMessage](data D, wrapper W) (uintptr,\n    int) {\n  //...\n}\n```", "```go\nfunc serializedSize[D constraints.Integer, W\n  protoreflect.ProtoMessage](data D, wrapper W) (uintptr, int) {\n  out, err := proto.Marshal(wrapper)\n\n  if err != nil {\n    log.Fatal(err)\n  }\n  return unsafe.Sizeof(data), len(out) - 1\n}\n```", "```go\nimport (\n  \"fmt\"\n  \"unsafe\"\n  \"google.golang.org/protobuf/proto\"\n  \"google.golang.org/protobuf/reflect/protoreflect\"\n  \"google.golang.org/protobuf/types/known/wrapperspb\"\n  \"golang.org/x/exp/constraints\"\n)\n//...\n\nfunc main() {\n  var data int32 = 268_435_456\n  i32 := &wrapperspb.Int32Value{\n    Value: data,\n  }\n\n  d, w := serializedSize(data, i32)\n  fmt.Printf(\"in memory: %d\\npb: %d\\n\", d, w)\n}\n```", "```go\n$ go run integers.go\nin memory: 4\npb: 5\n```", "```go\nfunc main() {\n  var data uint64 = 72_057_594_037_927_936\n  ui64 := &wrapperspb.UInt64Value{\n    Value: data,\n  }\n  d, w := serializedSize(data, ui64)\n  fmt.Printf(\"in memory: %d\\npb: %d\\n\", d, w)\n}\n```", "```go\n$ go run integers.go\nin memory: 8\npb: 9\n```", "```go\nmessage Tags {\n  int32 tag = 1;\n  int32 tag2 = 16;\n  int32 tag3 = 2048;\n  int32 tag4 = 262_144;\n  int32 tag5 = 33_554_432;\n  int32 tag6 = 536_870_911;\n}\n```", "```go\npackage main\nimport (\n  \"fmt\"\n  \"log\"\n  \"google.golang.org/protobuf/proto\"\n  \"google.golang.org/protobuf/reflect/protoreflect\"\n  pb \"github.com/PacktPublishing/gRPC-Go-for-Professionals/\n    helpers/proto\"\n)\nfunc serializedSize[M protoreflect.ProtoMessage](msg M) int\n{\n  out, err := proto.Marshal(msg)\n  if err != nil {\n    log.Fatal(err)\n  }\n  return len(out)\n}\nfunc main() {\n  t := &pb.Tags{}\n  tags := []int{1, 16, 2048, 262_144, 33_554_432, 536_870_911}\n  fields := []*int32{&t.Tag, &t.Tag2, &t.Tag3, &t.Tag4,\n    &t.Tag5, &t.Tag6}\n  sz := serializedSize(t)\n  fmt.Printf(\"0 - %d\\n\", sz)\n  for i, f := range fields {\n    *f = 1\n    sz := serializedSize(t)\n    fmt.Printf(\"%d - %d\\n\", tags[i], sz-(i+1))\n  }\n}\n```", "```go\n$ go run tags.go\nTag             Bytes\n----            ----\n0               0\n1               1\n16              3\n2048            6\n262144          10\n33554432        15\n536870911       20\n```", "```go\nmessage ComplexName {\n  string name = 1;\n}\nmessage Split {\n  string name = 1;\n  ComplexName complex_name = 2;\n}\n```", "```go\npackage main\nimport (\n  \"fmt\"\n  \"log\"\n  \"google.golang.org/protobuf/proto\"\n  \"google.golang.org/protobuf/reflect/protoreflect\"\n  pb \"github.com/PacktPublishing/gRPC-Go-for-Professionals\n    /helpers/proto\"\n)\nfunc serializedSize[M protoreflect.ProtoMessage](msg M) int\n{\n  out, err := proto.Marshal(msg)\n  if err != nil {\n    log.Fatal(err)\n  }\n  return len(out)\n}\nfunc main() {\n  s := &pb.Split{Name: \"Packt\"}\n  sz := serializedSize(s)\n  fmt.Printf(\"With Name: %d\\n\", sz)\n  s.Name = \"\"\n  s.ComplexName = &pb.ComplexName{Name: \"Packt\"}\n  sz = serializedSize(s)\n  fmt.Printf(\"With ComplexName: %d\\n\", sz)\n}\n```", "```go\n$ go run split.go\nWith Name: 7\nWith ComplexName: 9\n```", "```go\nmessage UpdateTasksRequest {\n  Task task = 1;\n}\n```", "```go\nmessage UpdateTasksRequest {\n  uint64 id = 1;\n  string description = 2;\n  bool done = 3;\n  google.protobuf.Timestamp due_date = 4;\n}\n```", "```go\nfunc (s *server) UpdateTasks(stream\n  pb.TodoService_UpdateTasksServer) error {\n  totalLength := 0\n  for {\n    req, err := stream.Recv()\n    if err == io.EOF {\n      log.Println(\"TOTAL: \", totalLength)\n      return stream.SendAndClose(&pb.UpdateTasksResponse{})\n    }\n    if err != nil {\n      return err\n    }\n    out, _ := proto.Marshal(req)\n    totalLength += len(out)\n    s.d.updateTask(\n      req.Id,\n      req.Description,\n      req.DueDate.AsTime(),\n      req.Done,\n    )\n  }\n}\n```", "```go\nmessage Task {\n  uint64 id = 1;\n  string description = 2;\n  bool done = 3;\n  google.protobuf.Timestamp due_date = 4;\n}\n```", "```go\nmask {\n  paths: \"id\"\n  paths: \"done\"\n}\n```", "```go\nimport \"google/protobuf/field_mask.proto\";\n//...\nmessage ListTasksRequest {\n  google.protobuf.FieldMask mask = 1;\n}\n```", "```go\n$ go get golang.org/x/exp/slices\n```", "```go\nimport (\n  \"google.golang.org/protobuf/proto\"\n  \"google.golang.org/protobuf/reflect/protoreflect\"\n  \"google.golang.org/protobuf/types/known/fieldmaskpb\"\n  \"golang.org/x/exp/slices\"\n)\n//...\nfunc Filter(msg proto.Message, mask *fieldmaskpb.FieldMask) {\n  if mask == nil || len(mask.Paths) == 0 {\n    return\n  }\n  rft := msg.ProtoReflect()\n  rft.Range(func(fd protoreflect.FieldDescriptor, _\n    protoreflect.Value) bool {\n    if !slices.Contains(mask.Paths, string(fd.Name())) {\n      rft.Clear(fd)\n    }\n    return true\n  })\n}\n```", "```go\nfunc (s *server) ListTasks(req *pb.ListTasksRequest, stream\n  pb.TodoService_ListTasksServer) error {\n  return s.d.getTasks(func(t interface{}) error {\n    task := t.(*pb.Task)\n    Filter(task, req.Mask)\n    overdue := task.DueDate != nil && !task.Done &&\n      task.DueDate.AsTime().Before(time.Now().UTC())\n    err := stream.Send(&pb.ListTasksResponse{\n      Task: task,\n      Overdue: overdue,\n    })\n    return err\n  })\n}\n```", "```go\nfunc printTasks(c pb.TodoServiceClient, fm *fieldmaskpb\n  .FieldMask) {\n  req := &pb.ListTasksRequest{\n    Mask: fm,\n  }\n  //...\n}\n```", "```go\nfunc main() {\n  //...\n  fm, err := fieldmaskpb.New(&pb.Task{}, \"id\")\n  if err != nil {\n    log.Fatalf(\"unexpected error: %v\", err)\n  }\n  //...\n  fmt.Println(\"--------LIST-------\")\n  printTasks(c, fm)\n  fmt.Println(\"-------------------\")\n  //...\n}\n```", "```go\n--------LIST-------\nid:1 overdue:false\nid:2 overdue:false\nid:3 overdue:false\n-------------------\n```", "```go\nmessage RepeatedUInt32Values {\n  repeated uint32 values = 1;\n}\n```", "```go\n$ cat repeated_scalar.txt | protoc --encode=\n RepeatedUInt32Values proto/repeated.proto | hexdump -C\n0a 03 01 02 03\n00000005\n```", "```go\nvalues: 1\nvalues: 2\nvalues: 3\n```", "```go\nmessage RepeatedUInt32Values {\n  repeated uint32 values = 1 [packed = false];\n}\n```", "```go\n$ cat repeated_scalar.txt | protoc --encode=\nRepeatedUInt32Values proto/repeated.proto | hexdump -C\n08 01 08 02 08 03\n00000006\n```", "```go\nmessage UserDefined {\n  uint32 value = 1;\n}\nmessage RepeatedUserDefinedValues {\n  repeated UserDefined values = 1;\n}\n```", "```go\n$ cat repeated_ud.txt | protoc --encode=\nRepeatedUserDefinedValues proto/repeated.proto | hexdump -C\n0a 02 08 01 0a 02 08 02 0a 02 08 03\n0000000c\n```", "```go\nvalues: {value: 1}\nvalues: {value: 2}\nvalues: {value: 3}\n```"]