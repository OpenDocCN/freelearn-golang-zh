- en: Welcome to Full Stack Go
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 欢迎来到全栈Go
- en: This book is the result of an effort to provide you, the reader, with a very
    practical and concise learning tool for building full stack web applications in
    Go. Learning how to build full stack web applications in a powerful language such
    as Go can be a very valuable skill, as it allows you to write fully functional
    and scalable applications on your own. Go is known in the industry for both its
    performance and relative ease of use. This ensures that your applications can
    sustain growing data loads and expanding users, without suffering from scalability
    issues too early.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本书是努力为您提供的一个非常实用且简洁的学习工具，用于在Go中构建全栈网络应用。学习如何在像Go这样的强大语言中构建全栈网络应用可以是一个非常宝贵的技能，因为它允许你独立编写完全功能化和可扩展的应用程序。Go在业界以其性能和相对易用性而闻名。这确保了你的应用程序可以承受不断增长的数据负载和用户数量的扩展，而不会过早地出现可扩展性问题。
- en: Full stack developers are the main drivers behind software startups; this is
    because of their ability to build products both quickly and efficiently from scratch.
    They are also typically the key members or the **subject-matter experts** (**SMEs**) in
    large corporations, as they help architect software systems, from the user interface
    down to the backend code. Even as an individual developer, learning full stack
    web programming can help you build your product ideas quickly, over a weekend
    or two.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 全栈开发者是软件创业公司的主要推动者；这是因为他们能够从零开始快速且高效地构建产品。他们通常也是大型公司中的关键成员或**领域专家**（SMEs），因为他们帮助设计软件系统，从用户界面到后端代码。即使作为一个独立开发者，学习全栈网络编程也能帮助你快速构建你的产品想法，只需周末或两天时间。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: What is full stack development?
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是全栈开发？
- en: What will we build?
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们将构建什么？
- en: The outline of this book
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本书的大纲
- en: What is full stack development?
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是全栈开发？
- en: Before we take any further steps, we first need to answer a simple question;
    what does it really mean to be a full stack developer? A **full stack developer**
    can be defined as a software engineer who has the skill to work on both the frontend
    and the backend of an application.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们采取任何进一步步骤之前，我们首先需要回答一个简单的问题；成为一名全栈开发者究竟意味着什么？**全栈开发者**可以被定义为一位软件工程师，他拥有在应用的前端和后端工作的技能。
- en: The frontend of a web application is basically anything related to the user
    interface of the application. For web applications, the technologies that are
    needed to build the user interface are HTML, CSS, and JavaScript. In production
    environments, an application can support different types of frontends, depending
    on the device by which the user is viewing the web application. For example, a frontend
    on a mobile smartphone may need different rules to accommodate the limited screen
    size of the device, compared to a screen size of a large desktop monitor.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 网络应用的前端基本上与应用的用户界面相关。对于网络应用，构建用户界面所需的技术包括HTML、CSS和JavaScript。在生产环境中，一个应用可以根据用户查看网络应用的设备类型支持不同类型的用户界面。例如，移动智能手机上的前端可能需要不同的规则来适应设备有限的屏幕尺寸，与大型桌面显示器相比。
- en: In order to make the application perform the tasks it is expected to do, the
    backend of a web application consists of all the software layers that need to
    communicate with the frontend of the application. The backend includes the database
    layers, the security layer, the user request-handling layer, all the API layers,
    and more. The backend of a web application can be written in any mature programming
    language. We will obviously be using Go as our backend language for this book.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使应用执行其预期完成的任务，网络应用的后端包括所有需要与应用前端通信的软件层。后端包括数据库层、安全层、用户请求处理层、所有API层等。网络应用的后端可以用任何成熟的编程语言编写。显然，我们将使用Go作为本书的后端语言。
- en: What will we build?
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我们将构建什么？
- en: 'Throughout this book, we will build a full stack web application from scratch.
    The application will be called GoMusic; it''s a store for musical instruments
    written in React.js and Go. The following screenshot demonstrates how the main
    page will look:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在整本书中，我们将从头开始构建一个全栈网络应用。该应用将被命名为GoMusic；它是一个用React.js和Go编写的乐器商店。以下截图展示了主页的样式：
- en: '![](img/9774aa49-5ffa-4865-9a32-f068dd7a5529.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9774aa49-5ffa-4865-9a32-f068dd7a5529.png)'
- en: Users will be able to browse the musical instruments in the store, buy what
    they like with their credit cards, and log in to their accounts to see their existing
    orders.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 用户将能够浏览商店中的乐器，用他们的信用卡购买他们喜欢的乐器，并登录他们的账户查看他们现有的订单。
- en: Let's take a look at the architecture of the application that we are going to
    build in this book.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看本书将要构建的应用程序架构。
- en: The application architecture
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用程序架构
- en: 'Our application architecture will be relatively straightforward—we will use
    the extremely popular React.js framework for our frontend code, and then we will
    use the powerful Gin framework for our backend code. Gin comes with a wide array
    of useful packages that we will be using to build our web application. We will
    also make use of the **Go object-relational mapping** (**GORM**) package, which
    is one of the most popular **object-relational mapping** (**ORM**) layers in the
    Go language:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的应用程序架构将相对简单——我们将使用极受欢迎的React.js框架来编写前端代码，然后我们将使用强大的Gin框架来编写后端代码。Gin附带了一系列有用的包，我们将使用这些包来构建我们的Web应用程序。我们还将利用**Go对象关系映射**（**GORM**）包，这是Go语言中最受欢迎的**对象关系映射**（**ORM**）层之一：
- en: '![](img/2ae44141-1450-4865-82be-1f0bb16c515c.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/2ae44141-1450-4865-82be-1f0bb16c515c.png)'
- en: We'll build our application piece by piece, starting from the frontend, and
    then moving to the backend. We will cover some very important concepts in the
    world of modern web applications, such as reactive UIs, RESTful APIs, security,
    ORMs, credit card handling, testing, benchmarking, and more.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将逐步构建我们的应用程序，从前端开始，然后转向后端。我们将涵盖现代Web应用程序领域的一些非常重要的概念，例如响应式UI、RESTful API、安全性、ORM、信用卡处理、测试、基准测试等。
- en: As we cover these different topics, we'll cover the majority of the code involved
    in building the application.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在介绍这些不同主题的同时，我们将涵盖构建应用程序所涉及的大多数代码。
- en: In the next section, we'll take a tour to discover the outline of this book,
    and what each chapter will cover.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将游览本书的概要，以及每一章将涵盖的内容。
- en: The outline of this book
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书概要
- en: 'This book will cover numerous practical topics to help you acquire the deep
    skills necessary for a full stack developer:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将涵盖众多实用主题，以帮助您获得全栈开发者所需的深入技能：
- en: In [Chapter 2](d638558d-2461-4bc9-b51b-317307ed899b.xhtml), *Go's Building Blocks,*
    and [Chapter 3](72d04e99-a5af-4af9-b51a-54c4c750871f.xhtml), *Go Concurrency,*
    we will take a deep and a practical tour into the Go language. You will learn
    about some of the key features of the language, as well as some of its popular
    design patterns.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[第2章](d638558d-2461-4bc9-b51b-317307ed899b.xhtml)，*Go的构建块*，和[第3章](72d04e99-a5af-4af9-b51a-54c4c750871f.xhtml)，*Go并发*中，我们将深入而实际地探讨Go语言。您将了解语言的一些关键特性以及一些流行的设计模式。
- en: In [Chapter 4](e875a3eb-c517-4246-8233-cc681f6c3356.xhtml), *Frontend with React.js,* and
    [Chapter 5](2047c922-b48b-4b36-afb5-a155031c60ea.xhtml), *Building a Frontend
    for GoMusic,* we will cover how to build beautiful and responsive frontend applications
    using the React.js framework. This is also where we'll start building our GoMusic
    web application. We will cover React's building blocks, design patterns, best
    practices, and more. The majority of the frontend code of the book project will
    be covered in [Chapter 4](e875a3eb-c517-4246-8233-cc681f6c3356.xhtml), *F**rontend
    with React.js,* and [Chapter 5](2047c922-b48b-4b36-afb5-a155031c60ea.xhtml), *Building
    a Frontend for GoMusic*; however, we won't cover every single line of JavaScript
    code, so as not to lose focus. All the code will be available in the GitHub repository
    for this book.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[第4章](e875a3eb-c517-4246-8233-cc681f6c3356.xhtml)，*使用React.js的前端*，和[第5章](2047c922-b48b-4b36-afb5-a155031c60ea.xhtml)，*为GoMusic构建前端*中，我们将介绍如何使用React.js框架构建美观且响应式的应用程序。这也是我们开始构建GoMusic
    Web应用程序的地方。我们将涵盖React的构建块、设计模式、最佳实践等。本书项目的前端代码的大部分内容将在[第4章](e875a3eb-c517-4246-8233-cc681f6c3356.xhtml)，*使用React.js的前端*，和[第5章](2047c922-b48b-4b36-afb5-a155031c60ea.xhtml)，*为GoMusic构建前端*中介绍；然而，我们不会涵盖每一条JavaScript代码，以免分散注意力。所有代码都将包含在本书的GitHub仓库中。
- en: In [Chapter 6](d2dd4c31-a063-4318-bf78-9657870c6582.xhtml), *RESTful Web APIs
    in Go with the Gin Framework,* and [Chapter 7](9784adc1-68b6-475f-abc0-fed51855d4b0.xhtml),
    *Advanced Web Go Applications with Gin and React,* we will start building our
    backend code using the Gin framework. We will cover RESTful APIs, ORMs, secure
    web connections, and more.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[第6章](d2dd4c31-a063-4318-bf78-9657870c6582.xhtml)，*使用Gin框架的Go语言RESTful Web
    API*和[第7章](9784adc1-68b6-475f-abc0-fed51855d4b0.xhtml)，*使用Gin和React的高级Web Go应用*，我们将开始使用Gin框架构建我们的后端代码。我们将涵盖RESTful
    API、ORM、安全Web连接等内容。
- en: In [Chapter 8](f8a1fc5f-1c06-4ec9-9772-fc87c9e81f8e.xhtml), *Testing and Benchmarking
    Your Web API, *we will learn how to test and benchmark our Go code using Go's
    testing package, and the best practices in the industry.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[第8章](f8a1fc5f-1c06-4ec9-9772-fc87c9e81f8e.xhtml)，*测试和基准测试您的Web API*，我们将学习如何使用Go的测试包和行业最佳实践来测试和基准测试我们的Go代码。
- en: In [Chapter 9](f491f81c-ce58-4a8d-85b5-4fab4b4c7877.xhtml), *Introduction to
    Isomorphic Go with GopherJS,* we will go through a crash course in isomorphic
    Go programming. Isomorphic Go programming is the practice of using Go for both
    the frontend and the backend. This is possible through the GopherJS framework.
    [Chapter 9](f491f81c-ce58-4a8d-85b5-4fab4b4c7877.xhtml), *Introduction to Isomorphic
    Go with GopherJS,* is a standalone chapter, as it doesn't attempt to rebuild the
    GoMusic app using Isomorphic Go. However, the chapter covers how to build a React
    application in Isomorphic Go.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[第9章](f491f81c-ce58-4a8d-85b5-4fab4b4c7877.xhtml)，*使用GopherJS的等价Go语言介绍*，我们将快速学习等价Go编程。等价Go编程是指在前后端都使用Go语言的实践。这是通过GopherJS框架实现的。[第9章](f491f81c-ce58-4a8d-85b5-4fab4b4c7877.xhtml)，*使用GopherJS的等价Go语言介绍*是一个独立的章节，因为它并不尝试使用等价Go重新构建GoMusic应用。然而，本章涵盖了如何在等价Go中构建React应用。
- en: In [Chapter 10](7f5048dc-8065-4dae-9311-8b291650dc03.xhtml), *Where to Go from
    Here? *we will touch some topics that the reader should pursue in order to expand
    their knowledge beyond the scope of this book.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[第10章](7f5048dc-8065-4dae-9311-8b291650dc03.xhtml)，*从这里开始往哪里去？*我们将涉及一些读者应该继续探索的主题，以扩展他们的知识范围，超越本书的内容。
- en: Let's get started with the learning journey!
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始学习之旅吧！
