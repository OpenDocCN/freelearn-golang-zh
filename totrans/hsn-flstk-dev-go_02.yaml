- en: Welcome to Full Stack Go
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is the result of an effort to provide you, the reader, with a very
    practical and concise learning tool for building full stack web applications in
    Go. Learning how to build full stack web applications in a powerful language such
    as Go can be a very valuable skill, as it allows you to write fully functional
    and scalable applications on your own. Go is known in the industry for both its
    performance and relative ease of use. This ensures that your applications can
    sustain growing data loads and expanding users, without suffering from scalability
    issues too early.
  prefs: []
  type: TYPE_NORMAL
- en: Full stack developers are the main drivers behind software startups; this is
    because of their ability to build products both quickly and efficiently from scratch.
    They are also typically the key members or the **subject-matter experts** (**SMEs**) in
    large corporations, as they help architect software systems, from the user interface
    down to the backend code. Even as an individual developer, learning full stack
    web programming can help you build your product ideas quickly, over a weekend
    or two.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: What is full stack development?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What will we build?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The outline of this book
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What is full stack development?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before we take any further steps, we first need to answer a simple question;
    what does it really mean to be a full stack developer? A **full stack developer**
    can be defined as a software engineer who has the skill to work on both the frontend
    and the backend of an application.
  prefs: []
  type: TYPE_NORMAL
- en: The frontend of a web application is basically anything related to the user
    interface of the application. For web applications, the technologies that are
    needed to build the user interface are HTML, CSS, and JavaScript. In production
    environments, an application can support different types of frontends, depending
    on the device by which the user is viewing the web application. For example, a frontend
    on a mobile smartphone may need different rules to accommodate the limited screen
    size of the device, compared to a screen size of a large desktop monitor.
  prefs: []
  type: TYPE_NORMAL
- en: In order to make the application perform the tasks it is expected to do, the
    backend of a web application consists of all the software layers that need to
    communicate with the frontend of the application. The backend includes the database
    layers, the security layer, the user request-handling layer, all the API layers,
    and more. The backend of a web application can be written in any mature programming
    language. We will obviously be using Go as our backend language for this book.
  prefs: []
  type: TYPE_NORMAL
- en: What will we build?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Throughout this book, we will build a full stack web application from scratch.
    The application will be called GoMusic; it''s a store for musical instruments
    written in React.js and Go. The following screenshot demonstrates how the main
    page will look:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9774aa49-5ffa-4865-9a32-f068dd7a5529.png)'
  prefs: []
  type: TYPE_IMG
- en: Users will be able to browse the musical instruments in the store, buy what
    they like with their credit cards, and log in to their accounts to see their existing
    orders.
  prefs: []
  type: TYPE_NORMAL
- en: Let's take a look at the architecture of the application that we are going to
    build in this book.
  prefs: []
  type: TYPE_NORMAL
- en: The application architecture
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Our application architecture will be relatively straightforward—we will use
    the extremely popular React.js framework for our frontend code, and then we will
    use the powerful Gin framework for our backend code. Gin comes with a wide array
    of useful packages that we will be using to build our web application. We will
    also make use of the **Go object-relational mapping** (**GORM**) package, which
    is one of the most popular **object-relational mapping** (**ORM**) layers in the
    Go language:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2ae44141-1450-4865-82be-1f0bb16c515c.png)'
  prefs: []
  type: TYPE_IMG
- en: We'll build our application piece by piece, starting from the frontend, and
    then moving to the backend. We will cover some very important concepts in the
    world of modern web applications, such as reactive UIs, RESTful APIs, security,
    ORMs, credit card handling, testing, benchmarking, and more.
  prefs: []
  type: TYPE_NORMAL
- en: As we cover these different topics, we'll cover the majority of the code involved
    in building the application.
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we'll take a tour to discover the outline of this book,
    and what each chapter will cover.
  prefs: []
  type: TYPE_NORMAL
- en: The outline of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This book will cover numerous practical topics to help you acquire the deep
    skills necessary for a full stack developer:'
  prefs: []
  type: TYPE_NORMAL
- en: In [Chapter 2](d638558d-2461-4bc9-b51b-317307ed899b.xhtml), *Go's Building Blocks,*
    and [Chapter 3](72d04e99-a5af-4af9-b51a-54c4c750871f.xhtml), *Go Concurrency,*
    we will take a deep and a practical tour into the Go language. You will learn
    about some of the key features of the language, as well as some of its popular
    design patterns.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In [Chapter 4](e875a3eb-c517-4246-8233-cc681f6c3356.xhtml), *Frontend with React.js,* and
    [Chapter 5](2047c922-b48b-4b36-afb5-a155031c60ea.xhtml), *Building a Frontend
    for GoMusic,* we will cover how to build beautiful and responsive frontend applications
    using the React.js framework. This is also where we'll start building our GoMusic
    web application. We will cover React's building blocks, design patterns, best
    practices, and more. The majority of the frontend code of the book project will
    be covered in [Chapter 4](e875a3eb-c517-4246-8233-cc681f6c3356.xhtml), *F**rontend
    with React.js,* and [Chapter 5](2047c922-b48b-4b36-afb5-a155031c60ea.xhtml), *Building
    a Frontend for GoMusic*; however, we won't cover every single line of JavaScript
    code, so as not to lose focus. All the code will be available in the GitHub repository
    for this book.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In [Chapter 6](d2dd4c31-a063-4318-bf78-9657870c6582.xhtml), *RESTful Web APIs
    in Go with the Gin Framework,* and [Chapter 7](9784adc1-68b6-475f-abc0-fed51855d4b0.xhtml),
    *Advanced Web Go Applications with Gin and React,* we will start building our
    backend code using the Gin framework. We will cover RESTful APIs, ORMs, secure
    web connections, and more.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In [Chapter 8](f8a1fc5f-1c06-4ec9-9772-fc87c9e81f8e.xhtml), *Testing and Benchmarking
    Your Web API, *we will learn how to test and benchmark our Go code using Go's
    testing package, and the best practices in the industry.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In [Chapter 9](f491f81c-ce58-4a8d-85b5-4fab4b4c7877.xhtml), *Introduction to
    Isomorphic Go with GopherJS,* we will go through a crash course in isomorphic
    Go programming. Isomorphic Go programming is the practice of using Go for both
    the frontend and the backend. This is possible through the GopherJS framework.
    [Chapter 9](f491f81c-ce58-4a8d-85b5-4fab4b4c7877.xhtml), *Introduction to Isomorphic
    Go with GopherJS,* is a standalone chapter, as it doesn't attempt to rebuild the
    GoMusic app using Isomorphic Go. However, the chapter covers how to build a React
    application in Isomorphic Go.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In [Chapter 10](7f5048dc-8065-4dae-9311-8b291650dc03.xhtml), *Where to Go from
    Here? *we will touch some topics that the reader should pursue in order to expand
    their knowledge beyond the scope of this book.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let's get started with the learning journey!
  prefs: []
  type: TYPE_NORMAL
