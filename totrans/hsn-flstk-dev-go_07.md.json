["```go\nnpm install -g create-react-app\n```", "```go\ncreate-react-app gomusic\n```", "```go\ncd gomusic\n```", "```go\nnpm install --save react-router-dom\n```", "```go\nimport React from 'react';\nimport {NavLink} from 'react-router-dom';\n```", "```go\nexport default class Navigation extends React.Component{\n}\n```", "```go\nexport default class Navigation extends React.Component{\n    render(){\n        //The code to describe how our menu would look like\n    }\n}\n```", "```go\nexport default class Navigation extends React.Component{\n    render(){\n        //The code to describe how our menu would look like\n         return (\n            <div>\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-success fixed-top\">\n                    <div className=\"container\">\n                       <button type=\"button\" className=\"navbar-brand order-1 btn btn-success\"  onClick={() => { this.props.showModalWindow();}}>Sign in</button>\n                        <div className=\"navbar-collapse\" id=\"navbarNavAltMarkup\">\n                            <div className=\"navbar-nav\">\n                                <NavLink className=\"nav-item nav-link\" to=\"/\">Home</NavLink>\n                                <NavLink className=\"nav-item nav-link\" to=\"/promos\">Promotions</NavLink>                             \n                                <NavLink className=\"nav-item nav-link\" to=\"/about\">About</NavLink>\n                            </div>\n                        </div>\n                    </div>\n                </nav>\n            </div>\n        );\n  }\n}\n```", "```go\n<button type=\"button\" className=\"navbar-brand order-1 btn btn-success\" onClick={() => { this.props.showModalWindow();}}>Sign in</button>\n```", "```go\nimport React from 'react';\n\nclass Card extends React.Component {\n    render() {\n        const priceColor = (this.props.promo)? \"text-danger\" : \"text-dark\";\n        const sellPrice = (this.props.promo)?this.props.promotion:this.props.price;\n        return (\n            <div className=\"col-md-6 col-lg-4 d-flex align-items-stretch\">\n                <div className=\"card mb-3\">\n                    <img className=\"card-img-top\" src={this.props.img} alt={this.props.imgalt} />\n                    <div className=\"card-body\">\n                        <h4 className=\"card-title\">{this.props.productname}</h4>\n                        Price: <strong className={priceColor}>{sellprice}</strong>\n                        <p className=\"card-text\">{this.props.desc}</p>\n                        <a className=\"btn btn-success text-white\"  onClick={()=>{this.props.showBuyModal(this.props.ID,sellPrice)}}>Buy</a>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n```", "```go\nexport default class CardContainer extends React.Component{\n    //our code\n}\n```", "```go\nexport default class CardContainer extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            cards: []\n        };\n    }\n}\n```", "```go\n[{\n    \"id\" : 1,\n    \"img\" : \"img/strings.png\",\n    \"imgalt\":\"string\",\n    \"desc\":\"A very authentic and beautiful instrument!!\",\n    \"price\" : 100.0,\n    \"productname\" : \"Strings\"\n}, {\n    \"id\" : 2,\n    \"img\" : \"img/redguitar.jpeg\",\n    \"imgalt\":\"redg\",\n    \"desc\":\"A really cool red guitar that can produce super cool music!!\",\n    \"price\" : 299.0,\n    \"productname\" : \"Red Guitar\"\n},{\n    \"id\" : 3,\n    \"img\" : \"img/drums.jpg\",\n    \"imgalt\":\"drums\",\n    \"desc\":\"A set of super awesome drums, combined with a guitar, they can product more than amazing music!!\",\n\"price\" : 17000.0,\n    \"productname\" : \"Drums\"\n}]\n```", "```go\ncomponentDidMount() {\n fetch(this.props.location)\n .then(res => res.json())\n .then((result) => {\n this.setState({\n cards: result\n });\n });\n}\n```", "```go\nrender(){\n        const cards = this.state.cards;\n        let items = cards.map(\n            card => <Card key={card.id} {...card} promo={this.props.promo} showBuyModal={this.props.showBuyModal}  />\n        );\n        return (\n            <div>\n                <div className=\"mt-5 row\">\n                    {items}\n                </div>\n            </div>\n        );\n}\n```", "```go\nimport React from 'react';\n```", "```go\nexport default function About(props){\n    return (\n        <div className=\"row mt-5\">\n            <div className=\"col-12 order-lg-1\">\n                <h3 className=\"mb-4\">About the Go Music Store</h3>\n                <p>Go music is a modern online musical instruments store</p>\n                <p>Explore how you can combine the power of React and Go, to build a fast and beautiful looking online store.</p>\n                <p>We will cover how to build this website step by step.</p>\n            </div>\n        </div>);\n}\n```", "```go\n import React, { useState } from 'react';\n\nfunction Example() {\n  // Declare a new state variable, which we'll call \"count\"\n  const [count, setCount] = useState(0);\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>\n        Click me\n      </button>\n    </div>\n  );\n}\n```", "```go\nnpm install --save reactstrap \n```", "```go\nimport React from 'react';\n```", "```go\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\n```", "```go\nexport class BuyModalWindow extends React.Component{\n}\n```", "```go\nexport class BuyModalWindow extends React.Component{\n    render() {\n        return (\n         <Modal id=\"buy\" tabIndex=\"-1\" role=\"dialog\" isOpen={props.showModal} toggle={props.toggle}>\n            <div role=\"document\">\n                <ModalHeader toggle={props.toggle} className=\"bg-success text-white\">\n                    Buy Item\n                </ModalHeader>\n                <ModalBody>\n                      {/*Credit card form*/}\n                </ModalBody>\n            </div>\n        </Modal>\n        );\n    }\n}\n```", "```go\nexport function BuyModalWindow(props){\n  return (\n         <Modal id=\"buy\" tabIndex=\"-1\" role=\"dialog\" isOpen={props.showModal} toggle={props.toggle}>\n            <div role=\"document\">\n                <ModalHeader toggle={props.toggle} className=\"bg-success text-white\">\n                    Buy Item\n                </ModalHeader>\n                <ModalBody>\n                      {/*Credit card form*/}\n                </ModalBody>\n            </div>\n         </Modal>\n        );\n}\n```", "```go\nnpm install --save react-stripe-elements\n```", "```go\nimport React from 'react';\nimport { injectStripe, StripeProvider, Elements, CardElement } from 'react-stripe-elements';\n```", "```go\nclass CreditCardForm extends React.Component{\n    constructor(props){\n        super(props);\n    }\n}\n```", "```go\nconst INITIALSTATE = \"INITIAL\", SUCCESSSTATE = \"COMPLETE\", FAILEDSTATE = \"FAILED\";\nclass CreditCardForm extends React.Component{\n    constructor(props){\n        super(props);\n    }\n}\n```", "```go\nconst INITIALSTATE = \"INITIAL\", SUCCESSSTATE = \"COMPLETE\", FAILEDSTATE = \"FAILED\";\nclass CreditCardForm extends React.Component{\n    constructor(props){\n        super(props);\n    }\n    renderCreditCardInformation() {}\n    renderSuccess() {}\n    renderFailure(){}   \n}\n```", "```go\nconst INITIALSTATE = \"INITIAL\", SUCCESSSTATE = \"COMPLETE\", FAILEDSTATE = \"FAILED\";\nclass CreditCardForm extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            status: INITIALSTATE\n        };\n    }\n    renderCreditCardInformation() {}\n    renderSuccess() {}\n    renderFailure(){}   \n}\n```", "```go\nconst INITIALSTATE = \"INITIAL\", SUCCESSSTATE = \"COMPLETE\", FAILEDSTATE = \"FAILED\";\nclass CreditCardForm extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            status: INITIALSTATE\n        };\n    }\n    renderCreditCardInformation() {}\n    renderSuccess() {}\n    renderFailure(){}   \n\n    render() {\n        let body = null;\n        switch (this.state.status) {\n            case SUCCESSSTATE:\n                body = this.renderSuccess();\n                break;\n            case FAILEDSTATE:\n                body = this.renderFailure();\n                break;\n            default:\n                body = this.renderCreditCardInformation();\n        }\n\n        return (\n            <div>\n                {body}\n            </div>\n        );\n    }\n}\n```", "```go\nrenderCreditCardInformation() {\n        const usersavedcard = <div>\n            <div className=\"form-row text-center\">\n                <button type=\"button\" className=\"btn btn-outline-success text-center mx-auto\">Use saved card?</button>\n            </div>\n            <hr />\n        </div>\n\n        const remembercardcheck = <div className=\"form-row form-check text-center\">\n            <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"remembercardcheck\" />\n            <label className=\"form-check-label\" htmlFor=\"remembercardcheck\">\n                Remember Card?\n            </label>\n        </div>;\n        //return the view\n    }\n```", "```go\n<CardElement\\>\n```", "```go\nconst style = {\n     base: {\n         'fontSize': '20px',\n         'color': '#495057',\n         'fontFamily': 'apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif'\n     }\n };\n```", "```go\n<CardElement style={style}/>\n```", "```go\n<div>\n\n                <h5 className=\"mb-4\">Payment Info</h5>\n                <form>\n                    <div className=\"form-row\">\n                        <div className=\"col-lg-12 form-group\">\n                            <label htmlFor=\"cc-name\">Name On Card:</label>\n                            <input id=\"cc-name\" name='cc-name' className=\"form-control\" placeholder='Name on Card' onChange={this.handleInputChange} type='text' />\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"col-lg-12 form-group\">\n                            <label htmlFor=\"card\">Card Information:</label>\n                            <CardElement id=\"card\" className=\"form-control\" style={style} />\n                        </div>\n                    </div>\n\n                </form>\n</div>\n```", "```go\nhandleInputChange(event) {\n     this.setState({\n         value: event.target.value\n     });\n }\n```", "```go\nrenderCreditCardInformation(){\n      const style = {\n            base: {\n                'fontSize': '20px',\n                'color': '#495057',\n                'fontFamily': 'apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif'\n            }\n        };\n        const usersavedcard = <div>\n            <div className=\"form-row text-center\">\n                <button type=\"button\" className=\"btn btn-outline-success text-center mx-auto\">Use saved card?</button>\n            </div>\n            <hr />\n        </div>\n\n        const remembercardcheck = <div className=\"form-row form-check text-center\">\n            <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"remembercardcheck\" />\n            <label className=\"form-check-label\" htmlFor=\"remembercardcheck\">\n                Remember Card?\n            </label>\n        </div>;\n        return (\n            <div>\n                {usersavedcard}\n                <h5 className=\"mb-4\">Payment Info</h5>\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"form-row\">\n                        <div className=\"col-lg-12 form-group\">\n                            <label htmlFor=\"cc-name\">Name On Card:</label>\n                            <input id=\"cc-name\" name='cc-name' className=\"form-control\" placeholder='Name on Card' onChange={this.handleInputChange} type='text' />\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"col-lg-12 form-group\">\n                            <label htmlFor=\"card\">Card Information:</label>\n                            <CardElement id=\"card\" className=\"form-control\" style={style} />\n                        </div>\n                    </div>\n                    {remembercardcheck}\n                    <hr className=\"mb-4\" />\n                    <button type=\"submit\" className=\"btn btn-success btn-large\" >{this.props.operation}</button>\n                </form>\n            </div>\n        );  \n}\n```", "```go\nrenderSuccess(){\n        return (\n            <div>\n                <h5 className=\"mb-4 text-success\">Request Successfull....</h5>\n                <button type=\"submit\" className=\"btn btn-success btn-large\" onClick={() => { this.props.toggle() }}>Ok</button>\n            </div>\n        );\n}\n```", "```go\nrenderFailure(){\n        return (\n            <div>\n                <h5 className=\"mb-4 text-danger\"> Credit card information invalid, try again or exit</h5>\n                {this.renderCreditCardInformation()}\n            </div>\n        );\n}\n```", "```go\nasync handleSubmit(event){\n        event.preventDefault();\n        console.log(\"Handle submit called, with name: \" + this.state.value);\n        //retrieve the token via Stripe's API\n let { token } = await this.props.stripe.createToken({ name: this.state.value });\n        if (token == null) {\n            console.log(\"invalid token\");\n            this.setState({ status: FAILEDSTATE });\n            return;\n        }\n\n        let response = await fetch(\"/charge\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"text/plain\" },\n            body: JSON.stringify({\n                token: token.id,\n                operation: this.props.operation,\n            })\n        });\n        console.log(response.ok);\n        if (response.ok) {\n            console.log(\"Purchase Complete!\");\n            this.setState({ status: SUCCESSSTATE });\n        }\n}\n```", "```go\nlet { token } = await this.props.stripe.createToken({ name: this.state.value });\n```", "```go\nexport default function CreditCardInformation(props){\n    if (!props.show) {\n        return <div/>;\n    }\n   //inject our CreditCardForm component with stripe code in order to be able to make use of the createToken() method\n    const CCFormWithStripe = injectStripe(CreditCardForm);\n    return (\n        <div>\n            {/*stripe provider*/}\n            <StripeProvider apiKey=\"pk_test_LwL4RUtinpP3PXzYirX2jNfR\">\n                <Elements>\n                    {/*embed our credit card form*/}\n                    <CCFormWithStripe operation={props.operation} />\n                </Elements>\n            </StripeProvider>\n        </div>\n    );\n}\n```", "```go\nexport function BuyModalWindow(props) {\n    return (\n        <Modal id=\"buy\" tabIndex=\"-1\" role=\"dialog\" isOpen={props.showModal} toggle={props.toggle}>\n            <div role=\"document\">\n                    <ModalHeader toggle={props.toggle} className=\"bg-success text-white\">\n                        Buy Item\n                    </ModalHeader>\n                    <ModalBody>\n                            {/*Credit card form*/}\n                    </ModalBody>\n                </div>\n\n        </Modal>\n    );\n} \n```", "```go\nimport CreditCardInformation from './CreditCards';\n```", "```go\nexport function BuyModalWindow(props) {\n    return (\n        <Modal id=\"buy\" tabIndex=\"-1\" role=\"dialog\" isOpen={props.showModal} toggle={props.toggle}>\n            <div role=\"document\">\n                    <ModalHeader toggle={props.toggle} className=\"bg-success text-white\">\n                        Buy Item\n                    </ModalHeader>\n                    <ModalBody>\n <CreditCardInformation show={true} operation=\"Charge\" toggle={props.toggle} />\n                    </ModalBody>\n                </div>\n\n        </Modal>\n    );\n} \n\n```", "```go\nclass SignInForm extends React.Component{\n    constructor(){\n       super(props);\n    }\n}\n```", "```go\nclass SignInForm extends React.Component{\n    constructor(){\n       super(props);\n       this.state = {\n            errormessage = ''\n        };\n    }\n}\n```", "```go\nclass SignInForm extends React.Component{\n    constructor(){\n       super(props);\n       //this method will get called whenever a user input data into our form\n       this.handleChange = this.handleChange.bind(this);\n       //this method will get called whenever the HTML form gets submitted\n       this.handleSubmit = this.handleSubmit.bind(this);\n       this.state = {\n            errormessage = ''\n        };\n    }\n}\n```", "```go\nrender(){\n        //error message\n        let message = null;\n        //if the state contains an error message, show an error\n        if (this.state.errormessage.length !== 0) {\n            message = <h5 className=\"mb-4 text-danger\">{this.state.errormessage}</h5>;\n        }\n\n        return (\n            <div>\n                {message}\n                <form onSubmit={this.handleSubmit}>\n                    <h5 className=\"mb-4\">Basic Info</h5>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email:</label>\n                        <input name=\"email\" type=\"email\" className=\"form-control\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"pass\">Password:</label>\n                        <input name=\"password\" type=\"password\" className=\"form-control\" id=\"pass\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"form-row text-center\">\n                        <div className=\"col-12 mt-2\">\n                            <button type=\"submit\" className=\"btn btn-success btn-large\">Sign In</button>\n                        </div>\n                        <div className=\"col-12 mt-2\">\n                            <button type=\"submit\" className=\"btn btn-link text-info\" onClick={() => this.props.handleNewUser()}> New User? Register</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n```", "```go\nhandleChange(event){\n   const name = event.target.name;\n   const value = event.target.value;\n   this.setState({\n         [name]: value\n   });\n}\n```", "```go\nstate = {\n    'email': 'joe@email.com',\n    'password': 'pass'\n}\n```", "```go\nhandleSubmit(event){\n    event.preventDefault();\n    console.log(JSON.stringify(this.state));\n}\n```", "```go\nclass Registeration extends React.Component{\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.state = {\n            errormessage: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        event.preventDefault();\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        console.log(this.state);\n    }\n\n    render() {\n        let message = null;\n        if (this.state.errormessage.length !== 0) {\n            message = <h5 className=\"mb-4 text-danger\">{this.state.errormessage}</h5>;\n\n        }\n        return (\n            <div>\n                {message}\n                <form onSubmit={this.handleSubmit}>\n                    <h5 className=\"mb-4\">Registeration</h5>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"username\">User Name:</label>\n                        <input id=\"username\" name='username' className=\"form-control\" placeholder='John Doe' type='text' onChange={this.handleChange} />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email:</label>\n                        <input type=\"email\" name='email' className=\"form-control\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"pass\">Password:</label>\n                        <input type=\"password\" name='pass1' className=\"form-control\" id=\"pass1\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"pass\">Confirm password:</label>\n                        <input type=\"password\" name='pass2' className=\"form-control\" id=\"pass2\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"form-row text-center\">\n                        <div className=\"col-12 mt-2\">\n                            <button type=\"submit\" className=\"btn btn-success btn-large\">Register</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n```", "```go\nexport class SignInModalWindow extends React.Component{\n\n}\n```", "```go\nexport class SignInModalWindow extends React.Component{  \n constructor(props) {\n     super(props);\n     this.state = {\n     showRegistrationForm: false\n     };\n     this.handleNewUser = this.handleNewUser.bind(this);\n }\n```", "```go\nhandleNewUser() {\n     this.setState({\n         showRegistrationForm: true\n     });\n }\n```", "```go\nrender(){\n        let modalBody = <SignInForm handleNewUser={this.handleNewUser} />\n        if (this.state.showRegistrationForm === true) {\n            modalBody = <RegisterationForm />\n        }\n\n     return (\n            <Modal id=\"register\" tabIndex=\"-1\" role=\"dialog\" isOpen={this.props.showModal} toggle={this.props.toggle}>\n            <div role=\"document\">\n                <ModalHeader toggle={this.props.toggle} className=\"bg-success text-white\">\n                    Sign in\n                    {/*<button className=\"close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                     </button>*/}\n                </ModalHeader>\n                <ModalBody>\n                    {modalBody}\n                </ModalBody>\n            </div>\n        </Modal>\n        );\n    }\n}\n```", "```go\nimport React from 'react';\n```", "```go\nfunction Order(props){\n    return (\n        <div className=\"col-12\">\n            <div className=\"card text-center\">\n                <div className=\"card-header\"><h5>{props.productname}</h5></div>\n                <div className=\"card-body\">\n                    <div className=\"row\">\n                        <div className=\"mx-auto col-6\">\n                            <img src={props.img} alt={props.imgalt} className=\"img-thumbnail float-left\" />\n                        </div>\n                        <div className=\"col-6\">\n                            <p className=\"card-text\">{props.desc}</p>\n                            <div className=\"mt-4\">\n                                Price: <strong>{props.price}</strong>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"card-footer text-muted\">\n                    Purchased {props.days} days ago\n                </div>\n            </div>\n            <div className=\"mt-3\" />\n        </div>\n    );   \n}\n```", "```go\nexport default class OrderContainer extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            orders: []\n        };\n    }\n}\n```", "```go\nrender(){\n        return (\n            <div className=\"row mt-5\">\n                {this.state.orders.map(order => <Order key={order.id} {...order} />)}\n            </div>\n        );\n}\n```", "```go\nbuildLoggedInMenu(){\n        return (\n            <div className=\"navbar-brand order-1 text-white my-auto\">\n                <div className=\"btn-group\">\n                    <button type=\"button\" className=\"btn btn-success dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        Welcome {this.props.user.name}\n                    </button>\n                    <div className=\"dropdown-menu\">\n                        <a className=\"btn dropdown-item\" role=\"button\">Sign Out</a>\n                    </div>\n                </div>\n            </div>\n        );\n}\n```", "```go\nrender(){\n        return (\n            <div>\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-success fixed-top\">\n                    <div className=\"container\">\n                        {\n                           this.props.user.loggedin ?\n this.buildLoggedInMenu()\n : <button type=\"button\" className=\"navbar-brand order-1 btn btn-success\" onClick={() => { this.props.showModalWindow();}}>Sign in</button>\n                        }\n                        <div className=\"navbar-collapse\" id=\"navbarNavAltMarkup\">\n                            <div className=\"navbar-nav\">\n                                <NavLink className=\"nav-item nav-link\" to=\"/\">Home</NavLink>\n                                <NavLink className=\"nav-item nav-link\" to=\"/promos\">Promotions</NavLink>\n                                {this.props.user.loggedin ? <NavLink className=\"nav-item nav-link\" to=\"/myorders\">My Orders</NavLink> : null}\n                                <NavLink className=\"nav-item nav-link\" to=\"/about\">About</NavLink>\n                            </div>\n                        </div>\n                    </div>\n                </nav>\n            </div>\n        );\n    }\n}\n```", "```go\nimport React from 'react';\nimport CardContainer from './ProductCards';\nimport Nav from './Navigation';\nimport { SignInModalWindow, BuyModalWindow } from './modalwindows';\nimport About from './About';\nimport Orders from './orders';\n```", "```go\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n```", "```go\nclass App extends React.Component{\n\n}\n```", "```go\nclass App extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {\n        loggedin: false,\n        name: \"\"\n      }\n    };\n  }    \n}\n```", "```go\nrender(){\n    return (\n      <div>\n        <Router>\n          <div>\n            <Nav user={this.state.user} />\n            <div className='container pt-4 mt-4'>\n              <Route exact path=\"/\" render={() => <CardContainer location='cards.json' />} />\n <Route path=\"/promos\" render={() => <CardContainer location='promos.json' promo={true}/>} />\n {this.state.user.loggedin ? <Route path=\"/myorders\" render={()=><Orders location='user.json'/>}/> : null}\n <Route path=\"/about\" component={About} />\n            </div>\n            <SignInModalWindow />\n            <BuyModalWindow />\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n```", "```go\n<Route path=\"/promos\" render={() => <CardContainer location='promos.json' promo={true}/>} />\n```", "```go\n<Route path=\"/about\" component={About} />\n```", "```go\n<Router>\n\n<div>\n<Nav user={this.state.user} /> \n<div className='container pt-4 mt-4'>\n{/*other routes*/}\n<Route path=\"/about\" component={About} />\n</div>\n{/*rest of the App component*/}\n</div>\n</Router>\n```", "```go\n  showSignInModalWindow(){\n    const state = this.state;\n    const newState = Object.assign({},state,{showSignInModal:true});\n    this.setState(newState);\n  }\n\n  showBuyModalWindow(id,price){\n    const state = this.state;\n    const newState = Object.assign({},state,{showBuyModal:true,productid:id,price:price});\n    this.setState(newState);\n  }\n```", "```go\n  toggleSignInModalWindow() {\n    const state = this.state;\n    const newState = Object.assign({},state,{showSignInModal:!state.showSignInModal});\n    this.setState(newState);\n  }\n\n  toggleBuyModalWindow(){\n    const state = this.state;\n    const newState = Object.assign({},state,{showBuyModal:!state.showBuyModal});\n    this.setState(newState); \n  }\n```", "```go\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {\n        loggedin: false,\n        name: \"\"\n      }\n    };\n    this.showSignInModalWindow = this.showSignInModalWindow.bind(this);\n    this.toggleSignInModalWindow = this.toggleSignInModalWindow.bind(this);\n    this.showBuyModalWindow = this.showBuyModalWindow.bind(this);\n    this.toggleBuyModalWindow = this.toggleBuyModalWindow.bind(this);\n  }\n```", "```go\n render() {\n    return (\n      <div>\n        <Router>\n          <div>\n            <Nav user={this.state.user} showModalWindow={this.showSignInModalWindow}/>\n            <div className='container pt-4 mt-4'>\n              <Route exact path=\"/\" render={() => <CardContainer location='cards.json' showBuyModal={this.showBuyModalWindow} />} />\n              <Route path=\"/promos\" render={() => <CardContainer location='promos.json' promo={true} showBuyModal={this.showBuyModalWindow}/>} />\n              {this.state.user.loggedin ? <Route path=\"/myorders\" render={()=><Orders location='user.json'/>}/> : null}\n              <Route path=\"/about\" component={About} />\n            </div>\n            <SignInModalWindow showModal={this.state.showSignInModal} toggle={this.toggleSignInModalWindow}/>\n            <BuyModalWindow showModal={this.state.showBuyModal} toggle={this.toggleBuyModalWindow}  productid={this.state.productid} price={this.state.price}/>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n```", "```go\nexport default App;\n```", "```go\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n```"]