["```go\npackage main\nimport \"fmt\"\nfunc main(){\n  intSlice := []int{1,5,5,5,5,7,8,6,6, 6}\n  fmt.Println(intSlice)\n  uniqueIntSlice := unique(intSlice)\n  fmt.Println(uniqueIntSlice)\n}\nfunc unique(intSlice []int) []int{\n  keys := make(map[int]bool)\n  uniqueElements := []int{}\n  for _,entry := range intSlice {\n    if _, value := keys[entry]; !value{\n      keys[entry] =true\n      uniqueElements = append(uniqueElements, entry)\n    }\n  }\n  return uniqueElements\n}\n```", "```go\npackage main\nimport (\n \"fmt\"\n \"sort\"\n)\nfunc main() {\n str := []string{\"Sandy\",\"Provo\",\"St. George\",\"Salt Lake City\",\"Draper\",\"South Jordan\",\"Murray\"}\n for i,v := range str{\n if v == \"Sandy\" {\n fmt.Println(i)\n }\n }\n}\n```", "```go\npackage main\nimport (\n  \"fmt\"\n  \"sort\"\n)\nfunc main() {\n  str := []string{\"Sandy\",\"Provo\",\"St. George\",\"Salt Lake City\",\"Draper\",\"South Jordan\",\"Murray\"}\n  for i,v := range str{\n    if v == \"Sandy\" {\n      fmt.Println(i)\n    }\n  }\n  sortedList := sort.StringSlice(str)\n  sortedList.Sort()\n  fmt.Println(sortedList)\n}\n```", "```go\nindex := sortedList.Search(\"Sandy\")\nfmt.Println(index)\n```", "```go\npackage main\nimport (\n  \"sort\"\n  \"fmt\"\n)\nfunc main() {\n  numbers := []int{1, 5, 3, 6, 2, 10, 8}\n  tobeSorted := sort.IntSlice(numbers)\n  sort.Sort(tobeSorted)\n  fmt.Println(tobeSorted)\n}\n```", "```go\npackage main\nimport (\n  \"sort\"\n  \"fmt\"\n)\nfunc main() {\n  numbers := []int{1, 5, 3, 6, 2, 10, 8}\n  tobeSorted := sort.IntSlice(numbers)\n  sort.Sort(sort.Reverse(tobeSorted))\n  fmt.Println(tobeSorted)\n}\n```", "```go\npackage main\n\nimport \"fmt\"\n\nfunc main(){\n  numbers := []int{1, 5, 3, 6, 2, 10, 8}\n\n  for index,value := range numbers{\n     fmt.Printf(\"Index: %v and Value: %v\\n\", index, value)\n  }\n}\n```", "```go\npackage main\n\nimport \"fmt\"\n\nfunc main(){\n  numbers := []int{1, 5, 3, 6, 2, 10, 8}\n  for _,value := range numbers{\n    // fmt.Printf(\"Index: %v and Value: %v\\n\", index, value)\n    fmt.Println(value)\n  }\n}\n```", "```go\npackage main\nimport \"fmt\"\ntype NameAge struct{\n  Name string\n  Age int\n}\nfunc main(){\n  var nameAgeSlice []NameAge\n  nameAges := map[string]int{\n    \"Michael\": 30,\n    \"John\": 25,\n    \"Jessica\": 26,\n    \"Ali\": 18,\n  }\n  for key, value := range nameAges{\n    nameAgeSlice = append(nameAgeSlice, NameAge {key, value})\n  }\n\n  fmt.Println(nameAgeSlice)\n\n}\n```", "```go\npackage main\nimport \"fmt\"\nfunc main(){\n  items1 := []int{3,4}\n  items2 := []int{1,2}\n  result := append(items1, items2...)\n  fmt.Println(result)\n}\n```", "```go\npackage main\nimport \"fmt\"\nfunc main(){\n  map1 := map[string]int {\n   \"Michael\":10,\n   \"Jessica\":20,\n   \"Tarik\":33,\n   \"Jon\": 22,\n  }\n  fmt.Println(map1)\n\n  map2 := map[string]int {\n    \"Lord\":11,\n    \"Of\":22,\n    \"The\":36,\n    \"Rings\": 23,\n  }\n  for key, value := range map2{\n    map1[key] = value\n  }\n  fmt.Println(map1)\n}\n```", "```go\npackage main\nimport \"fmt\"\nfunc main() {\n  nameAges := map[string]int{\n    \"Tarik\": 32,\n    \"Michael\": 30,\n    \"Jon\": 25,\n  }\n\n  fmt.Println(nameAges[\"Tarik\"])\n}\n```", "```go\npackage main\nimport \"fmt\"\nfunc main() {\n  nameAges := map[string]int{\n    \"Tarik\": 32,\n    \"Michael\": 30,\n    \"Jon\": 25,\n  }\n\n  value, exists := nameAges[\"Tarik\"]\n  fmt.Println(value)\n  fmt.Println(exists)\n}\n```", "```go\npackage main\nimport \"fmt\"\nfunc main() {\n  nameAges := map[string]int{\n    \"Tarik\": 32,\n    \"Michael\": 30,\n    \"Jon\": 25,\n  }\n  if _, exists := nameAges[\"Jessica\"]; exists{\n    fmt.Println(\"Jessica has found\")\n  }else {\n    fmt.Println(\"Jessica cannot be found\")\n  }\n}\n```", "```go\npackage main\nimport \"fmt\"\nfunc main() {\n  nameAges := map[string]int{\n    \"Tarik\": 32,\n    \"Michael\": 30,\n    \"Jon\": 25,\n    \"Jessica\" : 20,\n  }\n  if _, exists := nameAges[\"Jessica\"]; exists{\n    fmt.Println(\"Jessica can be found\")\n  }else {\n    fmt.Println(\"Jessica cannot be found\")\n  }\n}\n```", "```go\npackage main\nimport \"fmt\"\nfunc main() {\n  nameAges := map[string]int{\n    \"Tarik\": 32,\n    \"Michael\": 30,\n    \"Jon\": 25,\n    \"Jessica\" : 20,\n  }\n  if value, exists := nameAges[\"Jessica\"]; exists{\n    fmt.Println(value)\n  }else {\n    fmt.Println(\"Jessica cannot be found\")\n  }\n}\n```"]