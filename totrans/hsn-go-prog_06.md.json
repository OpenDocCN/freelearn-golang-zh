["```go\npackage main\n\nimport \"fmt\"\n\ntype MyError struct{\n  ShortMessage string\n  DetailedMessage string\n  //Name string\n  //Age int\n}\n\nfunc (e *MyError) Error() string {\n  return e.ShortMessage + \"\\n\" +e.DetailedMessage\n\n}\n  func main(){\n    err:= doSomething()\n    fmt.Print(err)\n}\nfunc doSomething() error {\n  //Doing something here...\n  return &MyError{ShortMessage:\"Wohoo something happened!\", DetailedMessage:\"File cannot found!\"}\n}\n```", "```go\npackage main\n\nimport (\n  \"time\"\n  \"fmt\"\n)\n\nfunc main(){\n  parsedDate, err:= time.Parse(\"2006\", \"2018\")\n  if err != nil {\n    fmt.Println(\"An error occured\", err.Error())\n  }else{\n    fmt.Println(parsedDate)\n  }\n}\n```", "```go\npackage main\nimport (\n  \"fmt\"\n  \"errors\"\n)\nfunc main(){\n  _, err := doSomething()\n  if err != nil {\n    fmt.Println(err)\n  }\n}\nfunc doSomething() (string,error) {\n  return \"\", errors.New(\"Something happened.\")\n}\n```", "```go\npackage main\nimport (\n  \"os\"\n  \"fmt\"\n  \"log\"\n)\nfunc main(){\n  log_file, err := os.Create(\"log_file\")\n  if err != nil{\n    fmt.Println(\"An error occured...\")\n  }\n  defer log_file.Close()\n  log.SetOutput(log_file)\n\n  log.Println(\"Doing some logging here...\")\n  log.Fatalln(\"Fatal: Application crashed!\")\n}\n```", "```go\npackage main\nimport (\n  \"os\"\n  \"fmt\"\n  \"log\"\n)\nfunc main(){\n  log_file, err := os.Create(\"log_file\")\n  if err != nil{\n    fmt.Println(\"An error occured...\")\n  }\n  defer log_file.Close()\n  log.SetOutput(log_file)\n  log.Fatalln(\"Fatal: Application crashed!\")\n  log.Println(\"Doing some logging here...\")\n}\n```", "```go\npackage main\n\nimport \"fmt\"\n\nfunc main(){\n  sayHello()\n  fmt.Println(\"After the panic was recovered!\")\n}\n\nfunc sayHello(){\n  defer func(){\n    if r := recover(); r != nil {\n      fmt.Println(\"Recovered in f\", r)\n    }\n  }()\n  writeSomething()\n}\n\nfunc writeSomething(){\n  /// Doing something here..\n  panic(\"Write operation error\")\n}\n```"]