["```go\npackage main\nimport (\n  \"os\"\n  \"os/signal\"\n  \"syscall\"\n  \"fmt\"\n)\nfunc main(){\n  signals := make (chan os.Signal, 1)\n  done := make(chan bool)\n  signal.Notify(signals, syscall.SIGINT, syscall.SIGTERM)\n  go func (){\n    sig := <- signals\n    fmt.Println(sig)\n    fmt.Println(\"Signal captured and processed...\")\n    done <- true\n  }()\n  fmt.Println(\"Waiting for signal\")\n  <-done\n  fmt.Println(\"Exiting the application...\")\n}\n```", "```go\npackage main\n\nimport (\n  \"os/exec\"\n  \"fmt\"\n  )\n\nfunc main() {\n  lsCommand := exec.Command(\"ls\")\n  lsCommand.Start()\n  fmt.Println(lsCommand.Process.Pid)\n}\n```", "```go\npackage main\nimport (\n  \"os/exec\"\n  \"fmt\"\n)\nfunc main() {\n  lsCommand := exec.Command(\"ls\")\n  output,_ := lsCommand.Output()\n  lsCommand.Run()\n  fmt.Println(lsCommand.Process.Pid)\n  fmt.Println(string(output))\n}\n```", "```go\npackage main\nimport (\n  \"os\"\n  \"fmt\"\n)\n\nfunc main(){\n  realArgs := os.Args[1:]\n  fmt.Println(realArgs)\n}\n```", "```go\npackage main\nimport (\n  \"os\"\n  \"fmt\"\n)\nfunc main(){\n  realArgs := os.Args[1:]\n  if len(realArgs) == 0{\n    fmt.Println(\"Please pass an argument.\")\n    return\n  }\n  if realArgs[0] == \"a\"{\n    writeHelloWorld()\n  }else if realArgs[0] == \"b\"{\n    writeHelloMars()\n  }else{\n    fmt.Println(\"Please pass a valid argument.\")\n  }\n}\nfunc writeHelloWorld(){\n  fmt.Println(\"Hello, World\")\n}\nfunc writeHelloMars(){\n  fmt.Println(\"Hello, Mars\")\n}\n```"]