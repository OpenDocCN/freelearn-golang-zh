- en: 'Section 2: Toolkits Using Existing Widgets'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2节：使用现有小部件的工具包
- en: Let's look first at graphical app toolkits for Go that use existing widgets.
    These toolkits help you build applications that will match the operating system's
    look and feel, which is a great choice if you want to build an app that's immediately
    familiar to your users. This approach may have a downside, however, in the amount
    of testing and potential customization required for each platform you aim to support.
    The APIs we explore have different levels of abstraction and platform integration,
    so depending on your application's requirements, the effort required may vary.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们看看Go的图形应用工具包，这些工具包使用现有的小部件。这些工具包可以帮助你构建与操作系统外观和感觉相匹配的应用程序，如果你想要构建一个用户能立即熟悉的应用程序，这是一个很好的选择。然而，这种方法可能有一个缺点，那就是你需要为每个你想要支持的平台进行大量的测试和潜在的自定义。我们探索的API具有不同的抽象级别和平台集成度，因此，根据你的应用程序需求，所需的工作量可能会有所不同。
- en: This section covers three different approaches to creating GUIs that match the
    operating system. Firstly, we'll look at Walk, which is a Go API that's specifically
    for creating Windows applications. This is the most direct way to create the app
    you wish for the Microsoft Windows desktop, but it's not obviously portable to
    other platforms. After that, we'll switch to andlabs/ui, which is an abstraction
    for Windows, macOS, Linux, and other widget sets. The application built in that
    chapter will use native platform widgets while being portable to many platforms.
    After then, we'll look at themeable widget sets, which behave the same way across
    multiple platforms and load themes that match the native user interface. In this
    category, we'll set up applications using Go bindings for the GTK+ and Qt toolkits.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本节涵盖了三种创建与操作系统匹配的GUI的不同方法。首先，我们将看看Walk，这是一个专门用于创建Windows应用程序的Go API。这是创建Microsoft
    Windows桌面应用程序的最直接方式，但它显然不能轻易地移植到其他平台。之后，我们将切换到andlabs/ui，这是一个针对Windows、macOS、Linux和其他小部件集的抽象。该章节中构建的应用程序将使用本地平台小部件，同时可移植到许多平台。然后，我们将看看可主题化的小部件集，这些小部件集在多个平台上表现相同，并加载与本地用户界面相匹配的主题。在这个类别中，我们将使用GTK+和Qt工具包的Go绑定来设置应用程序。
- en: 'The following chapters will be covered in this section:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将涵盖以下章节：
- en: '[Chapter 4](3b8f1272-2158-4744-945f-3258b5c4f61c.xhtml), *Walk – Building Graphical
    Windows Applications*'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第4章](3b8f1272-2158-4744-945f-3258b5c4f61c.xhtml)，*Walk – 构建图形Windows应用程序*'
- en: '[Chapter 5](4b414e87-1c86-4d14-b88b-cb3e01c1fabe.xhtml), *andlabs UI – Cross-Platform
    Native UIs*'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第5章](4b414e87-1c86-4d14-b88b-cb3e01c1fabe.xhtml)，*andlabs UI – 跨平台原生UI*'
- en: '[Chapter 6](6becd530-0233-44fa-adbb-6a23a895d9e7.xhtml), *Go-GTK – Multiple
    Platforms with GTK*'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第6章](6becd530-0233-44fa-adbb-6a23a895d9e7.xhtml)，*Go-GTK – 使用GTK的多平台*'
- en: '[Chapter 7](68a93b63-2eb7-4c9b-89cf-caa2e29d1ee5.xhtml), *Go-Qt – Multiple
    Platforms with Qt*'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第7章](68a93b63-2eb7-4c9b-89cf-caa2e29d1ee5.xhtml), *Go-Qt – 使用Qt的多平台*'
- en: So let's dive right in and build our first application for Windows using the
    Walk API. If you are developing for a different operating system, then this chapter
    may be less relevant, so you can jump to [Chapter 5](4b414e87-1c86-4d14-b88b-cb3e01c1fabe.xhtml), *andlabs
    UI - Cross-Platform Native UIs, *where we move on to andlabs UI.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，让我们直接深入，使用Walk API构建我们的第一个Windows应用程序。如果你正在为不同的操作系统开发，那么这一章可能不太相关，你可以跳转到[第5章](4b414e87-1c86-4d14-b88b-cb3e01c1fabe.xhtml)，*andlabs
    UI - 跨平台原生UI*，我们将继续使用andlabs UI。
