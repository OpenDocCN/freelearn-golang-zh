- en: Comparison of GUI Toolkits
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this book, we explored seven popular GUI toolkits for the Go language. It''s
    recommended to read each chapter and understand the benefits and potential drawbacks
    of each toolkit before making a decision on which to use in a project. For a quick
    reference, the following table should help to short-list options based on a number
    of important factors:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Name** | **License** | **Multiple** **Platforms** | **Active** | **Themes**
    | **Native** **widgets** | **Idiomatic** | **Cross compiling** | **Richness**
    |'
  prefs: []
  type: TYPE_TB
- en: '| Walk | BSD | ✔ | ✔ | ✘ | ✔ | ✔ | ✘ | **↑** |'
  prefs: []
  type: TYPE_TB
- en: '| andlabs UI | MIT | ✔ | ✔ | ✘ | ✔ | **!**¹ | ✔ | **-** |'
  prefs: []
  type: TYPE_TB
- en: '| Go-GTK | LGPL² | ✔ | ✔ | ✔ | **!**³ | ✘ | **!**⁴ | **↑** |'
  prefs: []
  type: TYPE_TB
- en: '| qt | LGPL | ✔ | ✔ | ✔ | **!**³ | ✘ | ✔⁵ | **↑** |'
  prefs: []
  type: TYPE_TB
- en: '| Shiny | BSD | ✔ | ✘ | **!**⁶ | ✘ | ✔ | ✔ | **↓** |'
  prefs: []
  type: TYPE_TB
- en: '| nk | MIT | ✔ | ✔ | **!**⁶ | ✘ | ✘ | ✔ | **-** |'
  prefs: []
  type: TYPE_TB
- en: '| Fyne | BSD | ✔ | ✔ | **!**⁶ | ✘ | ✔ | ✔ | **↓** |'
  prefs: []
  type: TYPE_TB
- en: ¹ The top, declarative, layer of the andlabs UI is designed for Go development;
    however, it exposes C idioms from the lower-level library.
  prefs: []
  type: TYPE_NORMAL
- en: ² The `go-GTK` library is available in multiple licenses, but the inclusion
    of the GTK+ widgets requires LGPL.
  prefs: []
  type: TYPE_NORMAL
- en: ³ Using theming capabilities, a native-looking user interface can be obtained.
  prefs: []
  type: TYPE_NORMAL
- en: ⁴ Cross compiling should be possible, but it requires many libraries to be compiled
    for each target system.
  prefs: []
  type: TYPE_NORMAL
- en: ⁵ The supported way to cross compile is through the use of containers rather
    than directly on the development computer.
  prefs: []
  type: TYPE_NORMAL
- en: ⁶ Themes can be set from code but there's no collection of user installable
    themes.
  prefs: []
  type: TYPE_NORMAL
- en: 'The preceding table should help with the choice of which GUI technology to
    use. There''s no single best option and selection should be made based on your
    most important criteria. Clarification of each heading is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**License:** Every toolkit is available under an open source license that allows
    for open or closed source and commercial usage. However, as a statically compiled
    language, there are complications when using the LGPL. If statically linking with
    an LGPL project, your code should either be distributed under the same license
    or you''ll need to provide an alternative compiled output without the library
    statically linked. The easiest option in this case may be to leave the toolkit
    as a dynamically compiled library that the user would have to install before your
    application can function. Some of the toolkits are available under a separate
    commercial license that can be paid for to avoid licensing complications.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Multiple Platforms:** A tick mark represents the toolkit supporting at least
    Linux, macOS, and Windows. Some of the options provide support for many more platforms.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Active:** Is the project actively maintained? An active project doesn''t
    guarantee the availability of commercial support.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Themes:** A tick mark represents user installable themes that can customize
    application appearance. Some toolkits support setting a theme using code that
    allows application developers to change the look and feel.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Native Widgets:** Does the framework use native system widgets? A tick means
    that applications will utilize the system widgets. Some toolkits make it possible
    to look like the system widgets by installing a special theme.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Idiomatic:** Is the toolkit built to fit with the Go language idioms? This
    may not be important to every project, but it can improve the speed of development
    and ease of maintenance. It can also be easier to debug applications that use
    an idiomatic toolkit.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Cross compiling:** Cross compilation is usually important for Go applications.
    Not all toolkits support this completely due to the complexity of working with
    low level graphics libraries.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Richness:** This is a measure of how complete the selection of widgets is.
    An up arrow indicates that you could build a complete application using the provided
    features. A bar (neither up nor down) shows that most applications should be possible
    but that it may be necessary to construct complex widgets using the available
    components. A down arrow shows a minimal widget set—simple or medium complexity applications
    are possible but many widgets would need to be built from the basic components
    provided.'
  prefs: []
  type: TYPE_NORMAL
