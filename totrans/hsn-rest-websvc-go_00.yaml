- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: My association with this book has been a memorable journey. Three years back,
    when Packt contacted me to write a book for them, I was not sure that would be
    something I would be able to achieve in the first place. But, with support from
    my family, friends, and a few great mentors at work, I have successfully made
    it. I always have a habit of explaining things, and I wanted to turn that into
    a more significant form – a book. That desire ended up evolving into a book called
    *Building RESTful Web Services with Go* in 2017\. Looking back, it was not a bad
    idea at all.
  prefs: []
  type: TYPE_NORMAL
- en: I am an open source blogger apart from my full-time software development job.
    What I write about is what I learn at work. Every month, I work on many features,
    fix many bugs, and review many merge requests. I convert all that experience into
    articles. This book is a valuable collection of many of those experiences. You
    could ask me what provoked me to write this book? It is the burning desire to
    share things I know. Software engineering is a hard skill, and it has always been
    a practical discipline, unlike academic studies. That drove me to write *Hands-On
    RESTful Web Services with Go*, which is a supercharged sequel to my first book.
  prefs: []
  type: TYPE_NORMAL
- en: In this age of information technology, products talk with each other using **Application
    Programming Interfaces** (**APIs**). In the last decade, the rise of a new generation
    of web languages, such as Python, JavaScript (Node.js), and Go, has shown a different
    approach to web development compared to traditional ones, such as ASP.NET and
    Java's Spring. In particular, the Go programming language hits the sweet spot
    of the enterprise versus prototype landscape. We can compare Go simultaneously
    to what "*Python is to prototyping*" and what "*Java is to the enterprise*." Some
    of the best open source tools, such as Docker, Terraform, and Kubernetes, are
    written in Go. Google uses it heavily for its internal services. You can see a
    list of Go-using companies at [https://github.com/golang/go/wiki/GoUsers](https://github.com/golang/go/wiki/GoUsers).
  prefs: []
  type: TYPE_NORMAL
- en: With less verbose code, strict type checking, and support for concurrency, Go
    is a better language to write modern web servers. An intermediate Go developer
    can benefit a lot by knowing how to create RESTful services using Go. This book
    is an attempt to make the reader comfortable with web services development. Remember,
    it is a hands-on guide.
  prefs: []
  type: TYPE_NORMAL
- en: Industry experts are suggesting that, shortly, Python may move further into
    the data science domain, which could create a vacuum in the web development domain.
    Go has all the qualifications to fill that space. The paradigm shift from monoliths
    to microservices, and the need for robust API interfaces, may place Go high above
    interpreted languages.
  prefs: []
  type: TYPE_NORMAL
- en: Even though this book is not a cookbook, it offers many tips and tricks throughout
    your journey as a reader. This book is for software developers and web developers
    who want to develop RESTful web services and APIs using Go. It will also assist
    Python and Node.js developers who are interested in learning web development with
    Go.
  prefs: []
  type: TYPE_NORMAL
- en: I hope you enjoy this book, and that it helps take your career to the next level!
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is for any Go developers who are comfortable with the language and
    seeking to learn REST API development. Even senior engineers will enjoy this book,
    as it discusses many cutting-edge concepts, such as building microservices, developing
    APIs with GraphQL, using protocol buffers, asynchronous API design, and infrastructure
    as code.
  prefs: []
  type: TYPE_NORMAL
- en: Developers who are already familiar with REST concepts and stepping into the
    Go world from other platforms, such as Python and Ruby, will also benefit a lot
    from reading this book.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](eb93f11e-bb80-40dc-873c-e350560467db.xhtml), *Getting Started with
    REST API Development*, discusses the fundamentals of REST architecture and verbs.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](72226cd9-cd86-497f-ba6c-4a273e0e3193.xhtml), *Handling Routing
    for our REST Services*, describes how to define basic routes and handler functions
    for a REST API.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](ab89bca5-b60d-4681-bc36-23ee51a56cc6.xhtml), *Working with Middleware
    and RPC*, covers working with middleware handlers and basic RPC.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](08db4c3a-536c-4f0c-bedc-fcb802c3306a.xhtml), *Simplifying RESTful
    Services with Popular Go Frameworks*, presents quick prototyping of a REST API
    with a few open source frameworks.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](1504324b-69e1-45e4-b038-aaad02f1587a.xhtml), *Working with MongoDB
    and Go to Create a REST API*, explains how to use MongoDB as a storage backend
    for a REST API.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](613be150-a44b-4840-8fe5-9b41f53f3244.xhtml), *Working with Protocol
    Buffers and gRPC*, shows how to use protocol buffers and gRPC over HTTP/JSON to
    obtain a performance boost.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](ebae04a2-f98e-4735-96a0-3e126f2b7f7e.xhtml), *Working with PostgreSQL,
    JSON, and Go*, explains how to use PostgreSQL as a storage backend and leverage
    JSON stores to create REST APIs.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](ceb99616-b12b-4ec0-9bd4-aedc74933273.xhtml), *Building a REST API
    Client in Go*, presents techniques for building client software and API testing
    tools.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](4c4f37a7-48db-4168-a228-4c684a4ebd3c.xhtml), *Asynchronous API
    Design*, presents techniques for scaling APIs by leveraging asynchronous design
    patterns.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](f3dd906b-0446-4b33-a47a-cd2493804fb2.xhtml), *GraphQL and Go*,
    discusses a different API query language in contrast to REST.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](b5dafb13-8906-4c1a-b780-7f0356f95d61.xhtml), *Scaling our REST
    API Using Microservices*, covers building microservices using Go Micro.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 12](da5ccac6-f448-4cf5-bb81-5d3839d2240c.xhtml), *Containerizing REST
    Services for Deployment*, shows how to prepare a containerized ecosystem for API
    deployment.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 13](a1c16a02-dcf0-424e-a5e8-1d8ea43b38bf.xhtml), *Deploying REST Services
    on Amazon Web Services*, shows how to deploy a containerized ecosystem to AWS
    Cloud using infrastructure as code.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 14](38de72bd-6991-4db5-84c0-95403bc5b483.xhtml), *Handling Authentication
    for our REST Services,* discusses securing an API with simple authentication and
    **JSON Web Tokens** (**JWT**).'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For this book, you need a laptop/PC with Linux (Ubuntu 18.04), macOS X >=10.13,
    or Windows installed. We will use Go 1.13.x as the version of our compiler and
    will install many third-party packages, so a working internet connection is required.
  prefs: []
  type: TYPE_NORMAL
- en: We will also use Docker in the final chapters to explain the concepts of API
    Gateway. Docker's latest stable version is recommended. If Windows users have
    problems with the native Go installation or using CURL for any examples, use Docker
    Desktop for Windows and run an Ubuntu container to test your code samples; refer
    to [https://www.docker.com/docker-windows](https://www.docker.com/docker-windows) for
    more details.
  prefs: []
  type: TYPE_NORMAL
- en: Before diving into the book, refresh your language basics at [https://tour.golang.org/welcome/1](https://tour.golang.org/welcome/1).
  prefs: []
  type: TYPE_NORMAL
- en: Even though these are the basic requirements, we will guide you through the
    installations whenever required.
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packt.com](http://www.packt.com/).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](https://www.packtpub.com/support) and
    register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packt.com](http://www.packt.com/).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the Support tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at **[https://github.com/PacktPublishing/Hands-On-Restful-Web-services-with-Go](https://github.com/PacktPublishing/Hands-On-Restful-Web-services-with-Go)**. In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Download the color images
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [https://static.packt-cdn.com/downloads/9781838643577_ColorImages.pdf](https://static.packt-cdn.com/downloads/9781838643577_ColorImages.pdf).
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles. Here
    is an example: "Name the preceding program `basicHandler.go`."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "It returns a message saying Logged In successfully."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: If you have questions about any aspect of this book, mention
    the book title in the subject of your message and email us at `customercare@packtpub.com`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](https://www.packtpub.com/support/errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the Internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at `copyright@packt.com` with a link
    to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com/).'
  prefs: []
  type: TYPE_NORMAL
- en: Reviews
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  prefs: []
  type: TYPE_NORMAL
- en: For more information about Packt, please visit [packt.com](http://www.packt.com/).
  prefs: []
  type: TYPE_NORMAL
