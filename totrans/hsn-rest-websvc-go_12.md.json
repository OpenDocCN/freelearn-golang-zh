["```go\n> sudo apt-get update\n> sudo apt-get install nginx\n```", "```go\n> brew install nginx\n```", "```go\n> sudo vi /usr/local/etc/nginx/nginx.conf\n```", "```go\n> sudo vi /etc/nginx/nginx.conf\n```", "```go\nserver {\n        listen 80; # Nginx listen port\n        server_name localhost;\n        #charset koi8-r;\n        #access_log logs/host.access.log main;\n        location / {\n            root html;\n            index index.html index.htm;\n        }\n\n        ... \n}\n```", "```go\n> service nginx status\n```", "```go\n> docker run --name nginxServer -d -p 80:80 nginx\n```", "```go\n> docker run --name nginxServer -d -p 80:80 --mount source=/host/path/nginx.conf,destination=/etc/nginx/nginx.conf:readonly nginx\n```", "```go\n/etc/nginx/sites-available\n```", "```go\n/usr/local/etc/nginx/sites-available\n```", "```go\n> mkdir -p $GOPATH/src/github.com/git-user/chapter12/bookServer\ntouch $GOPATH/src/github.com/git-user/chapter12/bookServer/main.go\n```", "```go\npackage main\n\nimport (\n    \"encoding/json\"\n    \"fmt\"\n    \"log\"\n    \"net/http\"\n    \"os\"\n    \"time\"\n)\n```", "```go\n// Book holds data of a book\ntype Book struct {\n    ID            int\n    ISBN          string\n    Author        string\n    PublishedYear string\n}\n```", "```go\nfunc main() {\n    // File open for reading, writing and appending\n    f, err := os.OpenFile(\"app.log\",\n     os.O_RDWR|os.O_CREATE|os.O_APPEND, 0666)\n    if err != nil {\n        fmt.Printf(\"error opening file: %v\", err)\n    }\n    defer f.Close()\n    // This attaches program logs to file\n    log.SetOutput(f)\n    // further code goes here...\n}\n```", "```go\n    // Function handler for handling requests\n    http.HandleFunc(\"/api/books\", func(w http.ResponseWriter,\n    r *http.Request) {\n        log.Printf(\"%q\", r.UserAgent())\n        // Fill the book details\n        book := Book{\n            ID:            123,\n            ISBN:          \"0-201-03801-3\",\n            Author:        \"Donald Knuth\",\n            PublishedYear: \"1968\",\n        }\n        // Convert struct to JSON using Marshal\n        jsonData, _ := json.Marshal(book)\n        w.Header().Set(\"Content-Type\", \"application/json\")\n        w.Write(jsonData)\n    })\n```", "```go\n    s := &http.Server{\n        Addr:           \":8000\",\n        ReadTimeout:    10 * time.Second,\n        WriteTimeout:   10 * time.Second,\n        MaxHeaderBytes: 1 << 20,\n    }\n\n    log.Fatal(s.ListenAndServe())\n```", "```go\n> go run $GOPATH/src/github.com/git-user/chapter12/bookServer/\nmain.go\n```", "```go\n> curl -X GET \"http://localhost:8000/api/books\"\n```", "```go\n{\n  \"ID\":123,\n  \"ISBN\":\"0-201-03801-3\",\n  \"Author\":\"Donald Knuth\",\n  \"PublishedYear\":\"1968\"\n}\n```", "```go\n> vi /etc/nginx/sites-available/default\n```", "```go\nserver {\n        listen 80 default_server;\n        listen [::]:80 default_server ipv6only=on;\n\n location / {\n                proxy_pass http://127.0.0.1:8000;\n        }\n}\n```", "```go\nhttp://example.com:8000\n```", "```go\n> service nginx restart\n```", "```go\n> curl -X GET \"http://localhost\"\n{\n  \"ID\":123,\n  \"ISBN\":\"0-201-03801-3\",\n  \"Author\":\"Donald Knuth\",\n  \"PublishedYear\":\"1968\"\n}\n```", "```go\nserver {\n    listen ...;\n    ...\n    location / {\n        proxy_pass http://127.0.0.1:8000;\n    }\n\n    location /api {\n        proxy_pass http://127.0.0.1:8001;\n    }\n    location /mail {\n        proxy_pass http://127.0.0.1:8002;\n    }\n    ...\n}\n```", "```go\nhttp://localhost/\nhttp://localhost/api/\nhttp://localhost/mail/\n```", "```go\nhttp {\n    upstream cluster {\n        server site1.mysite.com weight=5;\n        server site2.mysite.com weight=2;\n        server backup.mysite.com backup;\n    }\n}\n```", "```go\nserver {\n    location / {\n        proxy_pass http://cluster;\n    }\n}\n```", "```go\nhttp {\n    upstream cluster {\n        least_conn;\n        server site1.mysite.com weight=5;\n        server site2.mysite.com;\n        server backup.mysite.com backup;\n    }\n}\n\nserver {\n    location / {\n        proxy_pass http://cluster;\n    }\n}\n```", "```go\nlimit_conn_zone client_type zone=zone_type:size;\n```", "```go\nhttp {\n    limit_conn_zone $server_name zone=servers:10m;\n}\n```", "```go\nserver {\n   limit_conn servers 1000;\n}\n```", "```go\nserver {\n  location /api {\n      limit_conn addr 1;\n  }\n}\n```", "```go\nserver {\n  location /download {\n      limit_conn addr 10;\n      limit_rate 50k;\n  }\n}\n```", "```go\nlocation /api {\n    ...\n    deny 192.168.1.2;\n    allow 192.168.1.1/24;\n    allow 127.0.0.1;\n    deny all;\n}\n```", "```go\nserver {\n    listen 80 default_server;\n    root /usr/share/nginx/html;\n\n    location /api {\n\n        deny 192.168.1.2;\n        allow 192.168.1.1/24;\n        allow 127.0.0.1;\n        deny all;\n    }\n}\n```", "```go\n> sudo pip install supervisor\n```", "```go\n> sudo apt-get install -y supervisor\n```", "```go\n> go install $GOPATH/src/github.com/git-user/chapter12/bookServer/main.go\n```", "```go\n/etc/supervisor/conf.d/supervisord.conf\n```", "```go\n[supervisord]\nlogfile = /tmp/supervisord.log\n[program:myserver]\ncommand=/root/workspace/bin/bookServer\nautostart=true\nautorestart=true\nredirect_stderr=tru\n```", "```go\n> supervisorctl reread\n> supervisorctl update\n```", "```go\n> supervisorctl\n```", "```go\n> kill 6886\n```", "```go\n> supervisorctl> stop myserver\n> supervisorctl> start myserver\n```", "```go\n> sudo pip install docker-compose\n```", "```go\n> mkdir -p $GOPATH/src/github.com/git-user/chapter12/deploySetup mkdir $GOPATH/src/github.com/git-user/chapter12/deploySetup/nginx-conf\n```", "```go\n> cp -r $GOPATH/src/github.com/git-user/chapter12/bookServer $GOPATH/src/github.com/git-user/chapter12/deploySetup\n```", "```go\n> touch $GOPATH/src/github.com/git-user/chapter12/deploySetup/\nbookServer/Dockerfile\n```", "```go\nFROM alpine\nWORKDIR /go/bin/\nCOPY app .\nCMD [\"./app\"]\n```", "```go\n> touch $GOPATH/src/github.com/git-user/chapter12/deploySetup/Makefile\n```", "```go\nPROJECT_NAME=bookServer\nBINARY_NAME=app\nGOCMD=go\nGOBUILD=$(GOCMD) build\n\nbuild:\n    $(info Building the book server binary...)\n cd ${PROJECT_NAME} && GOOS=linux GOARCH=arm ${GOBUILD} \n     -o \"$(BINARY_NAME)\" -v\n```", "```go\n> make build\nBuilding the book server binary...\ncd bookServer && GOOS=linux GOARCH=arm go build -o \"app\" -v\n```", "```go\n# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)\nversion: '3'\n\nservices:\n # App Service\n app:\n build:\n context: ./bookServer\n dockerfile: Dockerfile\n expose:\n - 8000\n restart: unless-stopped\n networks:\n - app-network\n\n # Nginx Service \n nginx:\n image: nginx:alpine\n restart: unless-stopped\n ports:\n - \"80:80\"\n - \"443:443\"\n volumes:\n - ./nginx-conf:/etc/nginx/conf.d\n depends_on: \n - app\n networks:\n - app-network\n\nnetworks:\n app-network:\n driver: bridge\n```", "```go\n> touch $GOPATH/src/github.com/git-user/chapter12/deploySetup/nginx-conf/nginx.conf\n```", "```go\nupstream service {\n  server app:8000;\n}\n\nserver {\n        listen 80 default_server;\n        listen [::]:80 default_server;\n\n        location / {\n                proxy_pass http://service;\n        }\n}\n```", "```go\n> docker-compose up --build\n```", "```go\nPROJECT_NAME=bookServer\nBINARY_NAME=app\nGOCMD=go\nGOBUILD=$(GOCMD) build\n\nall:\n make build && make deploy\n\nbuild:\n $(info Building the book server binary...)\n cd ${PROJECT_NAME} && GOOS=linux GOARCH=arm ${GOBUILD}\n     -o \"$(BINARY_NAME)\" -v\n\ndeploy:\n docker-compose rm -f\n docker-compose up --build\n```", "```go\n> make all\n```", "```go\n> make\n\nmake build && make deploy\nBuilding the book server binary...\ncd bookServer && CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o \"app\" -v\ndocker-compose rm -f\nNo stopped containers\ndocker-compose up --build\nBuilding app\nStep 1/4 : FROM alpine\n ---> c85b8f829d1f\nStep 2/4 : WORKDIR /go/bin/\n ---> Using cache\n ---> cc95562482f0\nStep 3/4 : COPY app .\n ---> Using cache\n ---> 865952cdc77a\nStep 4/4 : CMD [\"./app\"]\n ---> Using cache\n ---> 18d0f4ec074f\nSuccessfully built 18d0f4ec074f\nSuccessfully tagged deploysetup_app:latest\nCreating deploysetup_app_1 ... done\nCreating deploysetup_nginx_1 ... done\nAttaching to deploysetup_app_1, deploysetup_nginx_1\n```", "```go\n> docker ps\nCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\n5f78ea862376 nginx:alpine \"nginx -g 'daemon of…\" About a minute ago Up About a minute 0.0.0.0:80->80/tcp, 0.0.0.0:443->443/tcp deploysetup_nginx_1\n44973a15783a deploysetup_app \"/usr/bin/supervisor…\" About a minute ago Up About a minute 8000/tcp deploysetup_app_1\n```", "```go\n> curl -X GET \"http://localhost/api/books\"\n\n{\"ID\":123,\"ISBN\":\"0-201-03801-3\",\"Author\":\"Donald Knuth\",\"PublishedYear\":\"1968\"}\n```", "```go\n> docker-compose up --build -d\n```"]