["```go\n[default]\naws_access_key_id=YOUR_ACCESS_KEY_ID\naws_secret_access_key=YOUR_SECRET_KEY\n```", "```go\n[default]\nregion=eu-central-1\noutput=json\n```", "```go\nterraform version\nTerraform v0.12.18\n```", "```go\nmkdir -p $GOPATH/src/github.com/git-user/chapter13/intro\n```", "```go\ntouch $GOPATH/src/github.com/git-user/chapter13/intro/api_server.tf\n```", "```go\n<BLOCK TYPE> \"<BLOCK LABEL>\" \"<BLOCK LABEL>\" {\n  # Block body\n  <IDENTIFIER> = <EXPRESSION> # Argument\n}\n```", "```go\nprovider \"aws\" {\n  profile    = \"default\"\n  region     = \"eu-central-1\"\n\n}\n\nresource \"aws_instance\" \"api_server\" {\n  ami           = \"ami-03818140b4ac9ae2b\"\n  instance_type = \"t2.micro\"\n}\n```", "```go\nterraform apply\n```", "```go\nDo you want to perform these actions?\n  Terraform will perform the actions described above.\n  Only 'yes' will be accepted to approve.\n\n  Enter a value: yes\n\naws_instance.api_server: Creating...\naws_instance.api_server: Still creating... [10s elapsed]\naws_instance.api_server: Still creating... [20s elapsed]\naws_instance.api_server: Creation complete after 24s [id=i-07a023fc92b73fc06]\n```", "```go\nssh-keygen -t rsa -b 4096\n```", "```go\nresource \"aws_key_pair\" \"api_server_key\" {\n  key_name   = \"api-server-key\"\n  public_key = \"ssh-rsa ABCD...XYZ naren@Narens-MacBook-Air.local\"\n}\n```", "```go\nresource \"aws_instance\" \"api_server\" {\n  ...\n  key_name      = aws_key_pair.api_server_key.key_name\n}\n```", "```go\nterraform plan\nRefreshing Terraform state in-memory prior to plan...\nThe refreshed state will be used to calculate this plan,\nbut will not be persisted to local or remote state storage.\n\naws_instance.api_server: Refreshing state... [id=i-07a023fc92b73fc06]\n\n------------------------------------------------------------------------\n\nAn execution plan has been generated and is shown below.\nResource actions are indicated with the following symbols:\n + create\n\nTerraform will perform the following actions:\n\n # aws_instance.api_server must be replaced\n-/+ resource \"aws_instance\" \"api_server\" {\n ...\n + key_name = \"api-server-key\" # forces replacement\n ...\n}\n\n # aws_key_pair.api_server_key will be created\n```", "```go\nterraform apply\n...\naws_key_pair.api_server_key: Creating...\naws_key_pair.api_server_key: Creation complete after 1s [id=api-server-key]\naws_instance.api_server: Destroying... [id=i-07a023fc92b73fc06]\naws_instance.api_server: Still destroying... [id=i-07a023fc92b73fc06, 30s elapsed]\naws_instance.api_server: Destruction complete after 30s\naws_instance.api_server: Creating...\naws_instance.api_server: Still creating... [30s elapsed]\naws_instance.api_server: Creation complete after 33s [id=i-050d7ec98b4d6a814]\n```", "```go\nssh ubuntu@ec2-52-59-192-138.eu-central-1.compute.amazonaws.com\n\nWelcome to Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-1052-aws x86_64)\n ....\n\n52 packages can be updated.\n0 updates are security updates.\n```", "```go\nsudo snap install go --classic\nsudo snap install docker\n```", "```go\nsudo pip install docker-compose\n```", "```go\nscp -r $GOPATH/src/github.com/git-user/chapter12/deploySetup ubuntu@ec2-52-59-192-138.eu-central-1.compute.amazonaws.com:/home/ubuntu\n```", "```go\nsudo make\n```", "```go\nCreating deploysetup_app_1 ... done\nCreating deploysetup_nginx_1 ... done\n```", "```go\nsudo docker ps\n\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                                      NAMES\na016732f8174        nginx:alpine        \"nginx -g 'daemon of…\"   2 minutes ago       Up 2 minutes        0.0.0.0:80->80/tcp, 0.0.0.0:443->443/tcp   deploysetup_nginx_1\n29b75b09082d        deploysetup_app     \"/usr/bin/supervisor…\"   2 minutes ago       Up 2 minutes        8000/tcp                                   deploysetup_app_1\n```", "```go\ncurl http://52.59.192.138/api/books\n\n{\"ID\":123,\"ISBN\":\"0-201-03801-3\",\"Author\":\"Donald Knuth\",\"PublishedYear\":\"1968\"}\n```", "```go\ntouch $GOPATH/src/github.com/git-user/chapter13/intro/api_gateway.tf\n```", "```go\n// New API on Amazon API Gateway\nresource \"aws_api_gateway_rest_api\" \"test\" {\n  name        = \"EC2Example\"\n  description = \"Terraform EC2 REST API Example\"\n  endpoint_configuration {\n    types = [\"REGIONAL\"]\n  }\n}\n```", "```go\n// Method request configuration\nresource \"aws_api_gateway_method\" \"test\" {\n   rest_api_id   = aws_api_gateway_rest_api.test.id\n   resource_id   = aws_api_gateway_rest_api.test.root_resource_id\n   http_method   = \"GET\"\n\n   authorization = \"NONE\"\n }\n```", "```go\n// Method response configuration\nresource \"aws_api_gateway_method_response\" \"test\" {\n  rest_api_id = aws_api_gateway_rest_api.test.id\n  resource_id = aws_api_gateway_rest_api.test.root_resource_id\n  http_method = aws_api_gateway_method.test.http_method\n\n  status_code = \"200\"\n}\n```", "```go\n// Integration response configuration\nresource \"aws_api_gateway_integration_response\" \"MyDemoIntegrationResponse\" {\n  rest_api_id = aws_api_gateway_rest_api.test.id\n  resource_id = aws_api_gateway_rest_api.test.root_resource_id\n  http_method = aws_api_gateway_method.test.http_method\n\n  status_code = aws_api_gateway_method_response.test.status_code\n}\n```", "```go\n// Integration request configuration\nresource \"aws_api_gateway_integration\" \"test\" {\n   rest_api_id = aws_api_gateway_rest_api.test.id\n   resource_id = aws_api_gateway_method.test.resource_id\n   http_method = aws_api_gateway_method.test.http_method\n\n   integration_http_method = \"GET\"\n   type                    = \"HTTP\"\n   uri                     = \"http://${aws_instance.api_server.public_dns}/api/books\"\n\n}\n```", "```go\n// Deploy API on Gateway with test environment\nresource \"aws_api_gateway_deployment\" \"test\" {\n   depends_on = [\n     aws_api_gateway_integration.test\n   ]\n\n   rest_api_id = aws_api_gateway_rest_api.test.id\n   stage_name  = \"test\"\n }\n```", "```go\nterraform apply -auto-approve\n\naws_key_pair.api_server_key: Refreshing state... [id=api-server-key]\naws_instance.api_server: Refreshing state... [id=i-050d7ec98b4d6a814]\naws_api_gateway_rest_api.test: Creating...\naws_api_gateway_method.test: Creating...\naws_api_gateway_method.test: Creation complete after 1s [id=agm-kvp9kg9jv6-hognbzcre0-GET]\naws_api_gateway_method_response.test: Creating...\naws_api_gateway_integration.test: Creating...\naws_api_gateway_method_response.test: Creation complete after 0s [id=agmr-kvp9kg9jv6-hognbzcre0-GET-200]\naws_api_gateway_integration_response.MyDemoIntegrationResponse: Creating...\naws_api_gateway_integration.test: Creation complete after 0s [id=agi-kvp9kg9jv6-hognbzcre0-GET]\naws_api_gateway_deployment.test: Creating...\n.....\n\n```", "```go\n    {\n      \"mode\": \"managed\",\n      \"type\": \"aws_api_gateway_deployment\",\n      \"name\": \"test\",\n      \"provider\": \"provider.aws\",\n      \"instances\": [\n        {\n          \"schema_version\": 0,\n          \"attributes\": {\n            ......\n            \"invoke_url\":\"https://kvp9kg9jv6.execute-api.eu-central-\n            1.amazonaws.com/test\",\n            ......\n          },\n            ......\n        }\n      ]\n    }\n```", "```go\ncurl https://kvp9kg9jv6.execute-api.eu-central-1.amazonaws.com/test\n\n{\"ID\":123,\"ISBN\":\"0-201-03801-3\",\"Author\":\"Donald Knuth\",\"PublishedYear\":\"1968\"}\n```"]