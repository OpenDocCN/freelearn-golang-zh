- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Over the last few years, Go has gradually turned into one of the industry's
    favorite languages for building scalable and distributed systems. The language's
    opinionated design and built-in concurrency features make it relatively easy for
    engineers to author code that efficiently utilizes all available CPU cores.
  prefs: []
  type: TYPE_NORMAL
- en: This book distills the industry's best practices for writing lean Go code that
    is easy to test and maintain and explores their practical implementation by creating
    a multi-tier application from scratch called 'Links 'R' Us.' You will be guided
    through all the steps involved in designing, implementing, testing, deploying,
    and scaling the application. You'll start with a monolithic architecture and iteratively
    transform the project into a **Service-Oriented Architecture** (**SOA**) that
    supports efficient out-of-core processing of large link graphs. You will learn
    about various advanced and cutting-edge software engineering techniques such as
    building extensible data-processing pipelines, designing APIs using gRPC, and
    running distributed graph processing algorithms at scale. Finally, you will learn
    how to compile and package your Go services using Docker and automate their deployment
    to a Kubernetes cluster.
  prefs: []
  type: TYPE_NORMAL
- en: By the end of this book, you will start to think like a professional developer/engineer
    who can put theory into practice by writing lean and efficient Go code.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is for developers and software engineers interested in effectively
    using Go to design and build scalable distributed systems. This book will also
    be useful for amateur-to-intermediate level developers who aspire to become professional
    software engineers.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](5ef11f50-0620-4132-8bfe-c30d6c79f2f5.xhtml), *A Bird''s-Eye View
    of Software Engineering*, explains the difference between software engineering
    and programming and outlines the different types of engineering roles that you
    may encounter in small, medium, and large organizations. What''s more, the chapter
    summarizes the basic software design life cycle models that every **software engineer**
    (**SWE**) should be aware of.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](96fb70cb-8134-4156-bd3e-48ca53224683.xhtml), *Best Practices for
    Writing Clean and Maintainable Go Code*, explains how the SOLID design principles
    can be applied to Go projects and provides useful tips for organizing your Go
    code in packages and writing code that is easy to maintain and test.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](bdd8b231-e9fa-4522-8497-66d77231b7f3.xhtml), *Dependency Management*,
    highlights the importance of versioning Go packages and discusses tools and strategies
    for vendoring your project dependencies.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](d279a0af-50bb-4af2-80aa-d18fedc3cb90.xhtml), *The Art of Testing*,
    advocates the use of primitives such as stubs, mocks, spies, and fake objects
    for writing comprehensive unit tests for your code. Furthermore, the chapter enumerates
    the pros and cons of different types of tests (for example, black- versus white-box,
    integration versus functional) and concludes with an interesting discussion on
    advanced testing techniques such as smoke testing and chaos testing.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](6e4047ad-1fc1-4c3e-b90a-f27a62d06f17.xhtml), *The Links ''R'' Us
    project*, introduces the hands-on project that we will be building from scratch
    in the following chapters.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](ce489d62-aaa3-4fbb-b239-c9de3daa9a8f.xhtml), *Building a Persistence
    Layer*, focuses on the design and implementation of the data access layer for
    two of the Links ''R'' Us project components: the link graph and the text indexer.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](51dcc0d4-2ba3-4db9-83f7-fcf73a33aa74.xhtml), *Data-Processing Pipelines*,
    explores the basic principles behind data-processing pipelines and implements
    a framework for constructing generic, concurrent-safe, and reusable pipelines
    using Go primitives such as channels, contexts, and go-routines. The framework
    is then used to develop the crawler component for the Links ''R'' Us project.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](c505ec2d-0bd8-4edd-97e1-d06de2b326a5.xhtml), *Graph-Based Data
    Processing*, explains the theory behind the **Bulk Synchronous Parallel** (**BSP**)
    model of computation and implements, from scratch, a framework for executing parallel
    algorithms against graphs. As a proof of concept, we will be using this framework
    to investigate parallel versions of popular graph-based algorithms (namely, shortest
    path and graph coloring) with our efforts culminating in the complete implementation
    of the PageRank algorithm, a critical component of the Links ''R'' Us project.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](b3edd7bf-fd1d-4203-bd96-9113cdbb2422.xhtml), *Communicating with
    the Outside World*, outlines the key differences between RESTful and gRPC-based
    APIs with respect to subjects such as routing, security, and versioning. In this
    chapter, we will also define gRPC APIs for making the link graph and text indexer
    data stores for the Links ''R'' Us project accessible over the network.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](bd9d530b-f50e-4b81-a6c1-95b31e79b8c6.xhtml), *Building, Packaging,
    and Deploying Software*, enumerates the best practices for dockerizing your Go
    applications and optimizing their size. In addition, the chapter explores the
    anatomy of a Kubernetes cluster and enumerates the essential list of Kubernetes
    resources that we can use. As a proof of concept, we will be creating a monolithic
    version of the Links ''R'' Us project and will deploy it to a Kubernetes cluster
    that you will spin up on your local machine.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](dfb5c555-2534-4bac-b661-34cb9e7a3da8.xhtml), *Splitting Monoliths
    into Microservices*, explains the SOA pattern and discusses some common anti-patterns
    that you should be aware of and pitfalls that you want to avoid when switching
    from a monolithic design to microservices. To put the ideas from this chapter
    to the test, we will be breaking down the monolithic version of the Links ''R''
    Us project into microservices and deploying them to Kubernetes.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 12](67abdf43-7d4c-4bff-a17e-b23d0a900759.xhtml), *Building Distributed
    Graph-Processing Systems*, combines the knowledge from the previous chapters to
    create a distributed version of the graph-based data processing framework, which
    can be used for massive graphs that do not fit in memory (out-of-core processing).'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 13](56c5302a-2c1a-4937-bb65-1b280f27ebed.xhtml), *Metrics Collection
    and Visualization*, enumerates the most popular solutions for collecting and indexing
    metrics from applications with a focus on Prometheus. After discussing approaches
    to instrumenting your Go code to capture and export Prometheus metrics, we will
    delve into the use of tools such as Grafana for metrics visualization, and Alert
    manager for setting up alerts based on the aggregated values of collected metrics.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 14](2a597490-55c7-4d6c-9847-fdcaf95f61eb.xhtml), *Epilogue*, provides
    suggestions for furthering your understanding of the material by extending the
    hands-on project that we have built throughout the chapters of the book.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To get the most out of this book and experiment with the accompanying code,
    you need to have a fairly good understanding of programming in Go as well as sufficient
    experience working with the various tools that comprise the Go ecosystem.
  prefs: []
  type: TYPE_NORMAL
- en: In addition, the book assumes that you have a solid grasp of basic networking
    theory.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, some of the more technical chapters in the book utilize technologies
    such as Docker and Kubernetes. While a priori knowledge of these technologies
    is *not strictly required*, any prior experience using these (or equivalent) systems
    will certainly prove beneficial in better understanding the topics discussed in
    those chapters.
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packt.com](http://www.packt.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](https://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packt.com](http://www.packt.com).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the Support tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at **[https://github.com/PacktPublishing/Hands-On-Software-Engineering-with-Golang](https://github.com/PacktPublishing/Hands-On-Software-Engineering-with-Golang)**. In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Code in Action
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To see the Code in Action please visit the following link: [http://bit.ly/37QWeR2](http://bit.ly/37QWeR2).
  prefs: []
  type: TYPE_NORMAL
- en: Download the color images
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [https://static.packt-cdn.com/downloads/9781838554491_ColorImages.pdf](https://static.packt-cdn.com/downloads/9781838554491_ColorImages.pdf).'
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "In the following code, you can see the definition of a generic
    `Sword` type for our upcoming game."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "The following excerpt is part of a system that collects and'
  prefs: []
  type: TYPE_NORMAL
- en: publishes performance metrics to a **key-value** store."
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: If you have questions about any aspect of this book,
    mention the book title in the subject of your message and email us at `customercare@packtpub.com`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](https://www.packtpub.com/support/errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the Internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at `copyright@packt.com` with a link
    to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com/).'
  prefs: []
  type: TYPE_NORMAL
- en: Reviews
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  prefs: []
  type: TYPE_NORMAL
- en: For more information about Packt, please visit [packt.com](http://www.packt.com/).
  prefs: []
  type: TYPE_NORMAL
