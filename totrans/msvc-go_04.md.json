["```go\ngo install google.golang.org/protobuf/cmd/protoc-gen-go@latest\nexport PATH=\"$PATH:$(go env GOPATH)/bin\"\n```", "```go\n// Metadata defines the movie metadata.\ntype Metadata struct {\n    ID          string `json:\"id\"`\n    Title       string `json:\"title\"`\n    Description string `json:\"description\"`\n    Director    string `json:\"director\"`\n}\n```", "```go\nMetadata{\n    ID:          \"123\",\n    Title:       \"The Movie 2\",\n    Description: \"Sequel of the legendary The Movie\",\n    Director:    \"Foo Bars\",\n}\n```", "```go\n{\"id\":\"123\",\"title\":\"The Movie 2\",\"description\":\"Sequel of the legendary The Movie\",\"director\":\"Foo Bars\"}\n```", "```go\n<Metadata><ID>123</ID><Title>The Movie 2</Title><Description>Sequel of the legendary The Movie</Description><Director>Foo Bars</Director></Metadata>\n```", "```go\nmetadata:\n  id: 123\n  title: The Movie 2\n  description: Sequel of the legendary The Movie\n  director: Foo Bars\n```", "```go\nstruct Metadata {\n  1: string id,\n  2: string title,\n  3: string description,\n  4: string director\n}\n```", "```go\nservice MetadataService {\n  Metadata get(1: string id)\n}\n```", "```go\n{\n   \"namespace\": \"example.avro\",\n   \"type\": \"record\",\n   \"name\": \"Metadata\",\n   \"fields\": [\n      {\"name\": \"id\", \"type\": \"string\"},\n      {\"name\": \"title\", \"type\": \"string\"},\n      {\"name\": \"description\", \"type\": \"string\"},\n      {\"name\": \"director\", \"type\": \"string\"},\n   ] \n}\n```", "```go\nsyntax = \"proto3\";\noption go_package = \"/gen\";\n\nmessage Metadata {\n    string id = 1;\n    string title = 2;\n    string description = 3;\n    string director = 4;\n}\n\nmessage MovieDetails {\n    float rating = 1;\n    Metadata metadata = 2;\n}\n```", "```go\nprotoc -I=api --go_out=. movie.proto\n```", "```go\ntype Metadata struct {\n    state         protoimpl.MessageState\n    sizeCache     protoimpl.SizeCache\n    unknownFields protoimpl.UnknownFields\n\n    Id          string `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n    Title       string `protobuf:\"bytes,2,opt,name=title,proto3\" json:\"title,omitempty\"`\n    Description string `protobuf:\"bytes,3,opt,name=description,proto3\" json:\"description,omitempty\"`\n    Director    string `protobuf:\"bytes,4,opt,name=director,proto3\" json:\"director,omitempty\"`\n}\n```", "```go\npackage main\nimport (\n    \"encoding/json\"\n    \"encoding/xml\"\n    \"fmt\"\n    \"github.com/golang/protobuf/proto\"\n    \"movieexample.com/gen\"\n    \"movieexample.com/metadata/pkg/model\"\n)\nvar metadata = &model.Metadata{\n    ID:          \"123\",\n    Title:       \"The Movie 2\",\n    Description: \"Sequel of the legendary The Movie\",\n    Director:    \"Foo Bars\",\n}\nvar genMetadata = &gen.Metadata{\n    Id:          \"123\",\n    Title:       \"The Movie 2\",\n    Description: \"Sequel of the legendary The Movie\",\n    Director:    \"Foo Bars\",\n}\n```", "```go\nfunc main() {\n    jsonBytes, err := serializeToJSON(metadata)\n    if err != nil {\n        panic(err)\n    }\n    xmlBytes, err := serializeToXML(metadata)\n    if err != nil {\n        panic(err)\n    }\n    protoBytes, err := serializeToProto(genMetadata)\n    if err != nil {\n        panic(err)\n    }\n    fmt.Printf(\"JSON size:\\t%dB\\n\", len(jsonBytes))\n    fmt.Printf(\"XML size:\\t%dB\\n\", len(xmlBytes))\n    fmt.Printf(\"Proto size:\\t%dB\\n\", len(protoBytes))\n}\n```", "```go\nfunc serializeToJSON(m *model.Metadata) ([]byte, error) {\n    return json.Marshal(m)\n}\nfunc serializeToXML(m *model.Metadata) ([]byte, error) {\n    return xml.Marshal(m)\n}\nfunc serializeToProto(m *gen.Metadata) ([]byte, error) {\n    return proto.Marshal(m)\n}\n```", "```go\ngo mod tidy\n```", "```go\nJSON size: 106B\nXML size: 148B\nProto size: 63B\n```", "```go\npackage main\nimport (\n    \"testing\"\n)\nfunc BenchmarkSerializeToJSON(b *testing.B) {\n    for i := 0; i < b.N; i++ {\n        serializeToJSON(metadata)\n    }\n}\nfunc BenchmarkSerializeToXML(b *testing.B) {\n    for i := 0; i < b.N; i++ {\n        serializeToXML(metadata)\n    }\n}\nfunc BenchmarkSerializeToProto(b *testing.B) {\n    for i := 0; i < b.N; i++ {\n        serializeToProto(genMetadata)\n    }\n}\n```", "```go\ngo test -bench=.\n```", "```go\ngoos: darwin\ngoarch: amd64\npkg: movieexample.com/cmd/sizecompare\ncpu: Intel(R) Core(TM) i7-8850H CPU @ 2.60GHz\nBenchmarkSerializeToJSON-12          3308172           342.2 ns/op\nBenchmarkSerializeToXML-12            480728          2519 ns/op\nBenchmarkSerializeToProto-12         6596490           185.7 ns/op\nPASS\nok      movieexample.com/cmd/sizecompare    5.239s\n```"]