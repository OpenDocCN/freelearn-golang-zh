["```go\n# input.yml\nrouter:\n- hostname: sandbox-iosxr-1.cisco.com\n  platform: cisco_iosxr\n  strictkey: false\n  username: admin\n  password: C1sco12345\n```", "```go\nfunc main() {\n    /* ... <omitted for brevity > ... */\n    intent := Service{\n        Name:     \"grpc\",\n        Port:     \"57777\",\n        AF:       \"ipv4\",\n        Insecure: false,\n        CLI:      \"show grpc status\",\n    }\n    intentHash, err := hashstructure.Hash(intent,\n        hashstructure.FormatV2, nil)\n    /* ... <omitted for brevity > ... */\n}\n```", "```go\nfunc main() {\n    /* ... <omitted for brevity > ... */\n    config, err := iosxr.getConfig()\n    // process error\n    err = config.save()\n    /* ... <omitted for brevity > ... */\n}\n```", "```go\nfunc (r Router) getOper(s Service) (o DeviceInfo, err error) {\n    rs, err := r.Conn.SendCommand(s.CLI)\n    // process error\n    o = DeviceInfo{\n        Device:    r.Hostname,\n        Output:    rs.Result,\n        Timestamp: time.Now(),\n    }\n    return o, nil\n}\n```", "```go\n    if oprHash == intentHash {\n        continue\n    }\n```", "```go\nfunc (r Router) sendConfig(conf string) error {\n    c, err := cfg.NewCfgDriver(r.Conn, r.Platform)\n    // process error\n    err = c.Prepare()\n    // process error\n    _, err = c.LoadConfig(conf, false)\n    // process error\n    _, err = c.CommitConfig()\n    // process error\n    return nil\n}\n```", "```go\nconf\ngrpc no-tls \ncommit\n```", "```go\nch05/closed-loop$ go run main.go \nEntering to continuous loop ====>\n Loop at 15:31:22\n  Operational state from device:\n   service: grpc\n   addr-family: ipv4\n   port: 57777\n   TLS: true\n Loop at 15:31:52\n  Operational state from device:\n   service: grpc\n   addr-family: ipv4\n   port: 57777\n   TLS: false\nConfiguring device ====>\n Loop at 15:32:22\n  Operational state from device:\n   service: grpc\n   addr-family: ipv4\n   port: 57777\n   TLS: true\n...\n```"]