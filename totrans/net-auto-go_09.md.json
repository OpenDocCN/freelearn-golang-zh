["```go\nservice gNMI {\n   rpc Capabilities(CapabilityRequest) returns (CapabilityResponse);\n   rpc Get(GetRequest) returns (GetResponse);\n   rpc Set(SetRequest) returns (SetResponse);\n   rpc Subscribe(stream SubscribeRequest) returns (stream SubscribeResponse);\n}\n```", "```go\nmessage SetRequest {\n   Path prefix = 1;\n   repeated Path delete = 2;\n   repeated Update replace = 3;\n   repeated Update update = 4;\n   repeated gnmi_ext.Extension extension = 5;\n}\n```", "```go\nmessage Path {\n  string origin = 2;\n  repeated PathElem elem = 3;\n  string target = 4;\n}\nmessage PathElem {\n  string name = 1;\n  map<string, string> key = 2;\n}\n```", "```go\nmessage Update {\n  Path path = 1;\n  TypedValue val = 3;\n  uint32 duplicates = 4;\n}\nmessage TypedValue {\n  oneof value {\n    string string_val = 1;\n    int64 int_val = 2;\n    uint64 uint_val = 3;\n    bool bool_val = 4;\n    bytes bytes_val = 5;\n    double double_val = 14;\n    ScalarArray leaflist_val = 8;\n    google.protobuf.Any any_val = 9;\n    bytes json_val = 10;\n    bytes json_ietf_val = 11;\n    string ascii_val = 12;\n    bytes proto_bytes = 13;\n  }\n}\n```", "```go\nfunc (r Router) createTarget() (*target.Target, error) {\n      return api.NewTarget(\n           api.Name(\"gnmi\"),\n           api.Address(r.Hostname+\":\"+r.Port),\n           api.Username(r.Username),\n           api.Password(r.Password),\n           api.Insecure(r.Insecure),\n      )\n}\n```", "```go\n# input.yml\n- hostname: clab-netgo-ceos\n  port: 6030\n  insecure: true\n  username: admin\n  password: admin\n```", "```go\nfunc main() {\n  /* ... <omitted for brevity > ... */\n  for _, router := range inv.Routers {\n    tg, err := router.createTarget()\n    // process error\n\n    ctx, cancel := context.WithCancel(\n    context.Background())\n    defer cancel()\n\n    err = tg.CreateGNMIClient(ctx)\n    // process error\n    defer tg.Close()\n  /* ... <continues next > ... */\n}\n```", "```go\n# api-ceos.yml\n- prefix: \"/interfaces/interface[name=Ethernet2]\"\n  encoding: \"json_ietf\"\n  path: '/subinterfaces/subinterface[index=0]/ipv4/addresses/address[ip=192.0.2.2]'\n  value: '{\"config\":{\"ip\":\"192.0.2.2\",\"prefix-length\":31}}'\n- prefix: \"\"\n  encoding: \"json_ietf\"\n  path: '/interfaces/interface[name=Ethernet2]/config/description'\n  value: 'PRIMARY: TO -> CVX:swp1''\n## ... <omitted for brevity > ... ##\n```", "```go\nfunc main() {\n  /* ... <continues from before > ... */\n    for _, data := range info {\n      setReq, err := api.NewSetRequest(\n              api.Update(\n                    api.Path(data.Prefix+data.Path),\n                    api.Value(data.Value, data.Encoding)),\n      )\n      // process error\n\n      configResp, err := tg.Set(ctx, setReq)\n      // process error\n      fmt.Println(prototext.Format(configResp))\n    }\n  }\n}\n```", "```go\nch09/gnmi$ go run main.go \nresponse: {\n  path: {\n    elem: {\n      name: \"interfaces\"\n    }\n    elem: {\n      name: \"interface\"\n      key: {\n        key: \"name\"\n        value: \"Ethernet2\"\n      }\n    }\n    elem: {\n      name: \"subinterfaces\"\n    }\n    elem: {\n      name: \"subinterface\"\n      key: {\n        key: \"index\"\n        value: \"0\"\n      }\n    }\n    elem: {\n      name: \"ipv4\"\n    }\n    elem: {\n      name: \"addresses\"\n    }\n    elem: {\n      name: \"address\"\n      key: {\n        key: \"ip\"\n        value: \"192.0.2.2\"\n      }\n    }\n  }\n  op: UPDATE\n}\ntimestamp: 1660148355191641746\nresponse: {\n  path: {\n    elem: {\n      name: \"interfaces\"\n    }\n    elem: {\n      name: \"interface\"\n      key: {\n        key: \"name\"\n        value: \"Ethernet2\"\n      }\n    }\n    elem: {\n      name: \"config\"\n    }\n    elem: {\n      name: \"description\"\n    }\n  }\n  op: UPDATE\n}\ntimestamp: 1660148355192866023\n## ... <omitted for brevity > ... ##\n```", "```go\nmessage SetResponse {\n  Path prefix = 1;\n  repeated UpdateResult response = 2;\n  int64 timestamp = 4;\n  repeated gnmi_ext.Extension extension = 5;\n}\n```", "```go\ninterface Ethernet2\n   description PRIMARY: TO -> CVX:swp1\n   no switchport\n   ip address 192.0.2.2/31\n!\ninterface Ethernet3\n   description BACKUP: TO -> CVX:swp2\n   no switchport\n   ip address 192.0.2.4/31\n!\n```", "```go\nservice gNMI {\n     rpc Subscribe(stream SubscribeRequest) returns (stream SubscribeResponse);\n}\n```", "```go\n    enum SubscriptionMode {\n    ```", "```go\n         TARGET_DEFINED = 0;\n    ```", "```go\n         ON_CHANGE      = 1;\n    ```", "```go\n         SAMPLE         = 2;\n    ```", "```go\n    }\n    ```", "```go\n    message Notification {\n    ```", "```go\n         int64 timestamp = 1;\n    ```", "```go\n         Path prefix = 2;\n    ```", "```go\n         string alias = 3;\n    ```", "```go\n         repeated Update update = 4;\n    ```", "```go\n         repeated Path delete = 5;\n    ```", "```go\n         bool atomic = 6;\n    ```", "```go\n    }\n    ```", "```go\n    message Update {\n    ```", "```go\n         Path path = 1;\n    ```", "```go\n         TypedValue val = 3;\n    ```", "```go\n         uint32 duplicates = 4;\n    ```", "```go\n    }\n    ```", "```go\n    targets:\n    ```", "```go\n     \"clab-netgo-cvx:9339\":\n    ```", "```go\n        username: cumulus\n    ```", "```go\n        password: cumulus\n    ```", "```go\n    subscriptions:\n    ```", "```go\n      counters:\n    ```", "```go\n        target: netq\n    ```", "```go\n        paths:\n    ```", "```go\n          - /interfaces\n    ```", "```go\n        updates-only: true\n    ```", "```go\n    outputs:\n    ```", "```go\n      prom-output:\n    ```", "```go\n        type: prometheus\n    ```", "```go\n        listen: \":9313\"\n    ```", "```go\n    scrape_configs:\n    ```", "```go\n      - job_name: 'event-trigger'\n    ```", "```go\n        scrape_interval: 2s\n    ```", "```go\n        static_configs:\n    ```", "```go\n          - targets: ['clab-netgo-host-3:9313']\n    ```", "```go\n    rule_files:\n    ```", "```go\n      - 'alert.rules'\n    ```", "```go\n    alerting:\n    ```", "```go\n      alertmanagers:\n    ```", "```go\n      - scheme: http\n    ```", "```go\n        static_configs:\n    ```", "```go\n        - targets:\n    ```", "```go\n          - \"alertmanager:9093\"\n    ```", "```go\n    groups:\n    ```", "```go\n    - name: thebook\n    ```", "```go\n      interval: 10s\n    ```", "```go\n      rules:\n    ```", "```go\n      - alert: HighLinkUtilization\n    ```", "```go\n        expr: rate(interfaces_interface_state_counters_in_pkts[30s]) > 50\n    ```", "```go\n        for: 0m\n    ```", "```go\n        labels:\n    ```", "```go\n          severity: warning\n    ```", "```go\n        annotations:\n    ```", "```go\n          summary: Transit link {{ $labels.interface_name }} is under high load\n    ```", "```go\n          description: \"Transit link {{ $labels.interface_name }} is under high load LABELS = {{ $labels }}\"\n    ```", "```go\n          value: '{{ $value }}'\n    ```", "```go\n    route:\n    ```", "```go\n      receiver: 'event-manager'\n    ```", "```go\n      group_wait: 5s\n    ```", "```go\n      group_interval: 10s\n    ```", "```go\n    receivers:\n    ```", "```go\n      - name: 'event-manager'\n    ```", "```go\n        webhook_configs:\n    ```", "```go\n        - url: http://clab-netgo-host-2:10000/alert\n    ```", "```go\nfunc alertHandler(w http.ResponseWriter, req *http.Request) {\n  log.Println(\"Incoming alert\")\n  var alerts Alerts\n  err := json.NewDecoder(req.Body).Decode(&alerts)\n  // process error\n\n  for _, alert := range alerts.Alerts {\n    if alert.Status == \"firing\" {\n      if err := toggleBackup(alert.Labels.InterfaceName, \"permit\"); err != nil {\n        w.WriteHeader(http.StatusInternalServerError)\n        return\n      }\n      continue\n    }\n\n    if err := toggleBackup(alert.Labels.InterfaceName, \"deny\"); err != nil {\n      w.WriteHeader(http.StatusInternalServerError)\n      return\n    }\n  }\n  w.WriteHeader(http.StatusOK)\n}\n```", "```go\nvar (\n  backupRules = map[string][]int{\n    \"swp1\": {10, 20},\n  }\n)\n\nfunc toggleBackup(intf string, action string) error {\n  log.Printf(\"%s needs to %s backup prefixes\",\n              intf, action)\n  ruleIDs, ok := backupRules[intf]\n  // process error\n\n  var pl PrefixList\n  pl.Rules = make(map[string]Rule)\n  for _, ruleID := range ruleIDs {\n    pl.Rules[strconv.Itoa(ruleID)] = Rule{\n      Action: action,\n    }\n  }\n\n  var payload nvue\n  payload.Router.Policy.PrefixLists = map[string]PrefixList{\n    plName: pl,\n  }\n\n  b, err := json.Marshal(payload)\n  // process error\n\n  return sendBytes(b)\n}\n```", "```go\n$ sudo ip netns exec clab-netgo-host-2 /usr/local/go/bin/go run ch09/event-manager/main.go\nAlertManager event-triggered webhook\n2022/08/01 21:51:13 Starting web server at 0.0.0.0:10000\n```", "```go\n$ DURATION=2m make traffic-start\n```", "```go\n$ sudo ip netns exec clab-netgo-host-2 /usr/local/go/bin/go run ch09/event-manager/main.go\nAlertManager event-triggered webhook\n2022/08/01 21:51:13 Starting web server at 0.0.0.0:10000\nch09/event-manager/main.go\n2022/08/01 21:53:10 Incoming alert\n2022/08/01 21:53:10 swp1 needs to permit backup prefixes\n2022/08/01 21:53:10 Created revisionID: changeset/cumulus/2022-08-01_21.53.10_ASP0\n{\n  \"state\": \"apply\",\n  \"transition\": {\n    \"issue\": {},\n    \"progress\": \"\"\n  }\n}\n2022/08/01 21:54:00 Incoming alert\n2022/08/01 21:54:00 swp1 needs to deny backup prefixes\n2022/08/01 21:54:00 Created revisionID: changeset/cumulus/2022-08-01_21.54.00_ASP2\n{\n  \"state\": \"apply\",\n  \"transition\": {\n    \"issue\": {},\n    \"progress\": \"\"\n  }\n}\n2022/08/01 21:54:00 swp2 needs to permit backup prefixes\n2022/08/01 21:54:00 Could not find a backup prefix for swp2\n2022/08/01 21:54:20 Incoming alert\n2022/08/01 21:54:20 swp2 needs to deny backup prefixes\n2022/08/01 21:54:20 Could not find a backup prefix for swp2\n2022/08/01 21:54:30 Incoming alert\n2022/08/01 21:54:30 swp1 needs to permit backup prefixes\n2022/08/01 21:54:30 Created revisionID: changeset/cumulus/2022-08-01_21.54.30_ASP4\n{\n  \"state\": \"apply\",\n  \"transition\": {\n    \"issue\": {},\n    \"progress\": \"\"\n  }\n}\n2022/08/01 21:55:20 Incoming alert\n2022/08/01 21:55:20 swp1 needs to deny backup prefixes\n2022/08/01 21:55:20 Created revisionID: changeset/cumulus/2022-08-01_21.55.20_ASP6\n{\n  \"state\": \"apply\",\n  \"transition\": {\n    \"issue\": {},\n    \"progress\": \"\"\n  }\n}\n```", "```go\nservice System {\n     rpc Ping(PingRequest) returns (stream PingResponse) {}\n     rpc Traceroute(TracerouteRequest) returns (stream TracerouteResponse) {}\n     rpc Time(TimeRequest) returns (TimeResponse) {}\n     rpc SetPackage(stream SetPackageRequest) returns (SetPackageResponse) {}\n     rpc SwitchControlProcessor(SwitchControlProcessorRequest)\n       returns (SwitchControlProcessorResponse) {}\n     rpc Reboot(RebootRequest) returns (RebootResponse) {}\n     rpc RebootStatus(RebootStatusRequest) returns (RebootStatusResponse) {}\n     rpc CancelReboot(CancelRebootRequest) returns (CancelRebootResponse) {}\n     rpc KillProcess(KillProcessRequest) returns (KillProcessResponse) {}\n}\n```", "```go\nservice System {\n     rpc Traceroute(TracerouteRequest) returns (stream TracerouteResponse) {}\n```", "```go\nmessage TracerouteRequest {\n     string source = 1;      // Source addr to ping from.\n     String destination = 2; // Destination addr to ping.\n     Uint32 initial_ttl = 3; // Initial TTL. (default=1)\n     int32 max_ttl = 4;      // Maximum number of hops. \n     Int64 wait = 5;         // Response wait-time (ns).\n     Bool do_not_fragment = 6;  \n     bool do_not_resolve = 7;\n     /* ... <omitted for brevity > ... */\n}\n```", "```go\nmessage TracerouteResponse {\n     /* ... <omitted for brevity > ... */\n     int32 hop = 5;          // Hop number. required.\n     string address = 6;     // Address of responding hop. \n     string name = 7;        // Name of responding hop.\n     int64 rtt = 8;          // Round trip time in nanoseconds.\n     /* ... <omitted for brevity > ... */\n}\n```", "```go\nvar target = \"clab-netgo-ceos:6030\"\nimport (\n     \"google.golang.org/grpc\"\n     \"github.com/openconfig/gnoi/system\"\n)\nfunc main() {\n     conn, err := grpc.Dial(target, grpc.WithInsecure())\n     // process error\n     defer conn.Close()\n     sysSvc := system.NewSystemClient(conn)\n     ctx, cancel := context.WithCancel(context.Background())\n     defer cancel()\n  /* ... <continues next > ... */\n}\n```", "```go\nvar destinations = []string{\n           \"203.0.113.251\",\n           \"203.0.113.252\",\n           \"203.0.113.253\",\n}\nfunc main() {\n     /* ... <continues from before > ... */\n     var wg sync.WaitGroup\n     wg.Add(len(destinations))\n     traceCh := make(chan map[string][]mapset.Set,\n                            len(destinations))\n  /* ... <continues next > ... */\n}\n```", "```go\nvar source = \"203.0.113.3\"\n\nfunc main() {\n  /* ... <continues from before > ... */\n  for _, dest := range destinations {\n    go func(d string) {\n      defer wg.Done()\n      retryMax := 3\n      retryCount := 0\n\n    START:\n      response, err := sysSvc.Traceroute(ctx,\n                        &system.TracerouteRequest{\n                                 Destination: d,\n                                 Source: source,\n      })\n      // process error\n\n      var route []mapset.Set\n      for {\n        resp, err := response.Recv()\n        if errors.Is(err, io.EOF) {\n        // end of stream, traceroute completed\n          break\n        }\n        // process error\n\n        // timed out, restarting the traceroute\n        if int(resp.Hop) > len(route)+1 {\n          if retryCount > retryMax-1 {\n            goto FINISH\n          }\n          retryCount += 1\n          goto START\n        }\n\n        // first response\n        if len(route) < int(resp.Hop) {\n          route = append(route, mapset.NewSet())\n        }\n\n        // subsequent responses\n          route[resp.Hop-1].Add(resp.Address)\n        }\n\n    FINISH:\n      traceCh <- map[string][]mapset.Set{\n               d: route,\n             }\n    }(dest)\n  }\n  wg.Wait()\n  close(traceCh)\n  /* ... <continues next > ... */\n}\n```", "```go\nfunc main() {\n  /* ... <continues from before > ... */\n  routes := make(map[int]map[string]mapset.Set)\n\n  for trace := range traceCh {\n    for dest, paths := range trace {\n      for hop, path := range paths {\n        if _, ok := routes[hop]; !ok {\n          routes[hop] = make(map[string]mapset.Set)\n        }\n        routes[hop][dest] = path\n      }\n    }\n  }\n  /* ... <continues next > ... */\n}\n```", "```go\nfunc main() {\n  /* ... <continues from before > ... */\n  for hop, route := range routes {\n    if hop == len(routes)-1 {\n      continue\n    }\n    found := make(map[string]string)\n    for myDest, myPaths := range route {\n      for otherDest, otherPaths := range route {\n        if myDest == otherDest {\n          continue\n        }\n        diff := myPaths.Difference(otherPaths)\n        if diff.Cardinality() == 0 {\n          continue\n        }\n\n        v, ok := found[myDest]\n        if ok && v == otherDest {\n          continue\n        }\n\n        log.Printf(\"Found different paths at hop %d\", hop)\n        log.Printf(\"Destination %s: %+v\", myDest, myPaths)\n        log.Printf(\n                \"Destination %s: %+v\",\n                        otherDest,\n                        otherPaths,\n                        )\n        found[otherDest] = myDest\n      }\n    }\n  }\n  log.Println(\"Check complete\")\n}\n```", "```go\nch09/gnoi-trace$ go run main.go\n2022/06/26 16:51:10 Checking if routes have different paths\n2022/06/26 16:51:16 Missed at least one hop in 203.0.113.251\n2022/06/26 16:51:16 retrying 203.0.113.251\n2022/06/26 16:51:17 Check complete\n```", "```go\n$ DURATION=2m make traffic-start\ndocker exec -d clab-netgo-cvx systemctl restart hsflowd\ndocker exec -d clab-netgo-host-3 ./ethr -s\ndocker exec -d clab-netgo-host-1 ./ethr -c 203.0.113.253 -b 900K -d 2m -p udp -l 1KB\ndocker exec -d clab-netgo-host-1 ./ethr -c 203.0.113.252 -b 600K -d 2m -p udp -l 1KB\ndocker exec -d clab-netgo-host-1 ./ethr -c 203.0.113.251 -b 400K -d 2m -p udp -l 1KB\n$ sudo ip netns exec clab-netgo-host-2 /usr/local/go/bin/go run ch09/event-manager/main.go\nAlertManager event-triggered webhook\n2022/09/14 21:02:57 Starting web server at 0.0.0.0:10000\n2022/09/14 21:02:58 Incoming alert\n2022/09/14 21:02:58 swp1 needs to permit backup prefixes\n2022/09/14 21:02:58 Created revisionID: changeset/cumulus/2022-09-14_21.02.58_S4SQ\n{\n  \"state\": \"apply\",\n  \"transition\": {\n    \"issue\": {},\n    \"progress\": \"\"\n  }\n}\n2022/09/14 21:03:40 Incoming alert\n2022/09/14 21:03:40 swp1 needs to deny backup prefixes\n2022/09/14 21:03:40 Created revisionID: changeset/cumulus/2022-09-14_21.03.40_S4SS\n{\n  \"state\": \"apply\",\n  \"transition\": {\n    \"issue\": {},\n    \"progress\": \"\"\n  }\n}\n2022/09/14 21:03:40 swp2 needs to permit backup prefixes\n2022/09/14 21:03:40 Could not find a backup prefix for swp2\n2022/09/14 21:04:10 Incoming alert\n2022/09/14 21:04:10 swp1 needs to permit backup prefixes\n2022/09/14 21:04:10 Created revisionID: changeset/cumulus/2022-09-14_21.04.10_S4SV\n{\n  \"state\": \"apply\",\n  \"transition\": {\n    \"issue\": {},\n    \"progress\": \"\"\n  }\n}\n2022/09/14 21:04:10 swp2 needs to deny backup prefixes\n2022/09/14 21:04:10 Could not find a backup prefix for swp2\n```", "```go\nch09/gnoi-trace$ go run main.go\n2022/09/14 21:03:29 Checking if routes have different paths\n2022/09/14 21:03:34 Missed at least one hop in 203.0.113.253\n2022/09/14 21:03:34 retrying 203.0.113.253\n2022/09/14 21:03:34 Found different paths at hop 0\n2022/09/14 21:03:34 Destination 203.0.113.252: Set{192.0.2.5}\n2022/09/14 21:03:34 Destination 203.0.113.253: Set{192.0.2.3}\n2022/09/14 21:03:34 Found different paths at hop 0\n2022/09/14 21:03:34 Destination 203.0.113.251: Set{192.0.2.5}\n2022/09/14 21:03:34 Destination 203.0.113.253: Set{192.0.2.3}\n2022/09/14 21:03:34 Found different paths at hop 0\n2022/09/14 21:03:34 Destination 203.0.113.253: Set{192.0.2.3}\n2022/09/14 21:03:34 Destination 203.0.113.252: Set{192.0.2.5}\n2022/09/14 21:03:34 Check complete\n```"]