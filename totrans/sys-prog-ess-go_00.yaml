- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: System programming is a critical area of knowledge in software engineering.
    It matters most for professionals who want to write efficient, low-level code
    that interacts closely with the operating system. *System Programming Essentials
    with Go* is designed to guide you through the principles and practices necessary
    to stand up in system programming using Go. This book covers a broad range of
    topics, from basic system programming concepts to advanced techniques, providing
    a comprehensive toolkit for tackling real-world system programming challenges.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is tailored for software engineers, architects, and developers who
    possess a basic understanding of programming and seek to deepen their knowledge
    of system design. It is ideal for those addressing complex design problems at
    work or simply interested in enhancing their skills with low-level programming
    in general. A foundational understanding of programming concepts and experience
    with at least one programming language is required.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[*Chapter 1*](B21662_01.xhtml#_idTextAnchor014), *Why Go?*, provides an overview
    of Go’s suitability for building efficient and high-performance system software,
    providing you with the necessary knowledge and skills to leverage Go’s capabilities
    for system-level development. The chapter covers Go’s concurrency model, networking
    and I/O, low-level control, system calls, cross-platform support, and tooling,
    offering practical insights and examples for building robust system programs.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 2*](B21662_02.xhtml#_idTextAnchor031), *Refreshing Concurrency and
    Parallelism*, provides an overview of the core aspects of Goroutines, data races,
    channels, and their interplay in the Go programming language. Understanding these
    principles is critical for implementing efficient concurrency, managing shared
    resources, and ensuring effective inter-goroutine communication.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 3*](B21662_03.xhtml#_idTextAnchor089), *Understanding System Calls*,
    provides an overview of system calls and their practical applications. You will
    learn how to create symbolic links, unlink files, and manipulate filename paths.
    Also, you will better understand package OS and syscall in Go and learn how to
    develop and test a CLI program.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 4*](B21662_04.xhtml#_idTextAnchor110), *File and Directory Operations*,
    provides an overview of handling filesystems in Go, focusing on detecting unsafe
    permissions, calculating directory sizes, and identifying duplicate files.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 5*](B21662_05.xhtml#_idTextAnchor126), *Working with System Events*,
    provides comprehensive insights into building advanced and efficient system tools
    using Go, focusing on task scheduling, file monitoring, process management, and
    distributed locking.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 6*](B21662_06.xhtml#_idTextAnchor145), *Understanding Pipes in Inter-Process
    Communication*, provides an exploration of the concept of pipes in `mkfifo`),
    and how pipes interact with other programs.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 7*](B21662_07.xhtml#_idTextAnchor160), *Unix Sockets*, provides an
    understanding of how UNIX sockets function, their types, and their role in IPC
    on UNIX and UNIX-like operating systems such as Linux.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 8*](B21662_08.xhtml#_idTextAnchor179), *Memory Management*, focuses
    on the mechanisms and strategies underpinning garbage collection. We’ll explore
    the evolution of Go’s garbage collection, the distinctions between stack and heap
    memory allocations, and advanced techniques for efficient memory management.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 9*](B21662_09.xhtml#_idTextAnchor193), *Analyzing Performance*, covers
    key optimization techniques for Go applications, including escape analysis, benchmarking,
    CPU profiling, and memory profiling. It explains how to improve memory usage with
    escape analysis, measure and compare code performance through benchmarking, identify
    hotspots with CPU profiling, and detect memory leaks using memory profiling.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 10*](B21662_10.xhtml#_idTextAnchor211), *Networking*, delves into
    the fascinating world of Go network programming. Networking is essential to system
    programming, and Go provides powerful primitives for handling network communications.
    You will gain the expertise needed to create robust networked applications by
    exploring TCP, HTTP, and additional relevant protocols.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 11*](B21662_11.xhtml#_idTextAnchor224), *Telemetry*, dives into how
    you can leverage industry tools to implement effective telemetry practices. From
    logs to traces and metrics, you’ll explore the tools and guidelines necessary
    to monitor your application efficiently.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 12*](B21662_12.xhtml#_idTextAnchor240), *Distributing Your Apps*,
    explores the key concepts and practical applications of distributing applications
    using Go modules, continuous integration, and release strategies.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 13*](B21662_13.xhtml#_idTextAnchor251), *Capstone Project* *- Distributed
    Cache*, guides you through the Capstone Project. This project will build a distributed
    cache system in Go with features such as Memcached or Redis. It will cover sharding
    strategies, eviction policies, consistency models, and technology choices, all
    while navigating the trade-offs that come with each decision.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 14*](B21662_14.xhtml#_idTextAnchor269), *Effective Coding Practices*,
    explores the principles and techniques of efficient resource management in Go
    programming, specifically focusing on avoiding common pitfalls that can lead to
    performance issues and hinder overall efficiency. It dives into the intricacies
    of optimizing resource usage using the Go standard library, providing strategies
    for developers seeking to enhance the effectiveness of their Go applications.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 15*](B21662_15.xhtml#_idTextAnchor288), *Stay Sharp with System Programming*,
    provides a continuous learning path to Go-based system programming based on real-world
    case studies. By gaining insight into how Go is utilized in actual applications,
    you can apply these lessons to their projects.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Appendix*, *Hardware Automation*, explores how to utilize various tools to
    automate mundane tasks with USB drives and Bluetooth devices and monitor peripheral
    events. By understanding how to automate these processes, you will save valuable
    time and increase productivity in your daily lives.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You will need to have an understanding of the basics of Golang.
  prefs: []
  type: TYPE_NORMAL
- en: '| **Software** | **Operating** **system requirements** |'
  prefs: []
  type: TYPE_TB
- en: '| Golang (1.16+) | Windows, macOS, or Linux (preferably Linux) |'
  prefs: []
  type: TYPE_TB
- en: '**If you are using the digital version of this book, we advise you to type
    the code yourself or access the code from the book’s GitHub repository (a link
    is available in the next section). Doing so will help you avoid any potential
    errors related to the copying and pasting** **of code.**'
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from GitHub at [https://github.com/PacktPublishing/System-Programming-Essentials-with-Go](https://github.com/PacktPublishing/System-Programming-Essentials-with-Go).
    If there’s an update to the code, it will be updated in the GitHub repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: “Lastly, update the `main` function to create a cache
    with a specified capacity and test the TTL and LRU features.”'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Tips or important notes
  prefs: []
  type: TYPE_NORMAL
- en: Appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: If you have questions about any aspect of this book,
    email us at [customercare@packtpub.com](mailto:customercare@packtpub.com) and
    mention the book title in the subject of your message.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)
    and fill in the form.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at [copyright@packt.com](mailto:copyright@packt.com)
    with a link to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com).'
  prefs: []
  type: TYPE_NORMAL
- en: Share Your Thoughts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once you’ve read *System Programming Essentials with Go*, we’d love to hear
    your thoughts! Please [click here to go straight to the Amazon review page](https://packt.link/r/1837634130)
    for this book and share your feedback.
  prefs: []
  type: TYPE_NORMAL
- en: Your review is important to us and the tech community and will help us make
    sure we’re delivering excellent quality content.
  prefs: []
  type: TYPE_NORMAL
- en: Download a free PDF copy of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Thanks for purchasing this book!
  prefs: []
  type: TYPE_NORMAL
- en: Do you like to read on the go but are unable to carry your print books everywhere?
  prefs: []
  type: TYPE_NORMAL
- en: Is your eBook purchase not compatible with the device of your choice?
  prefs: []
  type: TYPE_NORMAL
- en: Don’t worry, now with every Packt book you get a DRM-free PDF version of that
    book at no cost.
  prefs: []
  type: TYPE_NORMAL
- en: Read anywhere, any place, on any device. Search, copy, and paste code from your
    favorite technical books directly into your application.
  prefs: []
  type: TYPE_NORMAL
- en: The perks don’t stop there, you can get exclusive access to discounts, newsletters,
    and great free content in your inbox daily
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow these simple steps to get the benefits:'
  prefs: []
  type: TYPE_NORMAL
- en: Scan the QR code or visit the link below
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B21662_QR_Free_PDF.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '[https://packt.link/free-ebook/9781837634132](https://packt.link/free-ebook/9781837634132)'
  prefs: []
  type: TYPE_NORMAL
- en: Submit your proof of purchase
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: That’s it! We’ll send your free PDF and other benefits to your email directly
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Part 1: Introduction'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this part, we will explore the foundational aspects of using Go for system
    programming. You will learn about the best practices in managing concurrency,
    and ensuring efficient cross-platform development. This section provides a closer
    look at why Go is a powerful choice for building high-performance system software
    and how to leverage its features to support real-world scenarios.
  prefs: []
  type: TYPE_NORMAL
- en: 'This part has the following chapters:'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 1*](B21662_01.xhtml#_idTextAnchor014), *Why Go?*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 2*](B21662_02.xhtml#_idTextAnchor031), *Refreshing Concurrency and
    Parallelism*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
