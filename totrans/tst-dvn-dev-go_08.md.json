["```go\nfunc BenchmarkGetIndex(b *testing.B) {\n  endpoint := getTestEndpoint(b)\n  for x := 0; x < b.N; x++ {\n    bks, err := http.Get(*endpoint)\n    assert.Nil(b, err)\n    assert.NotNil(b, bks)\n  }\n}\n```", "```go\n$ go test -bench BenchmarkGetIndex -cpuprofile cpu-books.out ./chapter08/performance\n```", "```go\npkg: github.com/PacktPublishing/Test-Driven-Development-in-Go/chapter08/performance\nBenchmarkGetIndex-8         1556            796124 ns/op\nPASS\nok      github.com/PacktPublishing/Test-Driven-Development-in-Go/chapter08/performance  2.600s\n```", "```go\n$ go tool pprof performance.test cpu-books.out\n```", "```go\n(pprof) top5      \nShowing nodes accounting for 550ms, 80.88% of 680ms total\nShowing top 5 nodes out of 91\n  flat  flat%   sum%   cum   cum%\n  180ms 26.47% 26.47%  180ms 26.47% runtime.pthread_cond_signal\n  120ms 17.65% 44.12%  120ms 17.65% runtime.kevent\n  100ms 14.71% 58.82%  100ms 14.71% runtime.cgocall\n  80ms  11.76% 70.59%  120ms 17.65% runtime.pthread_cond_wait\n  70ms  10.29% 80.88%  80ms  11.76% syscall.syscall\n```", "```go\nfunc ConfigureServer(handler *Handler) *mux.Router {\n  router := mux.NewRouter().StrictSlash(true)\n  // other handler functions\n  if os.Getenv(\"DEBUG\") != \"\" {\n    router.PathPrefix(\"/debug/pprof/\").\n      Handler(http.DefaultServeMux)\n}\n  return router\n}\n```", "```go\n$ curl --output book-swap-app \"http://localhost$BOOKSWAP_PORT/debug/pprof/profile?seconds=10\"\n```", "```go\n$ go tool pprof book-swap-app\n```", "```go\nfunc TestConsumerIndex_Local(t *testing.T) {\n  // Initialize\n  pact := dsl.Pact{\n    Consumer: \"Consumer\",\n    Provider: \"BookSwap\",\n  }\n  pact.Setup(true)\n  // Test case - makes the call to the provider\nvar test = func() (err error) {\n    baseURL, ok := os.LookupEnv(\"BOOKSWAP_BASE_URL\")\n    require.True(t, ok)\n    url := fmt.Sprintf(\"%s:%d/\", baseURL, pact.Server.Port)\n    req, err := http.NewRequest(\"GET\", url, nil)\n    assert.Nil(t, err)\n    req.Header.Set(\"Content-Type\", \"application/json\")\n    resp, err := http.DefaultClient.Do(req)\n    assert.Nil(t, err)\n    assert.NotNil(t, resp)\n    return\n   }\n   t.Run(\"get index\", func(t *testing.T) {\n     pact.AddInteraction().\n     Given(\"BookSwap is up\").\n     UponReceiving(\"GET / request\").\n     WithRequest(dsl.Request{\n       Method: \"GET\", Path: dsl.String(\"/\"),\n       Headers: dsl.MapMatcher{\n         \"Content-Type\":  dsl.String(\"application/json\"),\n       }\n     }).\n     WillRespondWith(dsl.Response{\n       Status: https.StatusOK,\n       Body: dsl.Like(handlers.Response{\n         Message: \"Welcome to the BookSwap Service!\",\n       }),\n      })\n      require.Nil(t, pact.Verify(test))\n    })\n    // Clean up\n    require.Nil(t, pact.WritePact())\n    pact.Teardown()\n}\n```", "```go\n$ LONG=true go test chapter08/contract_test/consumer_test.go -v === RUN   TestConsumerIndex_Local\n2023/01/08 16:19:36 [INFO] checking pact-mock-service within range >= 3.5.0, < 4.0.0\n2023/01/08 16:19:36 [INFO] checking pact-provider-verifier within range >= 1.36.1, < 2.0.0\n2023/01/08 16:19:37 [INFO] checking pact-broker within range >= 1.22.3\n2023/01/08 16:19:37 [INFO] INFO  WEBrick 1.3.1\n2023/01/08 16:19:37 [INFO] INFO  ruby 2.4.10 (2020-03-31) [x86_64-darwin19]\n2023/01/08 16:19:37 [INFO] INFO  WEBrick::HTTPServer#start: pid=83017 port=52412\n=== RUN   TestConsumerIndex_Local/get_index\n2023/01/08 16:19:37 [INFO] INFO  going to shutdown ...\n2023/01/08 16:19:38 [INFO] INFO  WEBrick::HTTPServer#start done.\n--- PASS: TestConsumerIndex_Local (1.67s)\n    --- PASS: TestConsumerIndex_Local/get_index (0.01s)\nPASS\nok      command-line-arguments  1.828s\n```", "```go\nfunc TestProviderIndex_Local(t *testing.T) {\n  // Initialise\n  pact := dsl.Pact{\n    Provider: \"BookSwap\",\n  }\n  url := getTestEndpoint(t)\n\n  // Verify\n  _, err := pact.VerifyProvider(t, types.VerifyRequest{\n    ProviderBaseURL: url,\n    PactURLs:        []string{PACTS_PATH},\n  })\n  require.Nil(t, err)\n}\n```", "```go\n$ LONG=true go test chapter08/contract_ test/provider_test.go -v \n=== RUN   TestProviderIndex_Local\n2023/01/08 17:46:09 [INFO] checking pact-mock-service within range >= 3.5.0, < 4.0.0\n2023/01/08 17:46:09 [INFO] checking pact-provider-verifier within range >= 1.36.1, < 2.0.0\n2023/01/08 17:46:09 [INFO] checking pact-broker within range >= 1.22.3\n=== RUN   TestProviderIndex_Local/Pact_between__and__\n=== RUN   TestProviderIndex_Local/has_status_code_200\n    pact.go:638: Verifying a pact between Consumer and BookSwap Given BookSwap is up GET / request with GET / returns a response which has status code 200\n=== RUN   TestProviderIndex_Local/has_a_matching_body\n    pact.go:638: Verifying a pact between Consumer and BookSwap Given BookSwap is up GET / request with GET / returns a response which has a matching body\n--- PASS: TestProviderIndex_Local (1.52s)\n    --- PASS: TestProviderIndex_Local/has_status_code_200 (0.00s)\n    --- PASS: TestProviderIndex_Local/has_a_matching_body (0.00s)\n    --- PASS: TestProviderIndex_Local/Pact_between__and__ (0.00s)\nPASS\nok      command-line-arguments  1.682s\n```"]